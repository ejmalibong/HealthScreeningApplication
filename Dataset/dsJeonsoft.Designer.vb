'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsJeonsoft"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsJeonsoft
    Inherits Global.System.Data.DataSet
    
    Private tabletblEmployees As tblEmployeesDataTable
    
    Private tabletblPositions As tblPositionsDataTable
    
    Private tabletblTeams As tblTeamsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblEmployees")) Is Nothing) Then
                MyBase.Tables.Add(New tblEmployeesDataTable(ds.Tables("tblEmployees")))
            End If
            If (Not (ds.Tables("tblPositions")) Is Nothing) Then
                MyBase.Tables.Add(New tblPositionsDataTable(ds.Tables("tblPositions")))
            End If
            If (Not (ds.Tables("tblTeams")) Is Nothing) Then
                MyBase.Tables.Add(New tblTeamsDataTable(ds.Tables("tblTeams")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblEmployees() As tblEmployeesDataTable
        Get
            Return Me.tabletblEmployees
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblPositions() As tblPositionsDataTable
        Get
            Return Me.tabletblPositions
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblTeams() As tblTeamsDataTable
        Get
            Return Me.tabletblTeams
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsJeonsoft = CType(MyBase.Clone,dsJeonsoft)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tblEmployees")) Is Nothing) Then
                MyBase.Tables.Add(New tblEmployeesDataTable(ds.Tables("tblEmployees")))
            End If
            If (Not (ds.Tables("tblPositions")) Is Nothing) Then
                MyBase.Tables.Add(New tblPositionsDataTable(ds.Tables("tblPositions")))
            End If
            If (Not (ds.Tables("tblTeams")) Is Nothing) Then
                MyBase.Tables.Add(New tblTeamsDataTable(ds.Tables("tblTeams")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletblEmployees = CType(MyBase.Tables("tblEmployees"),tblEmployeesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblEmployees) Is Nothing) Then
                Me.tabletblEmployees.InitVars
            End If
        End If
        Me.tabletblPositions = CType(MyBase.Tables("tblPositions"),tblPositionsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblPositions) Is Nothing) Then
                Me.tabletblPositions.InitVars
            End If
        End If
        Me.tabletblTeams = CType(MyBase.Tables("tblTeams"),tblTeamsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblTeams) Is Nothing) Then
                Me.tabletblTeams.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsJeonsoft"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsJeonsoft.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletblEmployees = New tblEmployeesDataTable()
        MyBase.Tables.Add(Me.tabletblEmployees)
        Me.tabletblPositions = New tblPositionsDataTable()
        MyBase.Tables.Add(Me.tabletblPositions)
        Me.tabletblTeams = New tblTeamsDataTable()
        MyBase.Tables.Add(Me.tabletblTeams)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetblEmployees() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetblPositions() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetblTeams() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsJeonsoft = New dsJeonsoft()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tblEmployeesRowChangeEventHandler(ByVal sender As Object, ByVal e As tblEmployeesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tblPositionsRowChangeEventHandler(ByVal sender As Object, ByVal e As tblPositionsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tblTeamsRowChangeEventHandler(ByVal sender As Object, ByVal e As tblTeamsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblEmployeesDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblEmployeesRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnCompanyId As Global.System.Data.DataColumn
        
        Private columnEmployeeCode As Global.System.Data.DataColumn
        
        Private columnAccessCode As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleName As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnAddressForeign As Global.System.Data.DataColumn
        
        Private columnZIPCodeAR As Global.System.Data.DataColumn
        
        Private columnZIPCodeAL As Global.System.Data.DataColumn
        
        Private columnZIPCodeAF As Global.System.Data.DataColumn
        
        Private columnTelNo As Global.System.Data.DataColumn
        
        Private columnTINNo As Global.System.Data.DataColumn
        
        Private columnBankAccountId As Global.System.Data.DataColumn
        
        Private columnBankAccountNo As Global.System.Data.DataColumn
        
        Private columnBankAccountTypeId As Global.System.Data.DataColumn
        
        Private columnSSSNo As Global.System.Data.DataColumn
        
        Private columnPagIbigNo As Global.System.Data.DataColumn
        
        Private columnPhilHealthNo As Global.System.Data.DataColumn
        
        Private columnIsWife As Global.System.Data.DataColumn
        
        Private columnRDOCode As Global.System.Data.DataColumn
        
        Private columnBirthDate As Global.System.Data.DataColumn
        
        Private columnDateHired As Global.System.Data.DataColumn
        
        Private columnDateSeparated As Global.System.Data.DataColumn
        
        Private columnDateRegular As Global.System.Data.DataColumn
        
        Private columnYearWithPreviousER As Global.System.Data.DataColumn
        
        Private columnShiftScheduleId As Global.System.Data.DataColumn
        
        Private columnEmploymentTypeId As Global.System.Data.DataColumn
        
        Private columnPaymentTypeId As Global.System.Data.DataColumn
        
        Private columnPayrollFrequencyId As Global.System.Data.DataColumn
        
        Private columnTaxCodeId As Global.System.Data.DataColumn
        
        Private columnPreviousRate As Global.System.Data.DataColumn
        
        Private columnRate As Global.System.Data.DataColumn
        
        Private columnMonthlyRate As Global.System.Data.DataColumn
        
        Private columnPreviousMonthlyRate As Global.System.Data.DataColumn
        
        Private columnDailyRate As Global.System.Data.DataColumn
        
        Private columnPreviousDailyRate As Global.System.Data.DataColumn
        
        Private columnHourlyRate As Global.System.Data.DataColumn
        
        Private columnPreviousHourlyRate As Global.System.Data.DataColumn
        
        Private columnPreviousAllowance As Global.System.Data.DataColumn
        
        Private columnAllowance As Global.System.Data.DataColumn
        
        Private columnMonthlyAllowance As Global.System.Data.DataColumn
        
        Private columnPreviousMonthlyAllowance As Global.System.Data.DataColumn
        
        Private columnDailyAllowance As Global.System.Data.DataColumn
        
        Private columnPreviousDailyAllowance As Global.System.Data.DataColumn
        
        Private columnHourlyAllowance As Global.System.Data.DataColumn
        
        Private columnPreviousHourlyAllowance As Global.System.Data.DataColumn
        
        Private columnCOLA As Global.System.Data.DataColumn
        
        Private columnMonthlyCOLA As Global.System.Data.DataColumn
        
        Private columnDailyCOLA As Global.System.Data.DataColumn
        
        Private columnHourlyCOLA As Global.System.Data.DataColumn
        
        Private columnFixTaxRate As Global.System.Data.DataColumn
        
        Private columnActive As Global.System.Data.DataColumn
        
        Private columnWithPreviousER As Global.System.Data.DataColumn
        
        Private columnParameterId As Global.System.Data.DataColumn
        
        Private columnPositionId As Global.System.Data.DataColumn
        
        Private columnMaritalStatusId As Global.System.Data.DataColumn
        
        Private columnGenderId As Global.System.Data.DataColumn
        
        Private columnTimeSourceId As Global.System.Data.DataColumn
        
        Private columnPicture As Global.System.Data.DataColumn
        
        Private columnCostCenterId As Global.System.Data.DataColumn
        
        Private columnDepartmentId As Global.System.Data.DataColumn
        
        Private columnCustomGroup1Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup2Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup3Id As Global.System.Data.DataColumn
        
        Private columnCustomField1 As Global.System.Data.DataColumn
        
        Private columnCustomField2 As Global.System.Data.DataColumn
        
        Private columnCustomField3 As Global.System.Data.DataColumn
        
        Private columnPayElementScheduleId As Global.System.Data.DataColumn
        
        Private columnEmailAddress As Global.System.Data.DataColumn
        
        Private columnIsSSS As Global.System.Data.DataColumn
        
        Private columnIsTax As Global.System.Data.DataColumn
        
        Private columnIsPHIC As Global.System.Data.DataColumn
        
        Private columnIsHDMF As Global.System.Data.DataColumn
        
        Private columnIsUnion As Global.System.Data.DataColumn
        
        Private columnIsEmailPayslip As Global.System.Data.DataColumn
        
        Private columnPayslipPassword As Global.System.Data.DataColumn
        
        Private columnDateEffective As Global.System.Data.DataColumn
        
        Private columnSystem As Global.System.Data.DataColumn
        
        Private columnLocationId As Global.System.Data.DataColumn
        
        Private columnVersionNo As Global.System.Data.DataColumn
        
        Private columnPayGroupId As Global.System.Data.DataColumn
        
        Private columnMobileNo As Global.System.Data.DataColumn
        
        Private columnDevicePassword As Global.System.Data.DataColumn
        
        Private columnLeaveAccrualScheduleId As Global.System.Data.DataColumn
        
        Private columnContractStartDate As Global.System.Data.DataColumn
        
        Private columnContractEndDate As Global.System.Data.DataColumn
        
        Private columnDaysInYear As Global.System.Data.DataColumn
        
        Private columnSupervisorId As Global.System.Data.DataColumn
        
        Private columnWTaxExempt As Global.System.Data.DataColumn
        
        Private columnMaxTaxableEarning As Global.System.Data.DataColumn
        
        Private columnTINBranch As Global.System.Data.DataColumn
        
        Private columnClassId As Global.System.Data.DataColumn
        
        Private columnMinNetPayForLoan As Global.System.Data.DataColumn
        
        Private columnMinNetPayForLoanTypeId As Global.System.Data.DataColumn
        
        Private columnApprovingId1 As Global.System.Data.DataColumn
        
        Private columnApprovingId2 As Global.System.Data.DataColumn
        
        Private columnEWTRate As Global.System.Data.DataColumn
        
        Private columnSecurityUserLevelId As Global.System.Data.DataColumn
        
        Private columnSecurityUserGroupId As Global.System.Data.DataColumn
        
        Private columnIsProcessed As Global.System.Data.DataColumn
        
        Private columnIsCleared As Global.System.Data.DataColumn
        
        Private columnDateCleared As Global.System.Data.DataColumn
        
        Private columnEmployeePassword As Global.System.Data.DataColumn
        
        Private columnIsClosed As Global.System.Data.DataColumn
        
        Private columnWebkioskRoleId As Global.System.Data.DataColumn
        
        Private columnTeamId As Global.System.Data.DataColumn
        
        Private columnRegionId As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnMotherMaidenName As Global.System.Data.DataColumn
        
        Private columnAlphanumericTaxCodeId As Global.System.Data.DataColumn
        
        Private columnResidenceStatusCodeId As Global.System.Data.DataColumn
        
        Private columnWebkioskLoginFailedAttempt As Global.System.Data.DataColumn
        
        Private columnIsMainEmployer As Global.System.Data.DataColumn
        
        Private columnNickname As Global.System.Data.DataColumn
        
        Private columnEmployeePasswordDate As Global.System.Data.DataColumn
        
        Private columnIsSubstitutedFiling As Global.System.Data.DataColumn
        
        Private columnPayslipPasswordDate As Global.System.Data.DataColumn
        
        Private columnSalutationId As Global.System.Data.DataColumn
        
        Private columnIsHusband As Global.System.Data.DataColumn
        
        Private columnYearSeparated As Global.System.Data.DataColumn
        
        Private columnRemarksEmploymentInformation As Global.System.Data.DataColumn
        
        Private columnLeaveForfeitScheduleId As Global.System.Data.DataColumn
        
        Private columnPayoutTypeId As Global.System.Data.DataColumn
        
        Private columnCitizenshipId As Global.System.Data.DataColumn
        
        Private columnCustomGroup4Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup5Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup6Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup7Id As Global.System.Data.DataColumn
        
        Private columnCustomGroup8Id As Global.System.Data.DataColumn
        
        Private columnCustomDateField1 As Global.System.Data.DataColumn
        
        Private columnCustomDateField2 As Global.System.Data.DataColumn
        
        Private columnCustomDateField3 As Global.System.Data.DataColumn
        
        Private columnCustomDateField4 As Global.System.Data.DataColumn
        
        Private columnCustomDateField5 As Global.System.Data.DataColumn
        
        Private columnCustomField4 As Global.System.Data.DataColumn
        
        Private columnCustomField5 As Global.System.Data.DataColumn
        
        Private columnCustomField6 As Global.System.Data.DataColumn
        
        Private columnCustomField7 As Global.System.Data.DataColumn
        
        Private columnCustomField8 As Global.System.Data.DataColumn
        
        Private columnSeparationPayTypeId As Global.System.Data.DataColumn
        
        Private columnShiftScheduleTemplateGroupId As Global.System.Data.DataColumn
        
        Private columnDateFiledofResignation As Global.System.Data.DataColumn
        
        Private columnReasonForLeaving As Global.System.Data.DataColumn
        
        Private columnIsRehirable As Global.System.Data.DataColumn
        
        Private columnClearanceStatusId As Global.System.Data.DataColumn
        
        Private columnClearanceIssuedById As Global.System.Data.DataColumn
        
        Private columnWaiverAndQuitclaimFinalPay As Global.System.Data.DataColumn
        
        Private columnIsReleasedWaiverAndQuitclaim As Global.System.Data.DataColumn
        
        Private columnWaiverAndQuitclaimDateReleased As Global.System.Data.DataColumn
        
        Private columnWaiverAndQuitclaimReleasedById As Global.System.Data.DataColumn
        
        Private columnCardNum As Global.System.Data.DataColumn
        
        Private columnReasonForLeavingType As Global.System.Data.DataColumn
        
        Private columnHDMFID As Global.System.Data.DataColumn
        
        Private columnLineage As Global.System.Data.DataColumn
        
        Private columnLineageDepth As Global.System.Data.DataColumn
        
        Private columnCompanyBranchId As Global.System.Data.DataColumn
        
        Private columnAllocationPayoutNo As Global.System.Data.DataColumn
        
        Private columnAllocationTypeId As Global.System.Data.DataColumn
        
        Private columnAllocationValue As Global.System.Data.DataColumn
        
        Private columnPayrollAccountBranchCode As Global.System.Data.DataColumn
        
        Private columnAddressRegistered As Global.System.Data.DataColumn
        
        Private columnAddressLocal As Global.System.Data.DataColumn
        
        Private columnCTCNo As Global.System.Data.DataColumn
        
        Private columnCustomDateField6 As Global.System.Data.DataColumn
        
        Private columnCustomDateField7 As Global.System.Data.DataColumn
        
        Private columnCustomDateField8 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox1 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox2 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox3 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox4 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox5 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox6 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox7 As Global.System.Data.DataColumn
        
        Private columnCustomCheckbox8 As Global.System.Data.DataColumn
        
        Private columnBackPayCoverageFromDate As Global.System.Data.DataColumn
        
        Private columnBackPayCoverageToDate As Global.System.Data.DataColumn
        
        Private columnPlainSSSNo As Global.System.Data.DataColumn
        
        Private columnMinTakeHomePayBasisId As Global.System.Data.DataColumn
        
        Private columnSuffixId As Global.System.Data.DataColumn
        
        Private columnConcurrentEmployerName As Global.System.Data.DataColumn
        
        Private columnConcurrentEmployerTIN As Global.System.Data.DataColumn
        
        Private columnConcurrentEmployerTINBranch As Global.System.Data.DataColumn
        
        Private columnDateEffectivityBasis As Global.System.Data.DataColumn
        
        Private columnFormalName As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnFullName As Global.System.Data.DataColumn
        
        Private columnReasonForSeparationId As Global.System.Data.DataColumn
        
        Private columnNationalityId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblEmployees"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmployeeCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeeCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccessCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccessCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MiddleNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AddressForeignColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddressForeign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZIPCodeARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCodeAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZIPCodeALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCodeAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZIPCodeAFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCodeAF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TINNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BankAccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankAccountId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BankAccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BankAccountTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankAccountTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SSSNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSSNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PagIbigNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPagIbigNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PhilHealthNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhilHealthNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsWifeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsWife
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RDOCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRDOCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BirthDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBirthDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateHiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateHired
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateSeparatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateSeparated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateRegularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateRegular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearWithPreviousERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearWithPreviousER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShiftScheduleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShiftScheduleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmploymentTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmploymentTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PaymentTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayrollFrequencyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayrollFrequencyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TaxCodeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxCodeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MonthlyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthlyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousMonthlyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousMonthlyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DailyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDailyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousDailyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousDailyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HourlyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHourlyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousHourlyRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousHourlyRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MonthlyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthlyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousMonthlyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousMonthlyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DailyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDailyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousDailyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousDailyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HourlyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHourlyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PreviousHourlyAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviousHourlyAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MonthlyCOLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthlyCOLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DailyCOLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDailyCOLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HourlyCOLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHourlyCOLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FixTaxRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFixTaxRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WithPreviousERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithPreviousER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParameterIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParameterId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PositionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPositionId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaritalStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStatusId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GenderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGenderId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TimeSourceIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeSourceId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PictureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicture
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CostCenterIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostCenterId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup1IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup1Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup2IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup2Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup3IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup3Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayElementScheduleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayElementScheduleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmailAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsSSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsPHICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsPHIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsHDMFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsHDMF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsUnionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsUnion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsEmailPayslipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsEmailPayslip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayslipPasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayslipPassword
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateEffectiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateEffective
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SystemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSystem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LocationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VersionNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersionNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayGroupIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayGroupId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MobileNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobileNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DevicePasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDevicePassword
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LeaveAccrualScheduleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeaveAccrualScheduleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ContractStartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContractStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ContractEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContractEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DaysInYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDaysInYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupervisorIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupervisorId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WTaxExemptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWTaxExempt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxTaxableEarningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxTaxableEarning
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TINBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ClassIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClassId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MinNetPayForLoanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinNetPayForLoan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MinNetPayForLoanTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinNetPayForLoanTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ApprovingId1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovingId1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ApprovingId2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovingId2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EWTRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEWTRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SecurityUserLevelIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecurityUserLevelId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SecurityUserGroupIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecurityUserGroupId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsProcessedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProcessed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsClearedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsCleared
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateClearedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCleared
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmployeePasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeePassword
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsClosedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsClosed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WebkioskRoleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebkioskRoleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TeamIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeamId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegionId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MotherMaidenNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotherMaidenName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AlphanumericTaxCodeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlphanumericTaxCodeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResidenceStatusCodeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResidenceStatusCodeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WebkioskLoginFailedAttemptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebkioskLoginFailedAttempt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsMainEmployerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsMainEmployer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NicknameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNickname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmployeePasswordDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeePasswordDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsSubstitutedFilingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSubstitutedFiling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayslipPasswordDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayslipPasswordDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SalutationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalutationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsHusbandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsHusband
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearSeparatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearSeparated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RemarksEmploymentInformationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarksEmploymentInformation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LeaveForfeitScheduleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeaveForfeitScheduleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayoutTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayoutTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CitizenshipIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCitizenshipId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup4IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup4Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup5IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup5Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup6IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup6Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup7IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup7Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomGroup8IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomGroup8Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomField8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SeparationPayTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeparationPayTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShiftScheduleTemplateGroupIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShiftScheduleTemplateGroupId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateFiledofResignationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateFiledofResignation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReasonForLeavingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReasonForLeaving
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsRehirableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRehirable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ClearanceStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClearanceStatusId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ClearanceIssuedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClearanceIssuedById
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WaiverAndQuitclaimFinalPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaiverAndQuitclaimFinalPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsReleasedWaiverAndQuitclaimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsReleasedWaiverAndQuitclaim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WaiverAndQuitclaimDateReleasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaiverAndQuitclaimDateReleased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WaiverAndQuitclaimReleasedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaiverAndQuitclaimReleasedById
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CardNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCardNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReasonForLeavingTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReasonForLeavingType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HDMFIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDMFID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LineageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LineageDepthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineageDepth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyBranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AllocationPayoutNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllocationPayoutNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AllocationTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllocationTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AllocationValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllocationValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayrollAccountBranchCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayrollAccountBranchCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AddressRegisteredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddressRegistered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AddressLocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddressLocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CTCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomDateField8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomDateField8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomCheckbox8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomCheckbox8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BackPayCoverageFromDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackPayCoverageFromDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BackPayCoverageToDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackPayCoverageToDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PlainSSSNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlainSSSNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MinTakeHomePayBasisIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinTakeHomePayBasisId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SuffixIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuffixId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConcurrentEmployerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcurrentEmployerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConcurrentEmployerTINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcurrentEmployerTIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConcurrentEmployerTINBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcurrentEmployerTINBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateEffectivityBasisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateEffectivityBasis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FormalNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormalName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReasonForSeparationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReasonForSeparationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NationalityIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalityId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblEmployeesRow
            Get
                Return CType(Me.Rows(index),tblEmployeesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblEmployeesRowChanging As tblEmployeesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblEmployeesRowChanged As tblEmployeesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblEmployeesRowDeleting As tblEmployeesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblEmployeesRowDeleted As tblEmployeesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddtblEmployeesRow(ByVal row As tblEmployeesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddtblEmployeesRow( _
                    ByVal CompanyId As Integer,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccessCode As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal AddressForeign As String,  _
                    ByVal ZIPCodeAR As String,  _
                    ByVal ZIPCodeAL As String,  _
                    ByVal ZIPCodeAF As String,  _
                    ByVal TelNo As String,  _
                    ByVal TINNo As String,  _
                    ByVal BankAccountId As Integer,  _
                    ByVal BankAccountNo As String,  _
                    ByVal BankAccountTypeId As Integer,  _
                    ByVal SSSNo As String,  _
                    ByVal PagIbigNo As String,  _
                    ByVal PhilHealthNo As String,  _
                    ByVal IsWife As Boolean,  _
                    ByVal RDOCode As String,  _
                    ByVal BirthDate As Date,  _
                    ByVal DateHired As Date,  _
                    ByVal DateSeparated As Date,  _
                    ByVal DateRegular As Date,  _
                    ByVal YearWithPreviousER As Integer,  _
                    ByVal ShiftScheduleId As Integer,  _
                    ByVal EmploymentTypeId As Integer,  _
                    ByVal PaymentTypeId As Integer,  _
                    ByVal PayrollFrequencyId As Integer,  _
                    ByVal TaxCodeId As Integer,  _
                    ByVal PreviousRate As Double,  _
                    ByVal Rate As Double,  _
                    ByVal MonthlyRate As Double,  _
                    ByVal PreviousMonthlyRate As Double,  _
                    ByVal DailyRate As Double,  _
                    ByVal PreviousDailyRate As Double,  _
                    ByVal HourlyRate As Double,  _
                    ByVal PreviousHourlyRate As Double,  _
                    ByVal PreviousAllowance As Double,  _
                    ByVal Allowance As Double,  _
                    ByVal MonthlyAllowance As Double,  _
                    ByVal PreviousMonthlyAllowance As Double,  _
                    ByVal DailyAllowance As Double,  _
                    ByVal PreviousDailyAllowance As Double,  _
                    ByVal HourlyAllowance As Double,  _
                    ByVal PreviousHourlyAllowance As Double,  _
                    ByVal COLA As Double,  _
                    ByVal MonthlyCOLA As Double,  _
                    ByVal DailyCOLA As Double,  _
                    ByVal HourlyCOLA As Double,  _
                    ByVal FixTaxRate As Double,  _
                    ByVal Active As Boolean,  _
                    ByVal WithPreviousER As Boolean,  _
                    ByVal ParameterId As Integer,  _
                    ByVal PositionId As Integer,  _
                    ByVal MaritalStatusId As Integer,  _
                    ByVal GenderId As Integer,  _
                    ByVal TimeSourceId As Integer,  _
                    ByVal Picture() As Byte,  _
                    ByVal CostCenterId As Integer,  _
                    ByVal DepartmentId As Integer,  _
                    ByVal CustomGroup1Id As Integer,  _
                    ByVal CustomGroup2Id As Integer,  _
                    ByVal CustomGroup3Id As Integer,  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal PayElementScheduleId As Integer,  _
                    ByVal EmailAddress As String,  _
                    ByVal IsSSS As Boolean,  _
                    ByVal IsTax As Boolean,  _
                    ByVal IsPHIC As Boolean,  _
                    ByVal IsHDMF As Boolean,  _
                    ByVal IsUnion As Boolean,  _
                    ByVal IsEmailPayslip As Boolean,  _
                    ByVal PayslipPassword As String,  _
                    ByVal DateEffective As Date,  _
                    ByVal System As Boolean,  _
                    ByVal LocationId As Integer,  _
                    ByVal VersionNo As Integer,  _
                    ByVal PayGroupId As Integer,  _
                    ByVal MobileNo As String,  _
                    ByVal DevicePassword As String,  _
                    ByVal LeaveAccrualScheduleId As Integer,  _
                    ByVal ContractStartDate As Date,  _
                    ByVal ContractEndDate As Date,  _
                    ByVal DaysInYear As Double,  _
                    ByVal SupervisorId As Integer,  _
                    ByVal WTaxExempt As Boolean,  _
                    ByVal MaxTaxableEarning As Decimal,  _
                    ByVal TINBranch As String,  _
                    ByVal ClassId As Integer,  _
                    ByVal MinNetPayForLoan As Double,  _
                    ByVal MinNetPayForLoanTypeId As Integer,  _
                    ByVal ApprovingId1 As Integer,  _
                    ByVal ApprovingId2 As Integer,  _
                    ByVal EWTRate As Double,  _
                    ByVal SecurityUserLevelId As Integer,  _
                    ByVal SecurityUserGroupId As Integer,  _
                    ByVal IsProcessed As Boolean,  _
                    ByVal IsCleared As Boolean,  _
                    ByVal DateCleared As Date,  _
                    ByVal EmployeePassword As String,  _
                    ByVal IsClosed As Boolean,  _
                    ByVal WebkioskRoleId As Integer,  _
                    ByVal TeamId As Integer,  _
                    ByVal RegionId As Integer,  _
                    ByVal Remarks As String,  _
                    ByVal MotherMaidenName As String,  _
                    ByVal AlphanumericTaxCodeId As Integer,  _
                    ByVal ResidenceStatusCodeId As Integer,  _
                    ByVal WebkioskLoginFailedAttempt As Integer,  _
                    ByVal IsMainEmployer As Boolean,  _
                    ByVal Nickname As String,  _
                    ByVal EmployeePasswordDate As Date,  _
                    ByVal IsSubstitutedFiling As Boolean,  _
                    ByVal PayslipPasswordDate As Date,  _
                    ByVal SalutationId As Integer,  _
                    ByVal IsHusband As Boolean,  _
                    ByVal YearSeparated As Integer,  _
                    ByVal RemarksEmploymentInformation As String,  _
                    ByVal LeaveForfeitScheduleId As Integer,  _
                    ByVal PayoutTypeId As Integer,  _
                    ByVal CitizenshipId As Integer,  _
                    ByVal CustomGroup4Id As Integer,  _
                    ByVal CustomGroup5Id As Integer,  _
                    ByVal CustomGroup6Id As Integer,  _
                    ByVal CustomGroup7Id As Integer,  _
                    ByVal CustomGroup8Id As Integer,  _
                    ByVal CustomDateField1 As Date,  _
                    ByVal CustomDateField2 As Date,  _
                    ByVal CustomDateField3 As Date,  _
                    ByVal CustomDateField4 As Date,  _
                    ByVal CustomDateField5 As Date,  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal SeparationPayTypeId As Integer,  _
                    ByVal ShiftScheduleTemplateGroupId As Integer,  _
                    ByVal DateFiledofResignation As Date,  _
                    ByVal ReasonForLeaving As String,  _
                    ByVal IsRehirable As Boolean,  _
                    ByVal ClearanceStatusId As Integer,  _
                    ByVal ClearanceIssuedById As Integer,  _
                    ByVal WaiverAndQuitclaimFinalPay As Double,  _
                    ByVal IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal WaiverAndQuitclaimDateReleased As Date,  _
                    ByVal WaiverAndQuitclaimReleasedById As Integer,  _
                    ByVal CardNum As String,  _
                    ByVal ReasonForLeavingType As String,  _
                    ByVal HDMFID As String,  _
                    ByVal Lineage As String,  _
                    ByVal LineageDepth As Integer,  _
                    ByVal CompanyBranchId As Integer,  _
                    ByVal AllocationPayoutNo As Integer,  _
                    ByVal AllocationTypeId As Integer,  _
                    ByVal AllocationValue As Decimal,  _
                    ByVal PayrollAccountBranchCode As String,  _
                    ByVal AddressRegistered As String,  _
                    ByVal AddressLocal As String,  _
                    ByVal CTCNo As String,  _
                    ByVal CustomDateField6 As Date,  _
                    ByVal CustomDateField7 As Date,  _
                    ByVal CustomDateField8 As Date,  _
                    ByVal CustomCheckbox1 As Boolean,  _
                    ByVal CustomCheckbox2 As Boolean,  _
                    ByVal CustomCheckbox3 As Boolean,  _
                    ByVal CustomCheckbox4 As Boolean,  _
                    ByVal CustomCheckbox5 As Boolean,  _
                    ByVal CustomCheckbox6 As Boolean,  _
                    ByVal CustomCheckbox7 As Boolean,  _
                    ByVal CustomCheckbox8 As Boolean,  _
                    ByVal BackPayCoverageFromDate As Date,  _
                    ByVal BackPayCoverageToDate As Date,  _
                    ByVal PlainSSSNo As String,  _
                    ByVal MinTakeHomePayBasisId As Integer,  _
                    ByVal SuffixId As Integer,  _
                    ByVal ConcurrentEmployerName As String,  _
                    ByVal ConcurrentEmployerTIN As String,  _
                    ByVal ConcurrentEmployerTINBranch As String,  _
                    ByVal DateEffectivityBasis As Integer,  _
                    ByVal FormalName As String,  _
                    ByVal Name As String,  _
                    ByVal FullName As String,  _
                    ByVal ReasonForSeparationId As Integer,  _
                    ByVal NationalityId As Integer) As tblEmployeesRow
            Dim rowtblEmployeesRow As tblEmployeesRow = CType(Me.NewRow,tblEmployeesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CompanyId, EmployeeCode, AccessCode, FirstName, MiddleName, LastName, AddressForeign, ZIPCodeAR, ZIPCodeAL, ZIPCodeAF, TelNo, TINNo, BankAccountId, BankAccountNo, BankAccountTypeId, SSSNo, PagIbigNo, PhilHealthNo, IsWife, RDOCode, BirthDate, DateHired, DateSeparated, DateRegular, YearWithPreviousER, ShiftScheduleId, EmploymentTypeId, PaymentTypeId, PayrollFrequencyId, TaxCodeId, PreviousRate, Rate, MonthlyRate, PreviousMonthlyRate, DailyRate, PreviousDailyRate, HourlyRate, PreviousHourlyRate, PreviousAllowance, Allowance, MonthlyAllowance, PreviousMonthlyAllowance, DailyAllowance, PreviousDailyAllowance, HourlyAllowance, PreviousHourlyAllowance, COLA, MonthlyCOLA, DailyCOLA, HourlyCOLA, FixTaxRate, Active, WithPreviousER, ParameterId, PositionId, MaritalStatusId, GenderId, TimeSourceId, Picture, CostCenterId, DepartmentId, CustomGroup1Id, CustomGroup2Id, CustomGroup3Id, CustomField1, CustomField2, CustomField3, PayElementScheduleId, EmailAddress, IsSSS, IsTax, IsPHIC, IsHDMF, IsUnion, IsEmailPayslip, PayslipPassword, DateEffective, System, LocationId, VersionNo, PayGroupId, MobileNo, DevicePassword, LeaveAccrualScheduleId, ContractStartDate, ContractEndDate, DaysInYear, SupervisorId, WTaxExempt, MaxTaxableEarning, TINBranch, ClassId, MinNetPayForLoan, MinNetPayForLoanTypeId, ApprovingId1, ApprovingId2, EWTRate, SecurityUserLevelId, SecurityUserGroupId, IsProcessed, IsCleared, DateCleared, EmployeePassword, IsClosed, WebkioskRoleId, TeamId, RegionId, Remarks, MotherMaidenName, AlphanumericTaxCodeId, ResidenceStatusCodeId, WebkioskLoginFailedAttempt, IsMainEmployer, Nickname, EmployeePasswordDate, IsSubstitutedFiling, PayslipPasswordDate, SalutationId, IsHusband, YearSeparated, RemarksEmploymentInformation, LeaveForfeitScheduleId, PayoutTypeId, CitizenshipId, CustomGroup4Id, CustomGroup5Id, CustomGroup6Id, CustomGroup7Id, CustomGroup8Id, CustomDateField1, CustomDateField2, CustomDateField3, CustomDateField4, CustomDateField5, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, SeparationPayTypeId, ShiftScheduleTemplateGroupId, DateFiledofResignation, ReasonForLeaving, IsRehirable, ClearanceStatusId, ClearanceIssuedById, WaiverAndQuitclaimFinalPay, IsReleasedWaiverAndQuitclaim, WaiverAndQuitclaimDateReleased, WaiverAndQuitclaimReleasedById, CardNum, ReasonForLeavingType, HDMFID, Lineage, LineageDepth, CompanyBranchId, AllocationPayoutNo, AllocationTypeId, AllocationValue, PayrollAccountBranchCode, AddressRegistered, AddressLocal, CTCNo, CustomDateField6, CustomDateField7, CustomDateField8, CustomCheckbox1, CustomCheckbox2, CustomCheckbox3, CustomCheckbox4, CustomCheckbox5, CustomCheckbox6, CustomCheckbox7, CustomCheckbox8, BackPayCoverageFromDate, BackPayCoverageToDate, PlainSSSNo, MinTakeHomePayBasisId, SuffixId, ConcurrentEmployerName, ConcurrentEmployerTIN, ConcurrentEmployerTINBranch, DateEffectivityBasis, FormalName, Name, FullName, ReasonForSeparationId, NationalityId}
            rowtblEmployeesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblEmployeesRow)
            Return rowtblEmployeesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByIdCompanyId(ByVal Id As Integer, ByVal CompanyId As Integer) As tblEmployeesRow
            Return CType(Me.Rows.Find(New Object() {Id, CompanyId}),tblEmployeesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblEmployeesDataTable = CType(MyBase.Clone,tblEmployeesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblEmployeesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnCompanyId = MyBase.Columns("CompanyId")
            Me.columnEmployeeCode = MyBase.Columns("EmployeeCode")
            Me.columnAccessCode = MyBase.Columns("AccessCode")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleName = MyBase.Columns("MiddleName")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnAddressForeign = MyBase.Columns("AddressForeign")
            Me.columnZIPCodeAR = MyBase.Columns("ZIPCodeAR")
            Me.columnZIPCodeAL = MyBase.Columns("ZIPCodeAL")
            Me.columnZIPCodeAF = MyBase.Columns("ZIPCodeAF")
            Me.columnTelNo = MyBase.Columns("TelNo")
            Me.columnTINNo = MyBase.Columns("TINNo")
            Me.columnBankAccountId = MyBase.Columns("BankAccountId")
            Me.columnBankAccountNo = MyBase.Columns("BankAccountNo")
            Me.columnBankAccountTypeId = MyBase.Columns("BankAccountTypeId")
            Me.columnSSSNo = MyBase.Columns("SSSNo")
            Me.columnPagIbigNo = MyBase.Columns("PagIbigNo")
            Me.columnPhilHealthNo = MyBase.Columns("PhilHealthNo")
            Me.columnIsWife = MyBase.Columns("IsWife")
            Me.columnRDOCode = MyBase.Columns("RDOCode")
            Me.columnBirthDate = MyBase.Columns("BirthDate")
            Me.columnDateHired = MyBase.Columns("DateHired")
            Me.columnDateSeparated = MyBase.Columns("DateSeparated")
            Me.columnDateRegular = MyBase.Columns("DateRegular")
            Me.columnYearWithPreviousER = MyBase.Columns("YearWithPreviousER")
            Me.columnShiftScheduleId = MyBase.Columns("ShiftScheduleId")
            Me.columnEmploymentTypeId = MyBase.Columns("EmploymentTypeId")
            Me.columnPaymentTypeId = MyBase.Columns("PaymentTypeId")
            Me.columnPayrollFrequencyId = MyBase.Columns("PayrollFrequencyId")
            Me.columnTaxCodeId = MyBase.Columns("TaxCodeId")
            Me.columnPreviousRate = MyBase.Columns("PreviousRate")
            Me.columnRate = MyBase.Columns("Rate")
            Me.columnMonthlyRate = MyBase.Columns("MonthlyRate")
            Me.columnPreviousMonthlyRate = MyBase.Columns("PreviousMonthlyRate")
            Me.columnDailyRate = MyBase.Columns("DailyRate")
            Me.columnPreviousDailyRate = MyBase.Columns("PreviousDailyRate")
            Me.columnHourlyRate = MyBase.Columns("HourlyRate")
            Me.columnPreviousHourlyRate = MyBase.Columns("PreviousHourlyRate")
            Me.columnPreviousAllowance = MyBase.Columns("PreviousAllowance")
            Me.columnAllowance = MyBase.Columns("Allowance")
            Me.columnMonthlyAllowance = MyBase.Columns("MonthlyAllowance")
            Me.columnPreviousMonthlyAllowance = MyBase.Columns("PreviousMonthlyAllowance")
            Me.columnDailyAllowance = MyBase.Columns("DailyAllowance")
            Me.columnPreviousDailyAllowance = MyBase.Columns("PreviousDailyAllowance")
            Me.columnHourlyAllowance = MyBase.Columns("HourlyAllowance")
            Me.columnPreviousHourlyAllowance = MyBase.Columns("PreviousHourlyAllowance")
            Me.columnCOLA = MyBase.Columns("COLA")
            Me.columnMonthlyCOLA = MyBase.Columns("MonthlyCOLA")
            Me.columnDailyCOLA = MyBase.Columns("DailyCOLA")
            Me.columnHourlyCOLA = MyBase.Columns("HourlyCOLA")
            Me.columnFixTaxRate = MyBase.Columns("FixTaxRate")
            Me.columnActive = MyBase.Columns("Active")
            Me.columnWithPreviousER = MyBase.Columns("WithPreviousER")
            Me.columnParameterId = MyBase.Columns("ParameterId")
            Me.columnPositionId = MyBase.Columns("PositionId")
            Me.columnMaritalStatusId = MyBase.Columns("MaritalStatusId")
            Me.columnGenderId = MyBase.Columns("GenderId")
            Me.columnTimeSourceId = MyBase.Columns("TimeSourceId")
            Me.columnPicture = MyBase.Columns("Picture")
            Me.columnCostCenterId = MyBase.Columns("CostCenterId")
            Me.columnDepartmentId = MyBase.Columns("DepartmentId")
            Me.columnCustomGroup1Id = MyBase.Columns("CustomGroup1Id")
            Me.columnCustomGroup2Id = MyBase.Columns("CustomGroup2Id")
            Me.columnCustomGroup3Id = MyBase.Columns("CustomGroup3Id")
            Me.columnCustomField1 = MyBase.Columns("CustomField1")
            Me.columnCustomField2 = MyBase.Columns("CustomField2")
            Me.columnCustomField3 = MyBase.Columns("CustomField3")
            Me.columnPayElementScheduleId = MyBase.Columns("PayElementScheduleId")
            Me.columnEmailAddress = MyBase.Columns("EmailAddress")
            Me.columnIsSSS = MyBase.Columns("IsSSS")
            Me.columnIsTax = MyBase.Columns("IsTax")
            Me.columnIsPHIC = MyBase.Columns("IsPHIC")
            Me.columnIsHDMF = MyBase.Columns("IsHDMF")
            Me.columnIsUnion = MyBase.Columns("IsUnion")
            Me.columnIsEmailPayslip = MyBase.Columns("IsEmailPayslip")
            Me.columnPayslipPassword = MyBase.Columns("PayslipPassword")
            Me.columnDateEffective = MyBase.Columns("DateEffective")
            Me.columnSystem = MyBase.Columns("System")
            Me.columnLocationId = MyBase.Columns("LocationId")
            Me.columnVersionNo = MyBase.Columns("VersionNo")
            Me.columnPayGroupId = MyBase.Columns("PayGroupId")
            Me.columnMobileNo = MyBase.Columns("MobileNo")
            Me.columnDevicePassword = MyBase.Columns("DevicePassword")
            Me.columnLeaveAccrualScheduleId = MyBase.Columns("LeaveAccrualScheduleId")
            Me.columnContractStartDate = MyBase.Columns("ContractStartDate")
            Me.columnContractEndDate = MyBase.Columns("ContractEndDate")
            Me.columnDaysInYear = MyBase.Columns("DaysInYear")
            Me.columnSupervisorId = MyBase.Columns("SupervisorId")
            Me.columnWTaxExempt = MyBase.Columns("WTaxExempt")
            Me.columnMaxTaxableEarning = MyBase.Columns("MaxTaxableEarning")
            Me.columnTINBranch = MyBase.Columns("TINBranch")
            Me.columnClassId = MyBase.Columns("ClassId")
            Me.columnMinNetPayForLoan = MyBase.Columns("MinNetPayForLoan")
            Me.columnMinNetPayForLoanTypeId = MyBase.Columns("MinNetPayForLoanTypeId")
            Me.columnApprovingId1 = MyBase.Columns("ApprovingId1")
            Me.columnApprovingId2 = MyBase.Columns("ApprovingId2")
            Me.columnEWTRate = MyBase.Columns("EWTRate")
            Me.columnSecurityUserLevelId = MyBase.Columns("SecurityUserLevelId")
            Me.columnSecurityUserGroupId = MyBase.Columns("SecurityUserGroupId")
            Me.columnIsProcessed = MyBase.Columns("IsProcessed")
            Me.columnIsCleared = MyBase.Columns("IsCleared")
            Me.columnDateCleared = MyBase.Columns("DateCleared")
            Me.columnEmployeePassword = MyBase.Columns("EmployeePassword")
            Me.columnIsClosed = MyBase.Columns("IsClosed")
            Me.columnWebkioskRoleId = MyBase.Columns("WebkioskRoleId")
            Me.columnTeamId = MyBase.Columns("TeamId")
            Me.columnRegionId = MyBase.Columns("RegionId")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnMotherMaidenName = MyBase.Columns("MotherMaidenName")
            Me.columnAlphanumericTaxCodeId = MyBase.Columns("AlphanumericTaxCodeId")
            Me.columnResidenceStatusCodeId = MyBase.Columns("ResidenceStatusCodeId")
            Me.columnWebkioskLoginFailedAttempt = MyBase.Columns("WebkioskLoginFailedAttempt")
            Me.columnIsMainEmployer = MyBase.Columns("IsMainEmployer")
            Me.columnNickname = MyBase.Columns("Nickname")
            Me.columnEmployeePasswordDate = MyBase.Columns("EmployeePasswordDate")
            Me.columnIsSubstitutedFiling = MyBase.Columns("IsSubstitutedFiling")
            Me.columnPayslipPasswordDate = MyBase.Columns("PayslipPasswordDate")
            Me.columnSalutationId = MyBase.Columns("SalutationId")
            Me.columnIsHusband = MyBase.Columns("IsHusband")
            Me.columnYearSeparated = MyBase.Columns("YearSeparated")
            Me.columnRemarksEmploymentInformation = MyBase.Columns("RemarksEmploymentInformation")
            Me.columnLeaveForfeitScheduleId = MyBase.Columns("LeaveForfeitScheduleId")
            Me.columnPayoutTypeId = MyBase.Columns("PayoutTypeId")
            Me.columnCitizenshipId = MyBase.Columns("CitizenshipId")
            Me.columnCustomGroup4Id = MyBase.Columns("CustomGroup4Id")
            Me.columnCustomGroup5Id = MyBase.Columns("CustomGroup5Id")
            Me.columnCustomGroup6Id = MyBase.Columns("CustomGroup6Id")
            Me.columnCustomGroup7Id = MyBase.Columns("CustomGroup7Id")
            Me.columnCustomGroup8Id = MyBase.Columns("CustomGroup8Id")
            Me.columnCustomDateField1 = MyBase.Columns("CustomDateField1")
            Me.columnCustomDateField2 = MyBase.Columns("CustomDateField2")
            Me.columnCustomDateField3 = MyBase.Columns("CustomDateField3")
            Me.columnCustomDateField4 = MyBase.Columns("CustomDateField4")
            Me.columnCustomDateField5 = MyBase.Columns("CustomDateField5")
            Me.columnCustomField4 = MyBase.Columns("CustomField4")
            Me.columnCustomField5 = MyBase.Columns("CustomField5")
            Me.columnCustomField6 = MyBase.Columns("CustomField6")
            Me.columnCustomField7 = MyBase.Columns("CustomField7")
            Me.columnCustomField8 = MyBase.Columns("CustomField8")
            Me.columnSeparationPayTypeId = MyBase.Columns("SeparationPayTypeId")
            Me.columnShiftScheduleTemplateGroupId = MyBase.Columns("ShiftScheduleTemplateGroupId")
            Me.columnDateFiledofResignation = MyBase.Columns("DateFiledofResignation")
            Me.columnReasonForLeaving = MyBase.Columns("ReasonForLeaving")
            Me.columnIsRehirable = MyBase.Columns("IsRehirable")
            Me.columnClearanceStatusId = MyBase.Columns("ClearanceStatusId")
            Me.columnClearanceIssuedById = MyBase.Columns("ClearanceIssuedById")
            Me.columnWaiverAndQuitclaimFinalPay = MyBase.Columns("WaiverAndQuitclaimFinalPay")
            Me.columnIsReleasedWaiverAndQuitclaim = MyBase.Columns("IsReleasedWaiverAndQuitclaim")
            Me.columnWaiverAndQuitclaimDateReleased = MyBase.Columns("WaiverAndQuitclaimDateReleased")
            Me.columnWaiverAndQuitclaimReleasedById = MyBase.Columns("WaiverAndQuitclaimReleasedById")
            Me.columnCardNum = MyBase.Columns("CardNum")
            Me.columnReasonForLeavingType = MyBase.Columns("ReasonForLeavingType")
            Me.columnHDMFID = MyBase.Columns("HDMFID")
            Me.columnLineage = MyBase.Columns("Lineage")
            Me.columnLineageDepth = MyBase.Columns("LineageDepth")
            Me.columnCompanyBranchId = MyBase.Columns("CompanyBranchId")
            Me.columnAllocationPayoutNo = MyBase.Columns("AllocationPayoutNo")
            Me.columnAllocationTypeId = MyBase.Columns("AllocationTypeId")
            Me.columnAllocationValue = MyBase.Columns("AllocationValue")
            Me.columnPayrollAccountBranchCode = MyBase.Columns("PayrollAccountBranchCode")
            Me.columnAddressRegistered = MyBase.Columns("AddressRegistered")
            Me.columnAddressLocal = MyBase.Columns("AddressLocal")
            Me.columnCTCNo = MyBase.Columns("CTCNo")
            Me.columnCustomDateField6 = MyBase.Columns("CustomDateField6")
            Me.columnCustomDateField7 = MyBase.Columns("CustomDateField7")
            Me.columnCustomDateField8 = MyBase.Columns("CustomDateField8")
            Me.columnCustomCheckbox1 = MyBase.Columns("CustomCheckbox1")
            Me.columnCustomCheckbox2 = MyBase.Columns("CustomCheckbox2")
            Me.columnCustomCheckbox3 = MyBase.Columns("CustomCheckbox3")
            Me.columnCustomCheckbox4 = MyBase.Columns("CustomCheckbox4")
            Me.columnCustomCheckbox5 = MyBase.Columns("CustomCheckbox5")
            Me.columnCustomCheckbox6 = MyBase.Columns("CustomCheckbox6")
            Me.columnCustomCheckbox7 = MyBase.Columns("CustomCheckbox7")
            Me.columnCustomCheckbox8 = MyBase.Columns("CustomCheckbox8")
            Me.columnBackPayCoverageFromDate = MyBase.Columns("BackPayCoverageFromDate")
            Me.columnBackPayCoverageToDate = MyBase.Columns("BackPayCoverageToDate")
            Me.columnPlainSSSNo = MyBase.Columns("PlainSSSNo")
            Me.columnMinTakeHomePayBasisId = MyBase.Columns("MinTakeHomePayBasisId")
            Me.columnSuffixId = MyBase.Columns("SuffixId")
            Me.columnConcurrentEmployerName = MyBase.Columns("ConcurrentEmployerName")
            Me.columnConcurrentEmployerTIN = MyBase.Columns("ConcurrentEmployerTIN")
            Me.columnConcurrentEmployerTINBranch = MyBase.Columns("ConcurrentEmployerTINBranch")
            Me.columnDateEffectivityBasis = MyBase.Columns("DateEffectivityBasis")
            Me.columnFormalName = MyBase.Columns("FormalName")
            Me.columnName = MyBase.Columns("Name")
            Me.columnFullName = MyBase.Columns("FullName")
            Me.columnReasonForSeparationId = MyBase.Columns("ReasonForSeparationId")
            Me.columnNationalityId = MyBase.Columns("NationalityId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnCompanyId = New Global.System.Data.DataColumn("CompanyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyId)
            Me.columnEmployeeCode = New Global.System.Data.DataColumn("EmployeeCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeeCode)
            Me.columnAccessCode = New Global.System.Data.DataColumn("AccessCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccessCode)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleName = New Global.System.Data.DataColumn("MiddleName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleName)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnAddressForeign = New Global.System.Data.DataColumn("AddressForeign", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddressForeign)
            Me.columnZIPCodeAR = New Global.System.Data.DataColumn("ZIPCodeAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCodeAR)
            Me.columnZIPCodeAL = New Global.System.Data.DataColumn("ZIPCodeAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCodeAL)
            Me.columnZIPCodeAF = New Global.System.Data.DataColumn("ZIPCodeAF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCodeAF)
            Me.columnTelNo = New Global.System.Data.DataColumn("TelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelNo)
            Me.columnTINNo = New Global.System.Data.DataColumn("TINNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINNo)
            Me.columnBankAccountId = New Global.System.Data.DataColumn("BankAccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankAccountId)
            Me.columnBankAccountNo = New Global.System.Data.DataColumn("BankAccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankAccountNo)
            Me.columnBankAccountTypeId = New Global.System.Data.DataColumn("BankAccountTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankAccountTypeId)
            Me.columnSSSNo = New Global.System.Data.DataColumn("SSSNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSSNo)
            Me.columnPagIbigNo = New Global.System.Data.DataColumn("PagIbigNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPagIbigNo)
            Me.columnPhilHealthNo = New Global.System.Data.DataColumn("PhilHealthNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhilHealthNo)
            Me.columnIsWife = New Global.System.Data.DataColumn("IsWife", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsWife)
            Me.columnRDOCode = New Global.System.Data.DataColumn("RDOCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRDOCode)
            Me.columnBirthDate = New Global.System.Data.DataColumn("BirthDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBirthDate)
            Me.columnDateHired = New Global.System.Data.DataColumn("DateHired", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateHired)
            Me.columnDateSeparated = New Global.System.Data.DataColumn("DateSeparated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateSeparated)
            Me.columnDateRegular = New Global.System.Data.DataColumn("DateRegular", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateRegular)
            Me.columnYearWithPreviousER = New Global.System.Data.DataColumn("YearWithPreviousER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearWithPreviousER)
            Me.columnShiftScheduleId = New Global.System.Data.DataColumn("ShiftScheduleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShiftScheduleId)
            Me.columnEmploymentTypeId = New Global.System.Data.DataColumn("EmploymentTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmploymentTypeId)
            Me.columnPaymentTypeId = New Global.System.Data.DataColumn("PaymentTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentTypeId)
            Me.columnPayrollFrequencyId = New Global.System.Data.DataColumn("PayrollFrequencyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayrollFrequencyId)
            Me.columnTaxCodeId = New Global.System.Data.DataColumn("TaxCodeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxCodeId)
            Me.columnPreviousRate = New Global.System.Data.DataColumn("PreviousRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousRate)
            Me.columnRate = New Global.System.Data.DataColumn("Rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate)
            Me.columnMonthlyRate = New Global.System.Data.DataColumn("MonthlyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthlyRate)
            Me.columnPreviousMonthlyRate = New Global.System.Data.DataColumn("PreviousMonthlyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousMonthlyRate)
            Me.columnDailyRate = New Global.System.Data.DataColumn("DailyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDailyRate)
            Me.columnPreviousDailyRate = New Global.System.Data.DataColumn("PreviousDailyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousDailyRate)
            Me.columnHourlyRate = New Global.System.Data.DataColumn("HourlyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHourlyRate)
            Me.columnPreviousHourlyRate = New Global.System.Data.DataColumn("PreviousHourlyRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousHourlyRate)
            Me.columnPreviousAllowance = New Global.System.Data.DataColumn("PreviousAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousAllowance)
            Me.columnAllowance = New Global.System.Data.DataColumn("Allowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllowance)
            Me.columnMonthlyAllowance = New Global.System.Data.DataColumn("MonthlyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthlyAllowance)
            Me.columnPreviousMonthlyAllowance = New Global.System.Data.DataColumn("PreviousMonthlyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousMonthlyAllowance)
            Me.columnDailyAllowance = New Global.System.Data.DataColumn("DailyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDailyAllowance)
            Me.columnPreviousDailyAllowance = New Global.System.Data.DataColumn("PreviousDailyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousDailyAllowance)
            Me.columnHourlyAllowance = New Global.System.Data.DataColumn("HourlyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHourlyAllowance)
            Me.columnPreviousHourlyAllowance = New Global.System.Data.DataColumn("PreviousHourlyAllowance", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviousHourlyAllowance)
            Me.columnCOLA = New Global.System.Data.DataColumn("COLA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLA)
            Me.columnMonthlyCOLA = New Global.System.Data.DataColumn("MonthlyCOLA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthlyCOLA)
            Me.columnDailyCOLA = New Global.System.Data.DataColumn("DailyCOLA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDailyCOLA)
            Me.columnHourlyCOLA = New Global.System.Data.DataColumn("HourlyCOLA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHourlyCOLA)
            Me.columnFixTaxRate = New Global.System.Data.DataColumn("FixTaxRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFixTaxRate)
            Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActive)
            Me.columnWithPreviousER = New Global.System.Data.DataColumn("WithPreviousER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithPreviousER)
            Me.columnParameterId = New Global.System.Data.DataColumn("ParameterId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParameterId)
            Me.columnPositionId = New Global.System.Data.DataColumn("PositionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPositionId)
            Me.columnMaritalStatusId = New Global.System.Data.DataColumn("MaritalStatusId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStatusId)
            Me.columnGenderId = New Global.System.Data.DataColumn("GenderId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGenderId)
            Me.columnTimeSourceId = New Global.System.Data.DataColumn("TimeSourceId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeSourceId)
            Me.columnPicture = New Global.System.Data.DataColumn("Picture", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicture)
            Me.columnCostCenterId = New Global.System.Data.DataColumn("CostCenterId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostCenterId)
            Me.columnDepartmentId = New Global.System.Data.DataColumn("DepartmentId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartmentId)
            Me.columnCustomGroup1Id = New Global.System.Data.DataColumn("CustomGroup1Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup1Id)
            Me.columnCustomGroup2Id = New Global.System.Data.DataColumn("CustomGroup2Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup2Id)
            Me.columnCustomGroup3Id = New Global.System.Data.DataColumn("CustomGroup3Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup3Id)
            Me.columnCustomField1 = New Global.System.Data.DataColumn("CustomField1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField1)
            Me.columnCustomField2 = New Global.System.Data.DataColumn("CustomField2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField2)
            Me.columnCustomField3 = New Global.System.Data.DataColumn("CustomField3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField3)
            Me.columnPayElementScheduleId = New Global.System.Data.DataColumn("PayElementScheduleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayElementScheduleId)
            Me.columnEmailAddress = New Global.System.Data.DataColumn("EmailAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailAddress)
            Me.columnIsSSS = New Global.System.Data.DataColumn("IsSSS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSSS)
            Me.columnIsTax = New Global.System.Data.DataColumn("IsTax", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsTax)
            Me.columnIsPHIC = New Global.System.Data.DataColumn("IsPHIC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsPHIC)
            Me.columnIsHDMF = New Global.System.Data.DataColumn("IsHDMF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsHDMF)
            Me.columnIsUnion = New Global.System.Data.DataColumn("IsUnion", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsUnion)
            Me.columnIsEmailPayslip = New Global.System.Data.DataColumn("IsEmailPayslip", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsEmailPayslip)
            Me.columnPayslipPassword = New Global.System.Data.DataColumn("PayslipPassword", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayslipPassword)
            Me.columnDateEffective = New Global.System.Data.DataColumn("DateEffective", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateEffective)
            Me.columnSystem = New Global.System.Data.DataColumn("System", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSystem)
            Me.columnLocationId = New Global.System.Data.DataColumn("LocationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocationId)
            Me.columnVersionNo = New Global.System.Data.DataColumn("VersionNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersionNo)
            Me.columnPayGroupId = New Global.System.Data.DataColumn("PayGroupId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayGroupId)
            Me.columnMobileNo = New Global.System.Data.DataColumn("MobileNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobileNo)
            Me.columnDevicePassword = New Global.System.Data.DataColumn("DevicePassword", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDevicePassword)
            Me.columnLeaveAccrualScheduleId = New Global.System.Data.DataColumn("LeaveAccrualScheduleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeaveAccrualScheduleId)
            Me.columnContractStartDate = New Global.System.Data.DataColumn("ContractStartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContractStartDate)
            Me.columnContractEndDate = New Global.System.Data.DataColumn("ContractEndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContractEndDate)
            Me.columnDaysInYear = New Global.System.Data.DataColumn("DaysInYear", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDaysInYear)
            Me.columnSupervisorId = New Global.System.Data.DataColumn("SupervisorId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupervisorId)
            Me.columnWTaxExempt = New Global.System.Data.DataColumn("WTaxExempt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWTaxExempt)
            Me.columnMaxTaxableEarning = New Global.System.Data.DataColumn("MaxTaxableEarning", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxTaxableEarning)
            Me.columnTINBranch = New Global.System.Data.DataColumn("TINBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINBranch)
            Me.columnClassId = New Global.System.Data.DataColumn("ClassId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClassId)
            Me.columnMinNetPayForLoan = New Global.System.Data.DataColumn("MinNetPayForLoan", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinNetPayForLoan)
            Me.columnMinNetPayForLoanTypeId = New Global.System.Data.DataColumn("MinNetPayForLoanTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinNetPayForLoanTypeId)
            Me.columnApprovingId1 = New Global.System.Data.DataColumn("ApprovingId1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovingId1)
            Me.columnApprovingId2 = New Global.System.Data.DataColumn("ApprovingId2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovingId2)
            Me.columnEWTRate = New Global.System.Data.DataColumn("EWTRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEWTRate)
            Me.columnSecurityUserLevelId = New Global.System.Data.DataColumn("SecurityUserLevelId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecurityUserLevelId)
            Me.columnSecurityUserGroupId = New Global.System.Data.DataColumn("SecurityUserGroupId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecurityUserGroupId)
            Me.columnIsProcessed = New Global.System.Data.DataColumn("IsProcessed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProcessed)
            Me.columnIsCleared = New Global.System.Data.DataColumn("IsCleared", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsCleared)
            Me.columnDateCleared = New Global.System.Data.DataColumn("DateCleared", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCleared)
            Me.columnEmployeePassword = New Global.System.Data.DataColumn("EmployeePassword", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeePassword)
            Me.columnIsClosed = New Global.System.Data.DataColumn("IsClosed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsClosed)
            Me.columnWebkioskRoleId = New Global.System.Data.DataColumn("WebkioskRoleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebkioskRoleId)
            Me.columnTeamId = New Global.System.Data.DataColumn("TeamId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeamId)
            Me.columnRegionId = New Global.System.Data.DataColumn("RegionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegionId)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnMotherMaidenName = New Global.System.Data.DataColumn("MotherMaidenName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotherMaidenName)
            Me.columnAlphanumericTaxCodeId = New Global.System.Data.DataColumn("AlphanumericTaxCodeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlphanumericTaxCodeId)
            Me.columnResidenceStatusCodeId = New Global.System.Data.DataColumn("ResidenceStatusCodeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResidenceStatusCodeId)
            Me.columnWebkioskLoginFailedAttempt = New Global.System.Data.DataColumn("WebkioskLoginFailedAttempt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebkioskLoginFailedAttempt)
            Me.columnIsMainEmployer = New Global.System.Data.DataColumn("IsMainEmployer", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsMainEmployer)
            Me.columnNickname = New Global.System.Data.DataColumn("Nickname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNickname)
            Me.columnEmployeePasswordDate = New Global.System.Data.DataColumn("EmployeePasswordDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeePasswordDate)
            Me.columnIsSubstitutedFiling = New Global.System.Data.DataColumn("IsSubstitutedFiling", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSubstitutedFiling)
            Me.columnPayslipPasswordDate = New Global.System.Data.DataColumn("PayslipPasswordDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayslipPasswordDate)
            Me.columnSalutationId = New Global.System.Data.DataColumn("SalutationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalutationId)
            Me.columnIsHusband = New Global.System.Data.DataColumn("IsHusband", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsHusband)
            Me.columnYearSeparated = New Global.System.Data.DataColumn("YearSeparated", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearSeparated)
            Me.columnRemarksEmploymentInformation = New Global.System.Data.DataColumn("RemarksEmploymentInformation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarksEmploymentInformation)
            Me.columnLeaveForfeitScheduleId = New Global.System.Data.DataColumn("LeaveForfeitScheduleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeaveForfeitScheduleId)
            Me.columnPayoutTypeId = New Global.System.Data.DataColumn("PayoutTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayoutTypeId)
            Me.columnCitizenshipId = New Global.System.Data.DataColumn("CitizenshipId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCitizenshipId)
            Me.columnCustomGroup4Id = New Global.System.Data.DataColumn("CustomGroup4Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup4Id)
            Me.columnCustomGroup5Id = New Global.System.Data.DataColumn("CustomGroup5Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup5Id)
            Me.columnCustomGroup6Id = New Global.System.Data.DataColumn("CustomGroup6Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup6Id)
            Me.columnCustomGroup7Id = New Global.System.Data.DataColumn("CustomGroup7Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup7Id)
            Me.columnCustomGroup8Id = New Global.System.Data.DataColumn("CustomGroup8Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomGroup8Id)
            Me.columnCustomDateField1 = New Global.System.Data.DataColumn("CustomDateField1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField1)
            Me.columnCustomDateField2 = New Global.System.Data.DataColumn("CustomDateField2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField2)
            Me.columnCustomDateField3 = New Global.System.Data.DataColumn("CustomDateField3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField3)
            Me.columnCustomDateField4 = New Global.System.Data.DataColumn("CustomDateField4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField4)
            Me.columnCustomDateField5 = New Global.System.Data.DataColumn("CustomDateField5", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField5)
            Me.columnCustomField4 = New Global.System.Data.DataColumn("CustomField4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField4)
            Me.columnCustomField5 = New Global.System.Data.DataColumn("CustomField5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField5)
            Me.columnCustomField6 = New Global.System.Data.DataColumn("CustomField6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField6)
            Me.columnCustomField7 = New Global.System.Data.DataColumn("CustomField7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField7)
            Me.columnCustomField8 = New Global.System.Data.DataColumn("CustomField8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField8)
            Me.columnSeparationPayTypeId = New Global.System.Data.DataColumn("SeparationPayTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeparationPayTypeId)
            Me.columnShiftScheduleTemplateGroupId = New Global.System.Data.DataColumn("ShiftScheduleTemplateGroupId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShiftScheduleTemplateGroupId)
            Me.columnDateFiledofResignation = New Global.System.Data.DataColumn("DateFiledofResignation", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateFiledofResignation)
            Me.columnReasonForLeaving = New Global.System.Data.DataColumn("ReasonForLeaving", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReasonForLeaving)
            Me.columnIsRehirable = New Global.System.Data.DataColumn("IsRehirable", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRehirable)
            Me.columnClearanceStatusId = New Global.System.Data.DataColumn("ClearanceStatusId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClearanceStatusId)
            Me.columnClearanceIssuedById = New Global.System.Data.DataColumn("ClearanceIssuedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClearanceIssuedById)
            Me.columnWaiverAndQuitclaimFinalPay = New Global.System.Data.DataColumn("WaiverAndQuitclaimFinalPay", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaiverAndQuitclaimFinalPay)
            Me.columnIsReleasedWaiverAndQuitclaim = New Global.System.Data.DataColumn("IsReleasedWaiverAndQuitclaim", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsReleasedWaiverAndQuitclaim)
            Me.columnWaiverAndQuitclaimDateReleased = New Global.System.Data.DataColumn("WaiverAndQuitclaimDateReleased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaiverAndQuitclaimDateReleased)
            Me.columnWaiverAndQuitclaimReleasedById = New Global.System.Data.DataColumn("WaiverAndQuitclaimReleasedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaiverAndQuitclaimReleasedById)
            Me.columnCardNum = New Global.System.Data.DataColumn("CardNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCardNum)
            Me.columnReasonForLeavingType = New Global.System.Data.DataColumn("ReasonForLeavingType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReasonForLeavingType)
            Me.columnHDMFID = New Global.System.Data.DataColumn("HDMFID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDMFID)
            Me.columnLineage = New Global.System.Data.DataColumn("Lineage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineage)
            Me.columnLineageDepth = New Global.System.Data.DataColumn("LineageDepth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineageDepth)
            Me.columnCompanyBranchId = New Global.System.Data.DataColumn("CompanyBranchId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyBranchId)
            Me.columnAllocationPayoutNo = New Global.System.Data.DataColumn("AllocationPayoutNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllocationPayoutNo)
            Me.columnAllocationTypeId = New Global.System.Data.DataColumn("AllocationTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllocationTypeId)
            Me.columnAllocationValue = New Global.System.Data.DataColumn("AllocationValue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllocationValue)
            Me.columnPayrollAccountBranchCode = New Global.System.Data.DataColumn("PayrollAccountBranchCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayrollAccountBranchCode)
            Me.columnAddressRegistered = New Global.System.Data.DataColumn("AddressRegistered", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddressRegistered)
            Me.columnAddressLocal = New Global.System.Data.DataColumn("AddressLocal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddressLocal)
            Me.columnCTCNo = New Global.System.Data.DataColumn("CTCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTCNo)
            Me.columnCustomDateField6 = New Global.System.Data.DataColumn("CustomDateField6", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField6)
            Me.columnCustomDateField7 = New Global.System.Data.DataColumn("CustomDateField7", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField7)
            Me.columnCustomDateField8 = New Global.System.Data.DataColumn("CustomDateField8", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomDateField8)
            Me.columnCustomCheckbox1 = New Global.System.Data.DataColumn("CustomCheckbox1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox1)
            Me.columnCustomCheckbox2 = New Global.System.Data.DataColumn("CustomCheckbox2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox2)
            Me.columnCustomCheckbox3 = New Global.System.Data.DataColumn("CustomCheckbox3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox3)
            Me.columnCustomCheckbox4 = New Global.System.Data.DataColumn("CustomCheckbox4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox4)
            Me.columnCustomCheckbox5 = New Global.System.Data.DataColumn("CustomCheckbox5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox5)
            Me.columnCustomCheckbox6 = New Global.System.Data.DataColumn("CustomCheckbox6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox6)
            Me.columnCustomCheckbox7 = New Global.System.Data.DataColumn("CustomCheckbox7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox7)
            Me.columnCustomCheckbox8 = New Global.System.Data.DataColumn("CustomCheckbox8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomCheckbox8)
            Me.columnBackPayCoverageFromDate = New Global.System.Data.DataColumn("BackPayCoverageFromDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackPayCoverageFromDate)
            Me.columnBackPayCoverageToDate = New Global.System.Data.DataColumn("BackPayCoverageToDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackPayCoverageToDate)
            Me.columnPlainSSSNo = New Global.System.Data.DataColumn("PlainSSSNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlainSSSNo)
            Me.columnMinTakeHomePayBasisId = New Global.System.Data.DataColumn("MinTakeHomePayBasisId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinTakeHomePayBasisId)
            Me.columnSuffixId = New Global.System.Data.DataColumn("SuffixId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuffixId)
            Me.columnConcurrentEmployerName = New Global.System.Data.DataColumn("ConcurrentEmployerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcurrentEmployerName)
            Me.columnConcurrentEmployerTIN = New Global.System.Data.DataColumn("ConcurrentEmployerTIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcurrentEmployerTIN)
            Me.columnConcurrentEmployerTINBranch = New Global.System.Data.DataColumn("ConcurrentEmployerTINBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcurrentEmployerTINBranch)
            Me.columnDateEffectivityBasis = New Global.System.Data.DataColumn("DateEffectivityBasis", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateEffectivityBasis)
            Me.columnFormalName = New Global.System.Data.DataColumn("FormalName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormalName)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnReasonForSeparationId = New Global.System.Data.DataColumn("ReasonForSeparationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReasonForSeparationId)
            Me.columnNationalityId = New Global.System.Data.DataColumn("NationalityId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalityId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId, Me.columnCompanyId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnCompanyId.AllowDBNull = false
            Me.columnEmployeeCode.MaxLength = 50
            Me.columnAccessCode.MaxLength = 50
            Me.columnFirstName.MaxLength = 50
            Me.columnMiddleName.MaxLength = 50
            Me.columnLastName.MaxLength = 50
            Me.columnAddressForeign.MaxLength = 300
            Me.columnZIPCodeAR.MaxLength = 50
            Me.columnZIPCodeAL.MaxLength = 50
            Me.columnZIPCodeAF.MaxLength = 50
            Me.columnTelNo.MaxLength = 50
            Me.columnTINNo.MaxLength = 50
            Me.columnBankAccountNo.MaxLength = 50
            Me.columnSSSNo.MaxLength = 50
            Me.columnPagIbigNo.MaxLength = 50
            Me.columnPhilHealthNo.MaxLength = 50
            Me.columnIsWife.AllowDBNull = false
            Me.columnRDOCode.MaxLength = 50
            Me.columnPaymentTypeId.AllowDBNull = false
            Me.columnRate.AllowDBNull = false
            Me.columnMonthlyRate.AllowDBNull = false
            Me.columnDailyRate.AllowDBNull = false
            Me.columnHourlyRate.AllowDBNull = false
            Me.columnAllowance.AllowDBNull = false
            Me.columnMonthlyAllowance.AllowDBNull = false
            Me.columnDailyAllowance.AllowDBNull = false
            Me.columnHourlyAllowance.AllowDBNull = false
            Me.columnCOLA.AllowDBNull = false
            Me.columnMonthlyCOLA.AllowDBNull = false
            Me.columnDailyCOLA.AllowDBNull = false
            Me.columnHourlyCOLA.AllowDBNull = false
            Me.columnActive.AllowDBNull = false
            Me.columnWithPreviousER.AllowDBNull = false
            Me.columnTimeSourceId.AllowDBNull = false
            Me.columnCustomField1.MaxLength = 50
            Me.columnCustomField2.MaxLength = 50
            Me.columnCustomField3.MaxLength = 50
            Me.columnEmailAddress.MaxLength = 500
            Me.columnIsSSS.AllowDBNull = false
            Me.columnIsTax.AllowDBNull = false
            Me.columnIsPHIC.AllowDBNull = false
            Me.columnIsHDMF.AllowDBNull = false
            Me.columnIsUnion.AllowDBNull = false
            Me.columnIsEmailPayslip.AllowDBNull = false
            Me.columnPayslipPassword.MaxLength = 1000
            Me.columnSystem.AllowDBNull = false
            Me.columnVersionNo.AllowDBNull = false
            Me.columnMobileNo.MaxLength = 50
            Me.columnDevicePassword.MaxLength = 1000
            Me.columnWTaxExempt.AllowDBNull = false
            Me.columnTINBranch.MaxLength = 50
            Me.columnIsProcessed.AllowDBNull = false
            Me.columnIsCleared.AllowDBNull = false
            Me.columnEmployeePassword.MaxLength = 100
            Me.columnIsClosed.AllowDBNull = false
            Me.columnRemarks.MaxLength = 500
            Me.columnMotherMaidenName.MaxLength = 150
            Me.columnIsMainEmployer.AllowDBNull = false
            Me.columnNickname.MaxLength = 50
            Me.columnIsSubstitutedFiling.AllowDBNull = false
            Me.columnIsHusband.AllowDBNull = false
            Me.columnYearSeparated.ReadOnly = true
            Me.columnRemarksEmploymentInformation.MaxLength = 500
            Me.columnCustomField4.MaxLength = 50
            Me.columnCustomField5.MaxLength = 50
            Me.columnCustomField6.MaxLength = 50
            Me.columnCustomField7.MaxLength = 50
            Me.columnCustomField8.MaxLength = 50
            Me.columnReasonForLeaving.MaxLength = 200
            Me.columnIsRehirable.AllowDBNull = false
            Me.columnIsReleasedWaiverAndQuitclaim.AllowDBNull = false
            Me.columnCardNum.MaxLength = 50
            Me.columnReasonForLeavingType.MaxLength = 200
            Me.columnHDMFID.MaxLength = 50
            Me.columnLineage.MaxLength = 8000
            Me.columnAllocationPayoutNo.AllowDBNull = false
            Me.columnAllocationTypeId.AllowDBNull = false
            Me.columnAllocationValue.AllowDBNull = false
            Me.columnPayrollAccountBranchCode.MaxLength = 3
            Me.columnAddressRegistered.ReadOnly = true
            Me.columnAddressRegistered.MaxLength = 2500
            Me.columnAddressLocal.ReadOnly = true
            Me.columnAddressLocal.MaxLength = 2500
            Me.columnCTCNo.MaxLength = 50
            Me.columnCustomCheckbox1.AllowDBNull = false
            Me.columnCustomCheckbox2.AllowDBNull = false
            Me.columnCustomCheckbox3.AllowDBNull = false
            Me.columnCustomCheckbox4.AllowDBNull = false
            Me.columnCustomCheckbox5.AllowDBNull = false
            Me.columnCustomCheckbox6.AllowDBNull = false
            Me.columnCustomCheckbox7.AllowDBNull = false
            Me.columnCustomCheckbox8.AllowDBNull = false
            Me.columnPlainSSSNo.ReadOnly = true
            Me.columnPlainSSSNo.MaxLength = 8000
            Me.columnConcurrentEmployerName.MaxLength = 150
            Me.columnConcurrentEmployerTIN.MaxLength = 50
            Me.columnConcurrentEmployerTINBranch.MaxLength = 50
            Me.columnFormalName.ReadOnly = true
            Me.columnFormalName.MaxLength = 207
            Me.columnName.ReadOnly = true
            Me.columnName.MaxLength = 206
            Me.columnFullName.ReadOnly = true
            Me.columnFullName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewtblEmployeesRow() As tblEmployeesRow
            Return CType(Me.NewRow,tblEmployeesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblEmployeesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblEmployeesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblEmployeesRowChangedEvent) Is Nothing) Then
                RaiseEvent tblEmployeesRowChanged(Me, New tblEmployeesRowChangeEvent(CType(e.Row,tblEmployeesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblEmployeesRowChangingEvent) Is Nothing) Then
                RaiseEvent tblEmployeesRowChanging(Me, New tblEmployeesRowChangeEvent(CType(e.Row,tblEmployeesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblEmployeesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblEmployeesRowDeleted(Me, New tblEmployeesRowChangeEvent(CType(e.Row,tblEmployeesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblEmployeesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblEmployeesRowDeleting(Me, New tblEmployeesRowChangeEvent(CType(e.Row,tblEmployeesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovetblEmployeesRow(ByVal row As tblEmployeesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsJeonsoft = New dsJeonsoft()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblEmployeesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblPositionsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblPositionsRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnActive As Global.System.Data.DataColumn
        
        Private columnCompanyId As Global.System.Data.DataColumn
        
        Private columnVersionNo As Global.System.Data.DataColumn
        
        Private columnRanking As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblPositions"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VersionNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersionNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RankingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRanking
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblPositionsRow
            Get
                Return CType(Me.Rows(index),tblPositionsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblPositionsRowChanging As tblPositionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblPositionsRowChanged As tblPositionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblPositionsRowDeleting As tblPositionsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblPositionsRowDeleted As tblPositionsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddtblPositionsRow(ByVal row As tblPositionsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddtblPositionsRow(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Ranking As Integer) As tblPositionsRow
            Dim rowtblPositionsRow As tblPositionsRow = CType(Me.NewRow,tblPositionsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Code, Name, Active, CompanyId, VersionNo, Ranking}
            rowtblPositionsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblPositionsRow)
            Return rowtblPositionsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As tblPositionsRow
            Return CType(Me.Rows.Find(New Object() {Id}),tblPositionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblPositionsDataTable = CType(MyBase.Clone,tblPositionsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblPositionsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnName = MyBase.Columns("Name")
            Me.columnActive = MyBase.Columns("Active")
            Me.columnCompanyId = MyBase.Columns("CompanyId")
            Me.columnVersionNo = MyBase.Columns("VersionNo")
            Me.columnRanking = MyBase.Columns("Ranking")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActive)
            Me.columnCompanyId = New Global.System.Data.DataColumn("CompanyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyId)
            Me.columnVersionNo = New Global.System.Data.DataColumn("VersionNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersionNo)
            Me.columnRanking = New Global.System.Data.DataColumn("Ranking", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRanking)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 50
            Me.columnName.AllowDBNull = false
            Me.columnName.MaxLength = 50
            Me.columnActive.AllowDBNull = false
            Me.columnCompanyId.AllowDBNull = false
            Me.columnVersionNo.AllowDBNull = false
            Me.columnRanking.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewtblPositionsRow() As tblPositionsRow
            Return CType(Me.NewRow,tblPositionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblPositionsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblPositionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblPositionsRowChangedEvent) Is Nothing) Then
                RaiseEvent tblPositionsRowChanged(Me, New tblPositionsRowChangeEvent(CType(e.Row,tblPositionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblPositionsRowChangingEvent) Is Nothing) Then
                RaiseEvent tblPositionsRowChanging(Me, New tblPositionsRowChangeEvent(CType(e.Row,tblPositionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblPositionsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblPositionsRowDeleted(Me, New tblPositionsRowChangeEvent(CType(e.Row,tblPositionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblPositionsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblPositionsRowDeleting(Me, New tblPositionsRowChangeEvent(CType(e.Row,tblPositionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovetblPositionsRow(ByVal row As tblPositionsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsJeonsoft = New dsJeonsoft()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblPositionsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblTeamsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblTeamsRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnActive As Global.System.Data.DataColumn
        
        Private columnCompanyId As Global.System.Data.DataColumn
        
        Private columnVersionNo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblTeams"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VersionNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersionNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblTeamsRow
            Get
                Return CType(Me.Rows(index),tblTeamsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblTeamsRowChanging As tblTeamsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblTeamsRowChanged As tblTeamsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblTeamsRowDeleting As tblTeamsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tblTeamsRowDeleted As tblTeamsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddtblTeamsRow(ByVal row As tblTeamsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddtblTeamsRow(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer) As tblTeamsRow
            Dim rowtblTeamsRow As tblTeamsRow = CType(Me.NewRow,tblTeamsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Code, Name, Active, CompanyId, VersionNo}
            rowtblTeamsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblTeamsRow)
            Return rowtblTeamsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As tblTeamsRow
            Return CType(Me.Rows.Find(New Object() {Id}),tblTeamsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblTeamsDataTable = CType(MyBase.Clone,tblTeamsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblTeamsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnName = MyBase.Columns("Name")
            Me.columnActive = MyBase.Columns("Active")
            Me.columnCompanyId = MyBase.Columns("CompanyId")
            Me.columnVersionNo = MyBase.Columns("VersionNo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActive)
            Me.columnCompanyId = New Global.System.Data.DataColumn("CompanyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyId)
            Me.columnVersionNo = New Global.System.Data.DataColumn("VersionNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersionNo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnCode.MaxLength = 50
            Me.columnName.AllowDBNull = false
            Me.columnName.MaxLength = 50
            Me.columnActive.AllowDBNull = false
            Me.columnCompanyId.AllowDBNull = false
            Me.columnVersionNo.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewtblTeamsRow() As tblTeamsRow
            Return CType(Me.NewRow,tblTeamsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblTeamsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblTeamsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblTeamsRowChangedEvent) Is Nothing) Then
                RaiseEvent tblTeamsRowChanged(Me, New tblTeamsRowChangeEvent(CType(e.Row,tblTeamsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblTeamsRowChangingEvent) Is Nothing) Then
                RaiseEvent tblTeamsRowChanging(Me, New tblTeamsRowChangeEvent(CType(e.Row,tblTeamsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblTeamsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblTeamsRowDeleted(Me, New tblTeamsRowChangeEvent(CType(e.Row,tblTeamsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblTeamsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblTeamsRowDeleting(Me, New tblTeamsRowChangeEvent(CType(e.Row,tblTeamsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovetblTeamsRow(ByVal row As tblTeamsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsJeonsoft = New dsJeonsoft()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblTeamsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblEmployeesRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblEmployees As tblEmployeesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblEmployees = CType(Me.Table,tblEmployeesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.IdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyId() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.CompanyIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.CompanyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmployeeCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EmployeeCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployeeCode' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EmployeeCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AccessCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.AccessCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccessCode' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.AccessCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MiddleName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MiddleNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MiddleNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AddressForeign() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.AddressForeignColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddressForeign' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.AddressForeignColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZIPCodeAR() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ZIPCodeARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIPCodeAR' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ZIPCodeARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZIPCodeAL() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ZIPCodeALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIPCodeAL' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ZIPCodeALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZIPCodeAF() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ZIPCodeAFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIPCodeAF' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ZIPCodeAFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TelNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.TelNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TelNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.TelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TINNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.TINNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.TINNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BankAccountId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BankAccountIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankAccountId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BankAccountIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BankAccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BankAccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankAccountNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BankAccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BankAccountTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BankAccountTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankAccountTypeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BankAccountTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SSSNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SSSNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SSSNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SSSNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PagIbigNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PagIbigNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PagIbigNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PagIbigNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PhilHealthNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PhilHealthNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhilHealthNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PhilHealthNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsWife() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsWifeColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsWifeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RDOCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.RDOCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RDOCode' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.RDOCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BirthDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BirthDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BirthDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BirthDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateHired() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateHiredColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateHired' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateHiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateSeparated() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateSeparatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateSeparated' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateSeparatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateRegular() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateRegularColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateRegular' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateRegularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YearWithPreviousER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.YearWithPreviousERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearWithPreviousER' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.YearWithPreviousERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShiftScheduleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ShiftScheduleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShiftScheduleId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ShiftScheduleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmploymentTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EmploymentTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmploymentTypeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EmploymentTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PaymentTypeId() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.PaymentTypeIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.PaymentTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayrollFrequencyId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayrollFrequencyIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayrollFrequencyId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayrollFrequencyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TaxCodeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.TaxCodeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxCodeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.TaxCodeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Rate() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.RateColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MonthlyRate() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.MonthlyRateColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.MonthlyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousMonthlyRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousMonthlyRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousMonthlyRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousMonthlyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DailyRate() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.DailyRateColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.DailyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousDailyRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousDailyRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousDailyRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousDailyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HourlyRate() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.HourlyRateColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.HourlyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousHourlyRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousHourlyRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousHourlyRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousHourlyRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousAllowance() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousAllowanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousAllowance' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Allowance() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.AllowanceColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.AllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MonthlyAllowance() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.MonthlyAllowanceColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.MonthlyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousMonthlyAllowance() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousMonthlyAllowanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousMonthlyAllowance' in table 'tblEmployees' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousMonthlyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DailyAllowance() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.DailyAllowanceColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.DailyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousDailyAllowance() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousDailyAllowanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousDailyAllowance' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousDailyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HourlyAllowance() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.HourlyAllowanceColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.HourlyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PreviousHourlyAllowance() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PreviousHourlyAllowanceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviousHourlyAllowance' in table 'tblEmployees' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PreviousHourlyAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COLA() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.COLAColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.COLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MonthlyCOLA() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.MonthlyCOLAColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.MonthlyCOLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DailyCOLA() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.DailyCOLAColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.DailyCOLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HourlyCOLA() As Double
            Get
                Return CType(Me(Me.tabletblEmployees.HourlyCOLAColumn),Double)
            End Get
            Set
                Me(Me.tabletblEmployees.HourlyCOLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FixTaxRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.FixTaxRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FixTaxRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.FixTaxRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Active() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.ActiveColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.ActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WithPreviousER() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.WithPreviousERColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.WithPreviousERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ParameterId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ParameterIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ParameterId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ParameterIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PositionId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PositionIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PositionId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PositionIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaritalStatusId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MaritalStatusIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStatusId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MaritalStatusIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GenderId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.GenderIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GenderId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.GenderIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TimeSourceId() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.TimeSourceIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.TimeSourceIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Picture() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PictureColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picture' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PictureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CostCenterId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CostCenterIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CostCenterId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CostCenterIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DepartmentId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DepartmentIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DepartmentId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup1Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup1IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup1Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup1IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup2Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup2IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup2Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup2IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup3Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup3IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup3Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup3IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField1' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField2' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField3() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField3' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayElementScheduleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayElementScheduleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayElementScheduleId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayElementScheduleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmailAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EmailAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmailAddress' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EmailAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsSSS() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsSSSColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsSSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsTax() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsTaxColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsPHIC() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsPHICColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsPHICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsHDMF() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsHDMFColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsHDMFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsUnion() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsUnionColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsUnionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsEmailPayslip() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsEmailPayslipColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsEmailPayslipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayslipPassword() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayslipPasswordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayslipPassword' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayslipPasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateEffective() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateEffectiveColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateEffective' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateEffectiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property System() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.SystemColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.SystemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LocationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LocationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocationId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LocationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VersionNo() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.VersionNoColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.VersionNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayGroupId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayGroupIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayGroupId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayGroupIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MobileNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MobileNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MobileNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MobileNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DevicePassword() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DevicePasswordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DevicePassword' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DevicePasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LeaveAccrualScheduleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LeaveAccrualScheduleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeaveAccrualScheduleId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LeaveAccrualScheduleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ContractStartDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ContractStartDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContractStartDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ContractStartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ContractEndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ContractEndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContractEndDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ContractEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DaysInYear() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DaysInYearColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DaysInYear' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DaysInYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupervisorId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SupervisorIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupervisorId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SupervisorIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WTaxExempt() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.WTaxExemptColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.WTaxExemptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxTaxableEarning() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MaxTaxableEarningColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxTaxableEarning' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MaxTaxableEarningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TINBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.TINBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINBranch' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.TINBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClassId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ClassIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClassId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ClassIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MinNetPayForLoan() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MinNetPayForLoanColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinNetPayForLoan' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MinNetPayForLoanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MinNetPayForLoanTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MinNetPayForLoanTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinNetPayForLoanTypeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MinNetPayForLoanTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ApprovingId1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ApprovingId1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovingId1' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ApprovingId1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ApprovingId2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ApprovingId2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovingId2' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ApprovingId2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EWTRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EWTRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EWTRate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EWTRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SecurityUserLevelId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SecurityUserLevelIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecurityUserLevelId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SecurityUserLevelIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SecurityUserGroupId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SecurityUserGroupIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecurityUserGroupId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SecurityUserGroupIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsProcessed() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsProcessedColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsProcessedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsCleared() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsClearedColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsClearedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateCleared() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateClearedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateCleared' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateClearedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmployeePassword() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EmployeePasswordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployeePassword' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EmployeePasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsClosed() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsClosedColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsClosedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WebkioskRoleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.WebkioskRoleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WebkioskRoleId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.WebkioskRoleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TeamId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.TeamIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TeamId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.TeamIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegionId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.RegionIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegionId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.RegionIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MotherMaidenName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MotherMaidenNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MotherMaidenName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MotherMaidenNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AlphanumericTaxCodeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.AlphanumericTaxCodeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlphanumericTaxCodeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.AlphanumericTaxCodeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResidenceStatusCodeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ResidenceStatusCodeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResidenceStatusCodeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ResidenceStatusCodeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WebkioskLoginFailedAttempt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.WebkioskLoginFailedAttemptColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WebkioskLoginFailedAttempt' in table 'tblEmployees' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.WebkioskLoginFailedAttemptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsMainEmployer() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsMainEmployerColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsMainEmployerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Nickname() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.NicknameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nickname' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.NicknameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmployeePasswordDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.EmployeePasswordDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployeePasswordDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.EmployeePasswordDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsSubstitutedFiling() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsSubstitutedFilingColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsSubstitutedFilingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayslipPasswordDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayslipPasswordDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayslipPasswordDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayslipPasswordDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SalutationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SalutationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalutationId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SalutationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsHusband() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsHusbandColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsHusbandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YearSeparated() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.YearSeparatedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearSeparated' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.YearSeparatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RemarksEmploymentInformation() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.RemarksEmploymentInformationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RemarksEmploymentInformation' in table 'tblEmployees' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.RemarksEmploymentInformationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LeaveForfeitScheduleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LeaveForfeitScheduleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeaveForfeitScheduleId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LeaveForfeitScheduleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayoutTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayoutTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayoutTypeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayoutTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CitizenshipId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CitizenshipIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CitizenshipId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CitizenshipIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup4Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup4IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup4Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup4IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup5Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup5IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup5Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup5IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup6Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup6IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup6Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup6IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup7Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup7IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup7Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup7IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomGroup8Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomGroup8IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomGroup8Id' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomGroup8IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField1' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField2' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField3() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField3Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField3' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField4() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField4Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField4' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField5() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField5Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField5' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField4() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField4' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField5() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField5' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField6() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField6' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField7() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField7' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomField8() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomField8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField8' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomField8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SeparationPayTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SeparationPayTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeparationPayTypeId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SeparationPayTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShiftScheduleTemplateGroupId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ShiftScheduleTemplateGroupIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShiftScheduleTemplateGroupId' in table 'tblEmployees' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ShiftScheduleTemplateGroupIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateFiledofResignation() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateFiledofResignationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateFiledofResignation' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateFiledofResignationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReasonForLeaving() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ReasonForLeavingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReasonForLeaving' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ReasonForLeavingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsRehirable() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsRehirableColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsRehirableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearanceStatusId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ClearanceStatusIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClearanceStatusId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ClearanceStatusIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearanceIssuedById() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ClearanceIssuedByIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClearanceIssuedById' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ClearanceIssuedByIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WaiverAndQuitclaimFinalPay() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.WaiverAndQuitclaimFinalPayColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WaiverAndQuitclaimFinalPay' in table 'tblEmployees' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.WaiverAndQuitclaimFinalPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsReleasedWaiverAndQuitclaim() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.IsReleasedWaiverAndQuitclaimColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.IsReleasedWaiverAndQuitclaimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WaiverAndQuitclaimDateReleased() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.WaiverAndQuitclaimDateReleasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WaiverAndQuitclaimDateReleased' in table 'tblEmployees' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.WaiverAndQuitclaimDateReleasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WaiverAndQuitclaimReleasedById() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.WaiverAndQuitclaimReleasedByIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WaiverAndQuitclaimReleasedById' in table 'tblEmployees' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.WaiverAndQuitclaimReleasedByIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CardNum() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CardNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CardNum' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CardNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReasonForLeavingType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ReasonForLeavingTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReasonForLeavingType' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ReasonForLeavingTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HDMFID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.HDMFIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDMFID' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.HDMFIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lineage() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LineageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lineage' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LineageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LineageDepth() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.LineageDepthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LineageDepth' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.LineageDepthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyBranchId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CompanyBranchIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyBranchId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CompanyBranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AllocationPayoutNo() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.AllocationPayoutNoColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.AllocationPayoutNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AllocationTypeId() As Integer
            Get
                Return CType(Me(Me.tabletblEmployees.AllocationTypeIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblEmployees.AllocationTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AllocationValue() As Decimal
            Get
                Return CType(Me(Me.tabletblEmployees.AllocationValueColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblEmployees.AllocationValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayrollAccountBranchCode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PayrollAccountBranchCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayrollAccountBranchCode' in table 'tblEmployees' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PayrollAccountBranchCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AddressRegistered() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.AddressRegisteredColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddressRegistered' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.AddressRegisteredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AddressLocal() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.AddressLocalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddressLocal' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.AddressLocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CTCNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CTCNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CTCNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CTCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField6() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField6Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField6' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField7() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField7Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField7' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomDateField8() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.CustomDateField8Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomDateField8' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.CustomDateField8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox1() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox1Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox2() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox2Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox3() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox3Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox4() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox4Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox5() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox5Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox6() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox6Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox7() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox7Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomCheckbox8() As Boolean
            Get
                Return CType(Me(Me.tabletblEmployees.CustomCheckbox8Column),Boolean)
            End Get
            Set
                Me(Me.tabletblEmployees.CustomCheckbox8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackPayCoverageFromDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BackPayCoverageFromDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackPayCoverageFromDate' in table 'tblEmployees' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BackPayCoverageFromDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackPayCoverageToDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.BackPayCoverageToDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackPayCoverageToDate' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.BackPayCoverageToDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PlainSSSNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.PlainSSSNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlainSSSNo' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.PlainSSSNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MinTakeHomePayBasisId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.MinTakeHomePayBasisIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinTakeHomePayBasisId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.MinTakeHomePayBasisIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SuffixId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.SuffixIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SuffixId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.SuffixIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ConcurrentEmployerName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ConcurrentEmployerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConcurrentEmployerName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ConcurrentEmployerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ConcurrentEmployerTIN() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ConcurrentEmployerTINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConcurrentEmployerTIN' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ConcurrentEmployerTINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ConcurrentEmployerTINBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ConcurrentEmployerTINBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConcurrentEmployerTINBranch' in table 'tblEmployees' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ConcurrentEmployerTINBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateEffectivityBasis() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.DateEffectivityBasisColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateEffectivityBasis' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.DateEffectivityBasisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FormalName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.FormalNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormalName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.FormalNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FullName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.FullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullName' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.FullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReasonForSeparationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.ReasonForSeparationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReasonForSeparationId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.ReasonForSeparationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NationalityId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblEmployees.NationalityIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NationalityId' in table 'tblEmployees' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEmployees.NationalityIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmployeeCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EmployeeCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmployeeCodeNull()
            Me(Me.tabletblEmployees.EmployeeCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccessCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.AccessCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccessCodeNull()
            Me(Me.tabletblEmployees.AccessCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFirstNameNull()
            Me(Me.tabletblEmployees.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMiddleNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MiddleNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMiddleNameNull()
            Me(Me.tabletblEmployees.MiddleNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastNameNull()
            Me(Me.tabletblEmployees.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAddressForeignNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.AddressForeignColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAddressForeignNull()
            Me(Me.tabletblEmployees.AddressForeignColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZIPCodeARNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ZIPCodeARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZIPCodeARNull()
            Me(Me.tabletblEmployees.ZIPCodeARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZIPCodeALNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ZIPCodeALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZIPCodeALNull()
            Me(Me.tabletblEmployees.ZIPCodeALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZIPCodeAFNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ZIPCodeAFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZIPCodeAFNull()
            Me(Me.tabletblEmployees.ZIPCodeAFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTelNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.TelNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTelNoNull()
            Me(Me.tabletblEmployees.TelNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTINNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.TINNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTINNoNull()
            Me(Me.tabletblEmployees.TINNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBankAccountIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BankAccountIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBankAccountIdNull()
            Me(Me.tabletblEmployees.BankAccountIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBankAccountNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BankAccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBankAccountNoNull()
            Me(Me.tabletblEmployees.BankAccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBankAccountTypeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BankAccountTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBankAccountTypeIdNull()
            Me(Me.tabletblEmployees.BankAccountTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSSSNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SSSNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSSSNoNull()
            Me(Me.tabletblEmployees.SSSNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPagIbigNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PagIbigNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPagIbigNoNull()
            Me(Me.tabletblEmployees.PagIbigNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhilHealthNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PhilHealthNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhilHealthNoNull()
            Me(Me.tabletblEmployees.PhilHealthNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRDOCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.RDOCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRDOCodeNull()
            Me(Me.tabletblEmployees.RDOCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBirthDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BirthDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBirthDateNull()
            Me(Me.tabletblEmployees.BirthDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateHiredNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateHiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateHiredNull()
            Me(Me.tabletblEmployees.DateHiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateSeparatedNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateSeparatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateSeparatedNull()
            Me(Me.tabletblEmployees.DateSeparatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateRegularNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateRegularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateRegularNull()
            Me(Me.tabletblEmployees.DateRegularColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYearWithPreviousERNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.YearWithPreviousERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYearWithPreviousERNull()
            Me(Me.tabletblEmployees.YearWithPreviousERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsShiftScheduleIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ShiftScheduleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetShiftScheduleIdNull()
            Me(Me.tabletblEmployees.ShiftScheduleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmploymentTypeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EmploymentTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmploymentTypeIdNull()
            Me(Me.tabletblEmployees.EmploymentTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayrollFrequencyIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayrollFrequencyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayrollFrequencyIdNull()
            Me(Me.tabletblEmployees.PayrollFrequencyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTaxCodeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.TaxCodeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTaxCodeIdNull()
            Me(Me.tabletblEmployees.TaxCodeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousRateNull()
            Me(Me.tabletblEmployees.PreviousRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousMonthlyRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousMonthlyRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousMonthlyRateNull()
            Me(Me.tabletblEmployees.PreviousMonthlyRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousDailyRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousDailyRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousDailyRateNull()
            Me(Me.tabletblEmployees.PreviousDailyRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousHourlyRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousHourlyRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousHourlyRateNull()
            Me(Me.tabletblEmployees.PreviousHourlyRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousAllowanceNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousAllowanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousAllowanceNull()
            Me(Me.tabletblEmployees.PreviousAllowanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousMonthlyAllowanceNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousMonthlyAllowanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousMonthlyAllowanceNull()
            Me(Me.tabletblEmployees.PreviousMonthlyAllowanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousDailyAllowanceNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousDailyAllowanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousDailyAllowanceNull()
            Me(Me.tabletblEmployees.PreviousDailyAllowanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPreviousHourlyAllowanceNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PreviousHourlyAllowanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPreviousHourlyAllowanceNull()
            Me(Me.tabletblEmployees.PreviousHourlyAllowanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFixTaxRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.FixTaxRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFixTaxRateNull()
            Me(Me.tabletblEmployees.FixTaxRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsParameterIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ParameterIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetParameterIdNull()
            Me(Me.tabletblEmployees.ParameterIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPositionIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PositionIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPositionIdNull()
            Me(Me.tabletblEmployees.PositionIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaritalStatusIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MaritalStatusIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaritalStatusIdNull()
            Me(Me.tabletblEmployees.MaritalStatusIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGenderIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.GenderIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGenderIdNull()
            Me(Me.tabletblEmployees.GenderIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPictureNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PictureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPictureNull()
            Me(Me.tabletblEmployees.PictureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCostCenterIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CostCenterIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCostCenterIdNull()
            Me(Me.tabletblEmployees.CostCenterIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDepartmentIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DepartmentIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDepartmentIdNull()
            Me(Me.tabletblEmployees.DepartmentIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup1IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup1IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup1IdNull()
            Me(Me.tabletblEmployees.CustomGroup1IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup2IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup2IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup2IdNull()
            Me(Me.tabletblEmployees.CustomGroup2IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup3IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup3IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup3IdNull()
            Me(Me.tabletblEmployees.CustomGroup3IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField1Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField1Null()
            Me(Me.tabletblEmployees.CustomField1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField2Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField2Null()
            Me(Me.tabletblEmployees.CustomField2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField3Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField3Null()
            Me(Me.tabletblEmployees.CustomField3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayElementScheduleIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayElementScheduleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayElementScheduleIdNull()
            Me(Me.tabletblEmployees.PayElementScheduleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmailAddressNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EmailAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmailAddressNull()
            Me(Me.tabletblEmployees.EmailAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayslipPasswordNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayslipPasswordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayslipPasswordNull()
            Me(Me.tabletblEmployees.PayslipPasswordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateEffectiveNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateEffectiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateEffectiveNull()
            Me(Me.tabletblEmployees.DateEffectiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLocationIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LocationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLocationIdNull()
            Me(Me.tabletblEmployees.LocationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayGroupIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayGroupIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayGroupIdNull()
            Me(Me.tabletblEmployees.PayGroupIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMobileNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MobileNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMobileNoNull()
            Me(Me.tabletblEmployees.MobileNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDevicePasswordNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DevicePasswordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDevicePasswordNull()
            Me(Me.tabletblEmployees.DevicePasswordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLeaveAccrualScheduleIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LeaveAccrualScheduleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLeaveAccrualScheduleIdNull()
            Me(Me.tabletblEmployees.LeaveAccrualScheduleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsContractStartDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ContractStartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetContractStartDateNull()
            Me(Me.tabletblEmployees.ContractStartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsContractEndDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ContractEndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetContractEndDateNull()
            Me(Me.tabletblEmployees.ContractEndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDaysInYearNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DaysInYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDaysInYearNull()
            Me(Me.tabletblEmployees.DaysInYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupervisorIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SupervisorIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupervisorIdNull()
            Me(Me.tabletblEmployees.SupervisorIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxTaxableEarningNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MaxTaxableEarningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxTaxableEarningNull()
            Me(Me.tabletblEmployees.MaxTaxableEarningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTINBranchNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.TINBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTINBranchNull()
            Me(Me.tabletblEmployees.TINBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsClassIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ClassIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetClassIdNull()
            Me(Me.tabletblEmployees.ClassIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMinNetPayForLoanNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MinNetPayForLoanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMinNetPayForLoanNull()
            Me(Me.tabletblEmployees.MinNetPayForLoanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMinNetPayForLoanTypeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MinNetPayForLoanTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMinNetPayForLoanTypeIdNull()
            Me(Me.tabletblEmployees.MinNetPayForLoanTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsApprovingId1Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ApprovingId1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetApprovingId1Null()
            Me(Me.tabletblEmployees.ApprovingId1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsApprovingId2Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ApprovingId2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetApprovingId2Null()
            Me(Me.tabletblEmployees.ApprovingId2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEWTRateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EWTRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEWTRateNull()
            Me(Me.tabletblEmployees.EWTRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSecurityUserLevelIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SecurityUserLevelIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSecurityUserLevelIdNull()
            Me(Me.tabletblEmployees.SecurityUserLevelIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSecurityUserGroupIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SecurityUserGroupIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSecurityUserGroupIdNull()
            Me(Me.tabletblEmployees.SecurityUserGroupIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateClearedNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateClearedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateClearedNull()
            Me(Me.tabletblEmployees.DateClearedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmployeePasswordNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EmployeePasswordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmployeePasswordNull()
            Me(Me.tabletblEmployees.EmployeePasswordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWebkioskRoleIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.WebkioskRoleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWebkioskRoleIdNull()
            Me(Me.tabletblEmployees.WebkioskRoleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTeamIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.TeamIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTeamIdNull()
            Me(Me.tabletblEmployees.TeamIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegionIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.RegionIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegionIdNull()
            Me(Me.tabletblEmployees.RegionIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tabletblEmployees.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMotherMaidenNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MotherMaidenNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMotherMaidenNameNull()
            Me(Me.tabletblEmployees.MotherMaidenNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAlphanumericTaxCodeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.AlphanumericTaxCodeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAlphanumericTaxCodeIdNull()
            Me(Me.tabletblEmployees.AlphanumericTaxCodeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsResidenceStatusCodeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ResidenceStatusCodeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetResidenceStatusCodeIdNull()
            Me(Me.tabletblEmployees.ResidenceStatusCodeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWebkioskLoginFailedAttemptNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.WebkioskLoginFailedAttemptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWebkioskLoginFailedAttemptNull()
            Me(Me.tabletblEmployees.WebkioskLoginFailedAttemptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNicknameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.NicknameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNicknameNull()
            Me(Me.tabletblEmployees.NicknameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmployeePasswordDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.EmployeePasswordDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmployeePasswordDateNull()
            Me(Me.tabletblEmployees.EmployeePasswordDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayslipPasswordDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayslipPasswordDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayslipPasswordDateNull()
            Me(Me.tabletblEmployees.PayslipPasswordDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSalutationIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SalutationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSalutationIdNull()
            Me(Me.tabletblEmployees.SalutationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYearSeparatedNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.YearSeparatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYearSeparatedNull()
            Me(Me.tabletblEmployees.YearSeparatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRemarksEmploymentInformationNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.RemarksEmploymentInformationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRemarksEmploymentInformationNull()
            Me(Me.tabletblEmployees.RemarksEmploymentInformationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLeaveForfeitScheduleIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LeaveForfeitScheduleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLeaveForfeitScheduleIdNull()
            Me(Me.tabletblEmployees.LeaveForfeitScheduleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayoutTypeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayoutTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayoutTypeIdNull()
            Me(Me.tabletblEmployees.PayoutTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCitizenshipIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CitizenshipIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCitizenshipIdNull()
            Me(Me.tabletblEmployees.CitizenshipIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup4IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup4IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup4IdNull()
            Me(Me.tabletblEmployees.CustomGroup4IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup5IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup5IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup5IdNull()
            Me(Me.tabletblEmployees.CustomGroup5IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup6IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup6IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup6IdNull()
            Me(Me.tabletblEmployees.CustomGroup6IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup7IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup7IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup7IdNull()
            Me(Me.tabletblEmployees.CustomGroup7IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomGroup8IdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomGroup8IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomGroup8IdNull()
            Me(Me.tabletblEmployees.CustomGroup8IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField1Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField1Null()
            Me(Me.tabletblEmployees.CustomDateField1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField2Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField2Null()
            Me(Me.tabletblEmployees.CustomDateField2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField3Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField3Null()
            Me(Me.tabletblEmployees.CustomDateField3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField4Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField4Null()
            Me(Me.tabletblEmployees.CustomDateField4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField5Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField5Null()
            Me(Me.tabletblEmployees.CustomDateField5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField4Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField4Null()
            Me(Me.tabletblEmployees.CustomField4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField5Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField5Null()
            Me(Me.tabletblEmployees.CustomField5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField6Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField6Null()
            Me(Me.tabletblEmployees.CustomField6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField7Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField7Null()
            Me(Me.tabletblEmployees.CustomField7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomField8Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomField8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomField8Null()
            Me(Me.tabletblEmployees.CustomField8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSeparationPayTypeIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SeparationPayTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSeparationPayTypeIdNull()
            Me(Me.tabletblEmployees.SeparationPayTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsShiftScheduleTemplateGroupIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ShiftScheduleTemplateGroupIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetShiftScheduleTemplateGroupIdNull()
            Me(Me.tabletblEmployees.ShiftScheduleTemplateGroupIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateFiledofResignationNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateFiledofResignationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateFiledofResignationNull()
            Me(Me.tabletblEmployees.DateFiledofResignationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReasonForLeavingNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ReasonForLeavingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReasonForLeavingNull()
            Me(Me.tabletblEmployees.ReasonForLeavingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsClearanceStatusIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ClearanceStatusIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetClearanceStatusIdNull()
            Me(Me.tabletblEmployees.ClearanceStatusIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsClearanceIssuedByIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ClearanceIssuedByIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetClearanceIssuedByIdNull()
            Me(Me.tabletblEmployees.ClearanceIssuedByIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWaiverAndQuitclaimFinalPayNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.WaiverAndQuitclaimFinalPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWaiverAndQuitclaimFinalPayNull()
            Me(Me.tabletblEmployees.WaiverAndQuitclaimFinalPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWaiverAndQuitclaimDateReleasedNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.WaiverAndQuitclaimDateReleasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWaiverAndQuitclaimDateReleasedNull()
            Me(Me.tabletblEmployees.WaiverAndQuitclaimDateReleasedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWaiverAndQuitclaimReleasedByIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.WaiverAndQuitclaimReleasedByIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWaiverAndQuitclaimReleasedByIdNull()
            Me(Me.tabletblEmployees.WaiverAndQuitclaimReleasedByIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCardNumNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CardNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCardNumNull()
            Me(Me.tabletblEmployees.CardNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReasonForLeavingTypeNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ReasonForLeavingTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReasonForLeavingTypeNull()
            Me(Me.tabletblEmployees.ReasonForLeavingTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHDMFIDNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.HDMFIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHDMFIDNull()
            Me(Me.tabletblEmployees.HDMFIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLineageNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LineageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLineageNull()
            Me(Me.tabletblEmployees.LineageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLineageDepthNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.LineageDepthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLineageDepthNull()
            Me(Me.tabletblEmployees.LineageDepthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompanyBranchIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CompanyBranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompanyBranchIdNull()
            Me(Me.tabletblEmployees.CompanyBranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayrollAccountBranchCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PayrollAccountBranchCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayrollAccountBranchCodeNull()
            Me(Me.tabletblEmployees.PayrollAccountBranchCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAddressRegisteredNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.AddressRegisteredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAddressRegisteredNull()
            Me(Me.tabletblEmployees.AddressRegisteredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAddressLocalNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.AddressLocalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAddressLocalNull()
            Me(Me.tabletblEmployees.AddressLocalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCTCNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CTCNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCTCNoNull()
            Me(Me.tabletblEmployees.CTCNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField6Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField6Null()
            Me(Me.tabletblEmployees.CustomDateField6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField7Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField7Null()
            Me(Me.tabletblEmployees.CustomDateField7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomDateField8Null() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.CustomDateField8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomDateField8Null()
            Me(Me.tabletblEmployees.CustomDateField8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBackPayCoverageFromDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BackPayCoverageFromDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBackPayCoverageFromDateNull()
            Me(Me.tabletblEmployees.BackPayCoverageFromDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBackPayCoverageToDateNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.BackPayCoverageToDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBackPayCoverageToDateNull()
            Me(Me.tabletblEmployees.BackPayCoverageToDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPlainSSSNoNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.PlainSSSNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPlainSSSNoNull()
            Me(Me.tabletblEmployees.PlainSSSNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMinTakeHomePayBasisIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.MinTakeHomePayBasisIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMinTakeHomePayBasisIdNull()
            Me(Me.tabletblEmployees.MinTakeHomePayBasisIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSuffixIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.SuffixIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSuffixIdNull()
            Me(Me.tabletblEmployees.SuffixIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConcurrentEmployerNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ConcurrentEmployerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConcurrentEmployerNameNull()
            Me(Me.tabletblEmployees.ConcurrentEmployerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConcurrentEmployerTINNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ConcurrentEmployerTINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConcurrentEmployerTINNull()
            Me(Me.tabletblEmployees.ConcurrentEmployerTINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConcurrentEmployerTINBranchNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ConcurrentEmployerTINBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConcurrentEmployerTINBranchNull()
            Me(Me.tabletblEmployees.ConcurrentEmployerTINBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateEffectivityBasisNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.DateEffectivityBasisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateEffectivityBasisNull()
            Me(Me.tabletblEmployees.DateEffectivityBasisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFormalNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.FormalNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFormalNameNull()
            Me(Me.tabletblEmployees.FormalNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tabletblEmployees.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.FullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFullNameNull()
            Me(Me.tabletblEmployees.FullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReasonForSeparationIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.ReasonForSeparationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReasonForSeparationIdNull()
            Me(Me.tabletblEmployees.ReasonForSeparationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNationalityIdNull() As Boolean
            Return Me.IsNull(Me.tabletblEmployees.NationalityIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNationalityIdNull()
            Me(Me.tabletblEmployees.NationalityIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblPositionsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblPositions As tblPositionsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblPositions = CType(Me.Table,tblPositionsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tabletblPositions.IdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblPositions.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tabletblPositions.CodeColumn),String)
            End Get
            Set
                Me(Me.tabletblPositions.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletblPositions.NameColumn),String)
            End Get
            Set
                Me(Me.tabletblPositions.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Active() As Boolean
            Get
                Return CType(Me(Me.tabletblPositions.ActiveColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblPositions.ActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyId() As Integer
            Get
                Return CType(Me(Me.tabletblPositions.CompanyIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblPositions.CompanyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VersionNo() As Integer
            Get
                Return CType(Me(Me.tabletblPositions.VersionNoColumn),Integer)
            End Get
            Set
                Me(Me.tabletblPositions.VersionNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Ranking() As Integer
            Get
                Return CType(Me(Me.tabletblPositions.RankingColumn),Integer)
            End Get
            Set
                Me(Me.tabletblPositions.RankingColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblTeamsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblTeams As tblTeamsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblTeams = CType(Me.Table,tblTeamsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tabletblTeams.IdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblTeams.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblTeams.CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code' in table 'tblTeams' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblTeams.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletblTeams.NameColumn),String)
            End Get
            Set
                Me(Me.tabletblTeams.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Active() As Boolean
            Get
                Return CType(Me(Me.tabletblTeams.ActiveColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblTeams.ActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyId() As Integer
            Get
                Return CType(Me(Me.tabletblTeams.CompanyIdColumn),Integer)
            End Get
            Set
                Me(Me.tabletblTeams.CompanyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VersionNo() As Integer
            Get
                Return CType(Me(Me.tabletblTeams.VersionNoColumn),Integer)
            End Get
            Set
                Me(Me.tabletblTeams.VersionNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblTeams.CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCodeNull()
            Me(Me.tabletblTeams.CodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tblEmployeesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblEmployeesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tblEmployeesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tblEmployeesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tblPositionsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblPositionsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tblPositionsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tblPositionsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tblTeamsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblTeamsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tblTeamsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tblTeamsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsJeonsoftTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblEmployeesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblEmployees"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId")
            tableMapping.ColumnMappings.Add("EmployeeCode", "EmployeeCode")
            tableMapping.ColumnMappings.Add("AccessCode", "AccessCode")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("AddressForeign", "AddressForeign")
            tableMapping.ColumnMappings.Add("ZIPCodeAR", "ZIPCodeAR")
            tableMapping.ColumnMappings.Add("ZIPCodeAL", "ZIPCodeAL")
            tableMapping.ColumnMappings.Add("ZIPCodeAF", "ZIPCodeAF")
            tableMapping.ColumnMappings.Add("TelNo", "TelNo")
            tableMapping.ColumnMappings.Add("TINNo", "TINNo")
            tableMapping.ColumnMappings.Add("BankAccountId", "BankAccountId")
            tableMapping.ColumnMappings.Add("BankAccountNo", "BankAccountNo")
            tableMapping.ColumnMappings.Add("BankAccountTypeId", "BankAccountTypeId")
            tableMapping.ColumnMappings.Add("SSSNo", "SSSNo")
            tableMapping.ColumnMappings.Add("PagIbigNo", "PagIbigNo")
            tableMapping.ColumnMappings.Add("PhilHealthNo", "PhilHealthNo")
            tableMapping.ColumnMappings.Add("IsWife", "IsWife")
            tableMapping.ColumnMappings.Add("RDOCode", "RDOCode")
            tableMapping.ColumnMappings.Add("BirthDate", "BirthDate")
            tableMapping.ColumnMappings.Add("DateHired", "DateHired")
            tableMapping.ColumnMappings.Add("DateSeparated", "DateSeparated")
            tableMapping.ColumnMappings.Add("DateRegular", "DateRegular")
            tableMapping.ColumnMappings.Add("YearWithPreviousER", "YearWithPreviousER")
            tableMapping.ColumnMappings.Add("ShiftScheduleId", "ShiftScheduleId")
            tableMapping.ColumnMappings.Add("EmploymentTypeId", "EmploymentTypeId")
            tableMapping.ColumnMappings.Add("PaymentTypeId", "PaymentTypeId")
            tableMapping.ColumnMappings.Add("PayrollFrequencyId", "PayrollFrequencyId")
            tableMapping.ColumnMappings.Add("TaxCodeId", "TaxCodeId")
            tableMapping.ColumnMappings.Add("PreviousRate", "PreviousRate")
            tableMapping.ColumnMappings.Add("Rate", "Rate")
            tableMapping.ColumnMappings.Add("MonthlyRate", "MonthlyRate")
            tableMapping.ColumnMappings.Add("PreviousMonthlyRate", "PreviousMonthlyRate")
            tableMapping.ColumnMappings.Add("DailyRate", "DailyRate")
            tableMapping.ColumnMappings.Add("PreviousDailyRate", "PreviousDailyRate")
            tableMapping.ColumnMappings.Add("HourlyRate", "HourlyRate")
            tableMapping.ColumnMappings.Add("PreviousHourlyRate", "PreviousHourlyRate")
            tableMapping.ColumnMappings.Add("PreviousAllowance", "PreviousAllowance")
            tableMapping.ColumnMappings.Add("Allowance", "Allowance")
            tableMapping.ColumnMappings.Add("MonthlyAllowance", "MonthlyAllowance")
            tableMapping.ColumnMappings.Add("PreviousMonthlyAllowance", "PreviousMonthlyAllowance")
            tableMapping.ColumnMappings.Add("DailyAllowance", "DailyAllowance")
            tableMapping.ColumnMappings.Add("PreviousDailyAllowance", "PreviousDailyAllowance")
            tableMapping.ColumnMappings.Add("HourlyAllowance", "HourlyAllowance")
            tableMapping.ColumnMappings.Add("PreviousHourlyAllowance", "PreviousHourlyAllowance")
            tableMapping.ColumnMappings.Add("COLA", "COLA")
            tableMapping.ColumnMappings.Add("MonthlyCOLA", "MonthlyCOLA")
            tableMapping.ColumnMappings.Add("DailyCOLA", "DailyCOLA")
            tableMapping.ColumnMappings.Add("HourlyCOLA", "HourlyCOLA")
            tableMapping.ColumnMappings.Add("FixTaxRate", "FixTaxRate")
            tableMapping.ColumnMappings.Add("Active", "Active")
            tableMapping.ColumnMappings.Add("WithPreviousER", "WithPreviousER")
            tableMapping.ColumnMappings.Add("ParameterId", "ParameterId")
            tableMapping.ColumnMappings.Add("PositionId", "PositionId")
            tableMapping.ColumnMappings.Add("MaritalStatusId", "MaritalStatusId")
            tableMapping.ColumnMappings.Add("GenderId", "GenderId")
            tableMapping.ColumnMappings.Add("TimeSourceId", "TimeSourceId")
            tableMapping.ColumnMappings.Add("Picture", "Picture")
            tableMapping.ColumnMappings.Add("CostCenterId", "CostCenterId")
            tableMapping.ColumnMappings.Add("DepartmentId", "DepartmentId")
            tableMapping.ColumnMappings.Add("CustomGroup1Id", "CustomGroup1Id")
            tableMapping.ColumnMappings.Add("CustomGroup2Id", "CustomGroup2Id")
            tableMapping.ColumnMappings.Add("CustomGroup3Id", "CustomGroup3Id")
            tableMapping.ColumnMappings.Add("CustomField1", "CustomField1")
            tableMapping.ColumnMappings.Add("CustomField2", "CustomField2")
            tableMapping.ColumnMappings.Add("CustomField3", "CustomField3")
            tableMapping.ColumnMappings.Add("PayElementScheduleId", "PayElementScheduleId")
            tableMapping.ColumnMappings.Add("EmailAddress", "EmailAddress")
            tableMapping.ColumnMappings.Add("IsSSS", "IsSSS")
            tableMapping.ColumnMappings.Add("IsTax", "IsTax")
            tableMapping.ColumnMappings.Add("IsPHIC", "IsPHIC")
            tableMapping.ColumnMappings.Add("IsHDMF", "IsHDMF")
            tableMapping.ColumnMappings.Add("IsUnion", "IsUnion")
            tableMapping.ColumnMappings.Add("IsEmailPayslip", "IsEmailPayslip")
            tableMapping.ColumnMappings.Add("PayslipPassword", "PayslipPassword")
            tableMapping.ColumnMappings.Add("DateEffective", "DateEffective")
            tableMapping.ColumnMappings.Add("System", "System")
            tableMapping.ColumnMappings.Add("LocationId", "LocationId")
            tableMapping.ColumnMappings.Add("VersionNo", "VersionNo")
            tableMapping.ColumnMappings.Add("PayGroupId", "PayGroupId")
            tableMapping.ColumnMappings.Add("MobileNo", "MobileNo")
            tableMapping.ColumnMappings.Add("DevicePassword", "DevicePassword")
            tableMapping.ColumnMappings.Add("LeaveAccrualScheduleId", "LeaveAccrualScheduleId")
            tableMapping.ColumnMappings.Add("ContractStartDate", "ContractStartDate")
            tableMapping.ColumnMappings.Add("ContractEndDate", "ContractEndDate")
            tableMapping.ColumnMappings.Add("DaysInYear", "DaysInYear")
            tableMapping.ColumnMappings.Add("SupervisorId", "SupervisorId")
            tableMapping.ColumnMappings.Add("WTaxExempt", "WTaxExempt")
            tableMapping.ColumnMappings.Add("MaxTaxableEarning", "MaxTaxableEarning")
            tableMapping.ColumnMappings.Add("TINBranch", "TINBranch")
            tableMapping.ColumnMappings.Add("ClassId", "ClassId")
            tableMapping.ColumnMappings.Add("MinNetPayForLoan", "MinNetPayForLoan")
            tableMapping.ColumnMappings.Add("MinNetPayForLoanTypeId", "MinNetPayForLoanTypeId")
            tableMapping.ColumnMappings.Add("ApprovingId1", "ApprovingId1")
            tableMapping.ColumnMappings.Add("ApprovingId2", "ApprovingId2")
            tableMapping.ColumnMappings.Add("EWTRate", "EWTRate")
            tableMapping.ColumnMappings.Add("SecurityUserLevelId", "SecurityUserLevelId")
            tableMapping.ColumnMappings.Add("SecurityUserGroupId", "SecurityUserGroupId")
            tableMapping.ColumnMappings.Add("IsProcessed", "IsProcessed")
            tableMapping.ColumnMappings.Add("IsCleared", "IsCleared")
            tableMapping.ColumnMappings.Add("DateCleared", "DateCleared")
            tableMapping.ColumnMappings.Add("EmployeePassword", "EmployeePassword")
            tableMapping.ColumnMappings.Add("IsClosed", "IsClosed")
            tableMapping.ColumnMappings.Add("WebkioskRoleId", "WebkioskRoleId")
            tableMapping.ColumnMappings.Add("TeamId", "TeamId")
            tableMapping.ColumnMappings.Add("RegionId", "RegionId")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("MotherMaidenName", "MotherMaidenName")
            tableMapping.ColumnMappings.Add("AlphanumericTaxCodeId", "AlphanumericTaxCodeId")
            tableMapping.ColumnMappings.Add("ResidenceStatusCodeId", "ResidenceStatusCodeId")
            tableMapping.ColumnMappings.Add("WebkioskLoginFailedAttempt", "WebkioskLoginFailedAttempt")
            tableMapping.ColumnMappings.Add("IsMainEmployer", "IsMainEmployer")
            tableMapping.ColumnMappings.Add("Nickname", "Nickname")
            tableMapping.ColumnMappings.Add("EmployeePasswordDate", "EmployeePasswordDate")
            tableMapping.ColumnMappings.Add("IsSubstitutedFiling", "IsSubstitutedFiling")
            tableMapping.ColumnMappings.Add("PayslipPasswordDate", "PayslipPasswordDate")
            tableMapping.ColumnMappings.Add("SalutationId", "SalutationId")
            tableMapping.ColumnMappings.Add("IsHusband", "IsHusband")
            tableMapping.ColumnMappings.Add("YearSeparated", "YearSeparated")
            tableMapping.ColumnMappings.Add("RemarksEmploymentInformation", "RemarksEmploymentInformation")
            tableMapping.ColumnMappings.Add("LeaveForfeitScheduleId", "LeaveForfeitScheduleId")
            tableMapping.ColumnMappings.Add("PayoutTypeId", "PayoutTypeId")
            tableMapping.ColumnMappings.Add("CitizenshipId", "CitizenshipId")
            tableMapping.ColumnMappings.Add("CustomGroup4Id", "CustomGroup4Id")
            tableMapping.ColumnMappings.Add("CustomGroup5Id", "CustomGroup5Id")
            tableMapping.ColumnMappings.Add("CustomGroup6Id", "CustomGroup6Id")
            tableMapping.ColumnMappings.Add("CustomGroup7Id", "CustomGroup7Id")
            tableMapping.ColumnMappings.Add("CustomGroup8Id", "CustomGroup8Id")
            tableMapping.ColumnMappings.Add("CustomDateField1", "CustomDateField1")
            tableMapping.ColumnMappings.Add("CustomDateField2", "CustomDateField2")
            tableMapping.ColumnMappings.Add("CustomDateField3", "CustomDateField3")
            tableMapping.ColumnMappings.Add("CustomDateField4", "CustomDateField4")
            tableMapping.ColumnMappings.Add("CustomDateField5", "CustomDateField5")
            tableMapping.ColumnMappings.Add("CustomField4", "CustomField4")
            tableMapping.ColumnMappings.Add("CustomField5", "CustomField5")
            tableMapping.ColumnMappings.Add("CustomField6", "CustomField6")
            tableMapping.ColumnMappings.Add("CustomField7", "CustomField7")
            tableMapping.ColumnMappings.Add("CustomField8", "CustomField8")
            tableMapping.ColumnMappings.Add("SeparationPayTypeId", "SeparationPayTypeId")
            tableMapping.ColumnMappings.Add("ShiftScheduleTemplateGroupId", "ShiftScheduleTemplateGroupId")
            tableMapping.ColumnMappings.Add("DateFiledofResignation", "DateFiledofResignation")
            tableMapping.ColumnMappings.Add("ReasonForLeaving", "ReasonForLeaving")
            tableMapping.ColumnMappings.Add("IsRehirable", "IsRehirable")
            tableMapping.ColumnMappings.Add("ClearanceStatusId", "ClearanceStatusId")
            tableMapping.ColumnMappings.Add("ClearanceIssuedById", "ClearanceIssuedById")
            tableMapping.ColumnMappings.Add("WaiverAndQuitclaimFinalPay", "WaiverAndQuitclaimFinalPay")
            tableMapping.ColumnMappings.Add("IsReleasedWaiverAndQuitclaim", "IsReleasedWaiverAndQuitclaim")
            tableMapping.ColumnMappings.Add("WaiverAndQuitclaimDateReleased", "WaiverAndQuitclaimDateReleased")
            tableMapping.ColumnMappings.Add("WaiverAndQuitclaimReleasedById", "WaiverAndQuitclaimReleasedById")
            tableMapping.ColumnMappings.Add("CardNum", "CardNum")
            tableMapping.ColumnMappings.Add("ReasonForLeavingType", "ReasonForLeavingType")
            tableMapping.ColumnMappings.Add("HDMFID", "HDMFID")
            tableMapping.ColumnMappings.Add("Lineage", "Lineage")
            tableMapping.ColumnMappings.Add("LineageDepth", "LineageDepth")
            tableMapping.ColumnMappings.Add("CompanyBranchId", "CompanyBranchId")
            tableMapping.ColumnMappings.Add("AllocationPayoutNo", "AllocationPayoutNo")
            tableMapping.ColumnMappings.Add("AllocationTypeId", "AllocationTypeId")
            tableMapping.ColumnMappings.Add("AllocationValue", "AllocationValue")
            tableMapping.ColumnMappings.Add("PayrollAccountBranchCode", "PayrollAccountBranchCode")
            tableMapping.ColumnMappings.Add("AddressRegistered", "AddressRegistered")
            tableMapping.ColumnMappings.Add("AddressLocal", "AddressLocal")
            tableMapping.ColumnMappings.Add("CTCNo", "CTCNo")
            tableMapping.ColumnMappings.Add("CustomDateField6", "CustomDateField6")
            tableMapping.ColumnMappings.Add("CustomDateField7", "CustomDateField7")
            tableMapping.ColumnMappings.Add("CustomDateField8", "CustomDateField8")
            tableMapping.ColumnMappings.Add("CustomCheckbox1", "CustomCheckbox1")
            tableMapping.ColumnMappings.Add("CustomCheckbox2", "CustomCheckbox2")
            tableMapping.ColumnMappings.Add("CustomCheckbox3", "CustomCheckbox3")
            tableMapping.ColumnMappings.Add("CustomCheckbox4", "CustomCheckbox4")
            tableMapping.ColumnMappings.Add("CustomCheckbox5", "CustomCheckbox5")
            tableMapping.ColumnMappings.Add("CustomCheckbox6", "CustomCheckbox6")
            tableMapping.ColumnMappings.Add("CustomCheckbox7", "CustomCheckbox7")
            tableMapping.ColumnMappings.Add("CustomCheckbox8", "CustomCheckbox8")
            tableMapping.ColumnMappings.Add("BackPayCoverageFromDate", "BackPayCoverageFromDate")
            tableMapping.ColumnMappings.Add("BackPayCoverageToDate", "BackPayCoverageToDate")
            tableMapping.ColumnMappings.Add("PlainSSSNo", "PlainSSSNo")
            tableMapping.ColumnMappings.Add("MinTakeHomePayBasisId", "MinTakeHomePayBasisId")
            tableMapping.ColumnMappings.Add("SuffixId", "SuffixId")
            tableMapping.ColumnMappings.Add("ConcurrentEmployerName", "ConcurrentEmployerName")
            tableMapping.ColumnMappings.Add("ConcurrentEmployerTIN", "ConcurrentEmployerTIN")
            tableMapping.ColumnMappings.Add("ConcurrentEmployerTINBranch", "ConcurrentEmployerTINBranch")
            tableMapping.ColumnMappings.Add("DateEffectivityBasis", "DateEffectivityBasis")
            tableMapping.ColumnMappings.Add("FormalName", "FormalName")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("FullName", "FullName")
            tableMapping.ColumnMappings.Add("ReasonForSeparationId", "ReasonForSeparationId")
            tableMapping.ColumnMappings.Add("NationalityId", "NationalityId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblEmployees] WHERE (([Id] = @Original_Id) AND ([CompanyId] = "& _ 
                "@Original_CompanyId) AND ((@IsNull_EmployeeCode = 1 AND [EmployeeCode] IS NULL) "& _ 
                "OR ([EmployeeCode] = @Original_EmployeeCode)) AND ((@IsNull_AccessCode = 1 AND ["& _ 
                "AccessCode] IS NULL) OR ([AccessCode] = @Original_AccessCode)) AND ((@IsNull_Fir"& _ 
                "stName = 1 AND [FirstName] IS NULL) OR ([FirstName] = @Original_FirstName)) AND "& _ 
                "((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_"& _ 
                "MiddleName)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] ="& _ 
                " @Original_LastName)) AND ((@IsNull_AddressForeign = 1 AND [AddressForeign] IS N"& _ 
                "ULL) OR ([AddressForeign] = @Original_AddressForeign)) AND ((@IsNull_ZIPCodeAR ="& _ 
                " 1 AND [ZIPCodeAR] IS NULL) OR ([ZIPCodeAR] = @Original_ZIPCodeAR)) AND ((@IsNul"& _ 
                "l_ZIPCodeAL = 1 AND [ZIPCodeAL] IS NULL) OR ([ZIPCodeAL] = @Original_ZIPCodeAL))"& _ 
                " AND ((@IsNull_ZIPCodeAF = 1 AND [ZIPCodeAF] IS NULL) OR ([ZIPCodeAF] = @Origina"& _ 
                "l_ZIPCodeAF)) AND ((@IsNull_TelNo = 1 AND [TelNo] IS NULL) OR ([TelNo] = @Origin"& _ 
                "al_TelNo)) AND ((@IsNull_TINNo = 1 AND [TINNo] IS NULL) OR ([TINNo] = @Original_"& _ 
                "TINNo)) AND ((@IsNull_BankAccountId = 1 AND [BankAccountId] IS NULL) OR ([BankAc"& _ 
                "countId] = @Original_BankAccountId)) AND ((@IsNull_BankAccountNo = 1 AND [BankAc"& _ 
                "countNo] IS NULL) OR ([BankAccountNo] = @Original_BankAccountNo)) AND ((@IsNull_"& _ 
                "BankAccountTypeId = 1 AND [BankAccountTypeId] IS NULL) OR ([BankAccountTypeId] ="& _ 
                " @Original_BankAccountTypeId)) AND ((@IsNull_SSSNo = 1 AND [SSSNo] IS NULL) OR ("& _ 
                "[SSSNo] = @Original_SSSNo)) AND ((@IsNull_PagIbigNo = 1 AND [PagIbigNo] IS NULL)"& _ 
                " OR ([PagIbigNo] = @Original_PagIbigNo)) AND ((@IsNull_PhilHealthNo = 1 AND [Phi"& _ 
                "lHealthNo] IS NULL) OR ([PhilHealthNo] = @Original_PhilHealthNo)) AND ([IsWife] "& _ 
                "= @Original_IsWife) AND ((@IsNull_RDOCode = 1 AND [RDOCode] IS NULL) OR ([RDOCod"& _ 
                "e] = @Original_RDOCode)) AND ((@IsNull_BirthDate = 1 AND [BirthDate] IS NULL) OR"& _ 
                " ([BirthDate] = @Original_BirthDate)) AND ((@IsNull_DateHired = 1 AND [DateHired"& _ 
                "] IS NULL) OR ([DateHired] = @Original_DateHired)) AND ((@IsNull_DateSeparated ="& _ 
                " 1 AND [DateSeparated] IS NULL) OR ([DateSeparated] = @Original_DateSeparated)) "& _ 
                "AND ((@IsNull_DateRegular = 1 AND [DateRegular] IS NULL) OR ([DateRegular] = @Or"& _ 
                "iginal_DateRegular)) AND ((@IsNull_YearWithPreviousER = 1 AND [YearWithPreviousE"& _ 
                "R] IS NULL) OR ([YearWithPreviousER] = @Original_YearWithPreviousER)) AND ((@IsN"& _ 
                "ull_ShiftScheduleId = 1 AND [ShiftScheduleId] IS NULL) OR ([ShiftScheduleId] = @"& _ 
                "Original_ShiftScheduleId)) AND ((@IsNull_EmploymentTypeId = 1 AND [EmploymentTyp"& _ 
                "eId] IS NULL) OR ([EmploymentTypeId] = @Original_EmploymentTypeId)) AND ([Paymen"& _ 
                "tTypeId] = @Original_PaymentTypeId) AND ((@IsNull_PayrollFrequencyId = 1 AND [Pa"& _ 
                "yrollFrequencyId] IS NULL) OR ([PayrollFrequencyId] = @Original_PayrollFrequency"& _ 
                "Id)) AND ((@IsNull_TaxCodeId = 1 AND [TaxCodeId] IS NULL) OR ([TaxCodeId] = @Ori"& _ 
                "ginal_TaxCodeId)) AND ((@IsNull_PreviousRate = 1 AND [PreviousRate] IS NULL) OR "& _ 
                "([PreviousRate] = @Original_PreviousRate)) AND ([Rate] = @Original_Rate) AND ([M"& _ 
                "onthlyRate] = @Original_MonthlyRate) AND ((@IsNull_PreviousMonthlyRate = 1 AND ["& _ 
                "PreviousMonthlyRate] IS NULL) OR ([PreviousMonthlyRate] = @Original_PreviousMont"& _ 
                "hlyRate)) AND ([DailyRate] = @Original_DailyRate) AND ((@IsNull_PreviousDailyRat"& _ 
                "e = 1 AND [PreviousDailyRate] IS NULL) OR ([PreviousDailyRate] = @Original_Previ"& _ 
                "ousDailyRate)) AND ([HourlyRate] = @Original_HourlyRate) AND ((@IsNull_PreviousH"& _ 
                "ourlyRate = 1 AND [PreviousHourlyRate] IS NULL) OR ([PreviousHourlyRate] = @Orig"& _ 
                "inal_PreviousHourlyRate)) AND ((@IsNull_PreviousAllowance = 1 AND [PreviousAllow"& _ 
                "ance] IS NULL) OR ([PreviousAllowance] = @Original_PreviousAllowance)) AND ([All"& _ 
                "owance] = @Original_Allowance) AND ([MonthlyAllowance] = @Original_MonthlyAllowa"& _ 
                "nce) AND ((@IsNull_PreviousMonthlyAllowance = 1 AND [PreviousMonthlyAllowance] I"& _ 
                "S NULL) OR ([PreviousMonthlyAllowance] = @Original_PreviousMonthlyAllowance)) AN"& _ 
                "D ([DailyAllowance] = @Original_DailyAllowance) AND ((@IsNull_PreviousDailyAllow"& _ 
                "ance = 1 AND [PreviousDailyAllowance] IS NULL) OR ([PreviousDailyAllowance] = @O"& _ 
                "riginal_PreviousDailyAllowance)) AND ([HourlyAllowance] = @Original_HourlyAllowa"& _ 
                "nce) AND ((@IsNull_PreviousHourlyAllowance = 1 AND [PreviousHourlyAllowance] IS "& _ 
                "NULL) OR ([PreviousHourlyAllowance] = @Original_PreviousHourlyAllowance)) AND (["& _ 
                "COLA] = @Original_COLA) AND ([MonthlyCOLA] = @Original_MonthlyCOLA) AND ([DailyC"& _ 
                "OLA] = @Original_DailyCOLA) AND ([HourlyCOLA] = @Original_HourlyCOLA) AND ((@IsN"& _ 
                "ull_FixTaxRate = 1 AND [FixTaxRate] IS NULL) OR ([FixTaxRate] = @Original_FixTax"& _ 
                "Rate)) AND ([Active] = @Original_Active) AND ([WithPreviousER] = @Original_WithP"& _ 
                "reviousER) AND ((@IsNull_ParameterId = 1 AND [ParameterId] IS NULL) OR ([Paramet"& _ 
                "erId] = @Original_ParameterId)) AND ((@IsNull_PositionId = 1 AND [PositionId] IS"& _ 
                " NULL) OR ([PositionId] = @Original_PositionId)) AND ((@IsNull_MaritalStatusId ="& _ 
                " 1 AND [MaritalStatusId] IS NULL) OR ([MaritalStatusId] = @Original_MaritalStatu"& _ 
                "sId)) AND ((@IsNull_GenderId = 1 AND [GenderId] IS NULL) OR ([GenderId] = @Origi"& _ 
                "nal_GenderId)) AND ([TimeSourceId] = @Original_TimeSourceId) AND ((@IsNull_CostC"& _ 
                "enterId = 1 AND [CostCenterId] IS NULL) OR ([CostCenterId] = @Original_CostCente"& _ 
                "rId)) AND ((@IsNull_DepartmentId = 1 AND [DepartmentId] IS NULL) OR ([Department"& _ 
                "Id] = @Original_DepartmentId)) AND ((@IsNull_CustomGroup1Id = 1 AND [CustomGroup"& _ 
                "1Id] IS NULL) OR ([CustomGroup1Id] = @Original_CustomGroup1Id)) AND ((@IsNull_Cu"& _ 
                "stomGroup2Id = 1 AND [CustomGroup2Id] IS NULL) OR ([CustomGroup2Id] = @Original_"& _ 
                "CustomGroup2Id)) AND ((@IsNull_CustomGroup3Id = 1 AND [CustomGroup3Id] IS NULL) "& _ 
                "OR ([CustomGroup3Id] = @Original_CustomGroup3Id)) AND ((@IsNull_CustomField1 = 1"& _ 
                " AND [CustomField1] IS NULL) OR ([CustomField1] = @Original_CustomField1)) AND ("& _ 
                "(@IsNull_CustomField2 = 1 AND [CustomField2] IS NULL) OR ([CustomField2] = @Orig"& _ 
                "inal_CustomField2)) AND ((@IsNull_CustomField3 = 1 AND [CustomField3] IS NULL) O"& _ 
                "R ([CustomField3] = @Original_CustomField3)) AND ((@IsNull_PayElementScheduleId "& _ 
                "= 1 AND [PayElementScheduleId] IS NULL) OR ([PayElementScheduleId] = @Original_P"& _ 
                "ayElementScheduleId)) AND ((@IsNull_EmailAddress = 1 AND [EmailAddress] IS NULL)"& _ 
                " OR ([EmailAddress] = @Original_EmailAddress)) AND ([IsSSS] = @Original_IsSSS) A"& _ 
                "ND ([IsTax] = @Original_IsTax) AND ([IsPHIC] = @Original_IsPHIC) AND ([IsHDMF] ="& _ 
                " @Original_IsHDMF) AND ([IsUnion] = @Original_IsUnion) AND ([IsEmailPayslip] = @"& _ 
                "Original_IsEmailPayslip) AND ((@IsNull_PayslipPassword = 1 AND [PayslipPassword]"& _ 
                " IS NULL) OR ([PayslipPassword] = @Original_PayslipPassword)) AND ((@IsNull_Date"& _ 
                "Effective = 1 AND [DateEffective] IS NULL) OR ([DateEffective] = @Original_DateE"& _ 
                "ffective)) AND ([System] = @Original_System) AND ((@IsNull_LocationId = 1 AND [L"& _ 
                "ocationId] IS NULL) OR ([LocationId] = @Original_LocationId)) AND ([VersionNo] ="& _ 
                " @Original_VersionNo) AND ((@IsNull_PayGroupId = 1 AND [PayGroupId] IS NULL) OR "& _ 
                "([PayGroupId] = @Original_PayGroupId)) AND ((@IsNull_MobileNo = 1 AND [MobileNo]"& _ 
                " IS NULL) OR ([MobileNo] = @Original_MobileNo)) AND ((@IsNull_DevicePassword = 1"& _ 
                " AND [DevicePassword] IS NULL) OR ([DevicePassword] = @Original_DevicePassword))"& _ 
                " AND ((@IsNull_LeaveAccrualScheduleId = 1 AND [LeaveAccrualScheduleId] IS NULL) "& _ 
                "OR ([LeaveAccrualScheduleId] = @Original_LeaveAccrualScheduleId)) AND ((@IsNull_"& _ 
                "ContractStartDate = 1 AND [ContractStartDate] IS NULL) OR ([ContractStartDate] ="& _ 
                " @Original_ContractStartDate)) AND ((@IsNull_ContractEndDate = 1 AND [ContractEn"& _ 
                "dDate] IS NULL) OR ([ContractEndDate] = @Original_ContractEndDate)) AND ((@IsNul"& _ 
                "l_DaysInYear = 1 AND [DaysInYear] IS NULL) OR ([DaysInYear] = @Original_DaysInYe"& _ 
                "ar)) AND ((@IsNull_SupervisorId = 1 AND [SupervisorId] IS NULL) OR ([SupervisorI"& _ 
                "d] = @Original_SupervisorId)) AND ([WTaxExempt] = @Original_WTaxExempt) AND ((@I"& _ 
                "sNull_MaxTaxableEarning = 1 AND [MaxTaxableEarning] IS NULL) OR ([MaxTaxableEarn"& _ 
                "ing] = @Original_MaxTaxableEarning)) AND ((@IsNull_TINBranch = 1 AND [TINBranch]"& _ 
                " IS NULL) OR ([TINBranch] = @Original_TINBranch)) AND ((@IsNull_ClassId = 1 AND "& _ 
                "[ClassId] IS NULL) OR ([ClassId] = @Original_ClassId)) AND ((@IsNull_MinNetPayFo"& _ 
                "rLoan = 1 AND [MinNetPayForLoan] IS NULL) OR ([MinNetPayForLoan] = @Original_Min"& _ 
                "NetPayForLoan)) AND ((@IsNull_MinNetPayForLoanTypeId = 1 AND [MinNetPayForLoanTy"& _ 
                "peId] IS NULL) OR ([MinNetPayForLoanTypeId] = @Original_MinNetPayForLoanTypeId))"& _ 
                " AND ((@IsNull_ApprovingId1 = 1 AND [ApprovingId1] IS NULL) OR ([ApprovingId1] ="& _ 
                " @Original_ApprovingId1)) AND ((@IsNull_ApprovingId2 = 1 AND [ApprovingId2] IS N"& _ 
                "ULL) OR ([ApprovingId2] = @Original_ApprovingId2)) AND ((@IsNull_EWTRate = 1 AND"& _ 
                " [EWTRate] IS NULL) OR ([EWTRate] = @Original_EWTRate)) AND ((@IsNull_SecurityUs"& _ 
                "erLevelId = 1 AND [SecurityUserLevelId] IS NULL) OR ([SecurityUserLevelId] = @Or"& _ 
                "iginal_SecurityUserLevelId)) AND ((@IsNull_SecurityUserGroupId = 1 AND [Security"& _ 
                "UserGroupId] IS NULL) OR ([SecurityUserGroupId] = @Original_SecurityUserGroupId)"& _ 
                ") AND ([IsProcessed] = @Original_IsProcessed) AND ([IsCleared] = @Original_IsCle"& _ 
                "ared) AND ((@IsNull_DateCleared = 1 AND [DateCleared] IS NULL) OR ([DateCleared]"& _ 
                " = @Original_DateCleared)) AND ((@IsNull_EmployeePassword = 1 AND [EmployeePassw"& _ 
                "ord] IS NULL) OR ([EmployeePassword] = @Original_EmployeePassword)) AND ([IsClos"& _ 
                "ed] = @Original_IsClosed) AND ((@IsNull_WebkioskRoleId = 1 AND [WebkioskRoleId] "& _ 
                "IS NULL) OR ([WebkioskRoleId] = @Original_WebkioskRoleId)) AND ((@IsNull_TeamId "& _ 
                "= 1 AND [TeamId] IS NULL) OR ([TeamId] = @Original_TeamId)) AND ((@IsNull_Region"& _ 
                "Id = 1 AND [RegionId] IS NULL) OR ([RegionId] = @Original_RegionId)) AND ((@IsNu"& _ 
                "ll_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Original_Remarks)) AND (("& _ 
                "@IsNull_MotherMaidenName = 1 AND [MotherMaidenName] IS NULL) OR ([MotherMaidenNa"& _ 
                "me] = @Original_MotherMaidenName)) AND ((@IsNull_AlphanumericTaxCodeId = 1 AND ["& _ 
                "AlphanumericTaxCodeId] IS NULL) OR ([AlphanumericTaxCodeId] = @Original_Alphanum"& _ 
                "ericTaxCodeId)) AND ((@IsNull_ResidenceStatusCodeId = 1 AND [ResidenceStatusCode"& _ 
                "Id] IS NULL) OR ([ResidenceStatusCodeId] = @Original_ResidenceStatusCodeId)) AND"& _ 
                " ((@IsNull_WebkioskLoginFailedAttempt = 1 AND [WebkioskLoginFailedAttempt] IS NU"& _ 
                "LL) OR ([WebkioskLoginFailedAttempt] = @Original_WebkioskLoginFailedAttempt)) AN"& _ 
                "D ([IsMainEmployer] = @Original_IsMainEmployer) AND ((@IsNull_Nickname = 1 AND ["& _ 
                "Nickname] IS NULL) OR ([Nickname] = @Original_Nickname)) AND ((@IsNull_EmployeeP"& _ 
                "asswordDate = 1 AND [EmployeePasswordDate] IS NULL) OR ([EmployeePasswordDate] ="& _ 
                " @Original_EmployeePasswordDate)) AND ([IsSubstitutedFiling] = @Original_IsSubst"& _ 
                "itutedFiling) AND ((@IsNull_PayslipPasswordDate = 1 AND [PayslipPasswordDate] IS"& _ 
                " NULL) OR ([PayslipPasswordDate] = @Original_PayslipPasswordDate)) AND ((@IsNull"& _ 
                "_SalutationId = 1 AND [SalutationId] IS NULL) OR ([SalutationId] = @Original_Sal"& _ 
                "utationId)) AND ([IsHusband] = @Original_IsHusband) AND ((@IsNull_YearSeparated "& _ 
                "= 1 AND [YearSeparated] IS NULL) OR ([YearSeparated] = @Original_YearSeparated))"& _ 
                " AND ((@IsNull_RemarksEmploymentInformation = 1 AND [RemarksEmploymentInformatio"& _ 
                "n] IS NULL) OR ([RemarksEmploymentInformation] = @Original_RemarksEmploymentInfo"& _ 
                "rmation)) AND ((@IsNull_LeaveForfeitScheduleId = 1 AND [LeaveForfeitScheduleId] "& _ 
                "IS NULL) OR ([LeaveForfeitScheduleId] = @Original_LeaveForfeitScheduleId)) AND ("& _ 
                "(@IsNull_PayoutTypeId = 1 AND [PayoutTypeId] IS NULL) OR ([PayoutTypeId] = @Orig"& _ 
                "inal_PayoutTypeId)) AND ((@IsNull_CitizenshipId = 1 AND [CitizenshipId] IS NULL)"& _ 
                " OR ([CitizenshipId] = @Original_CitizenshipId)) AND ((@IsNull_CustomGroup4Id = "& _ 
                "1 AND [CustomGroup4Id] IS NULL) OR ([CustomGroup4Id] = @Original_CustomGroup4Id)"& _ 
                ") AND ((@IsNull_CustomGroup5Id = 1 AND [CustomGroup5Id] IS NULL) OR ([CustomGrou"& _ 
                "p5Id] = @Original_CustomGroup5Id)) AND ((@IsNull_CustomGroup6Id = 1 AND [CustomG"& _ 
                "roup6Id] IS NULL) OR ([CustomGroup6Id] = @Original_CustomGroup6Id)) AND ((@IsNul"& _ 
                "l_CustomGroup7Id = 1 AND [CustomGroup7Id] IS NULL) OR ([CustomGroup7Id] = @Origi"& _ 
                "nal_CustomGroup7Id)) AND ((@IsNull_CustomGroup8Id = 1 AND [CustomGroup8Id] IS NU"& _ 
                "LL) OR ([CustomGroup8Id] = @Original_CustomGroup8Id)) AND ((@IsNull_CustomDateFi"& _ 
                "eld1 = 1 AND [CustomDateField1] IS NULL) OR ([CustomDateField1] = @Original_Cust"& _ 
                "omDateField1)) AND ((@IsNull_CustomDateField2 = 1 AND [CustomDateField2] IS NULL"& _ 
                ") OR ([CustomDateField2] = @Original_CustomDateField2)) AND ((@IsNull_CustomDate"& _ 
                "Field3 = 1 AND [CustomDateField3] IS NULL) OR ([CustomDateField3] = @Original_Cu"& _ 
                "stomDateField3)) AND ((@IsNull_CustomDateField4 = 1 AND [CustomDateField4] IS NU"& _ 
                "LL) OR ([CustomDateField4] = @Original_CustomDateField4)) AND ((@IsNull_CustomDa"& _ 
                "teField5 = 1 AND [CustomDateField5] IS NULL) OR ([CustomDateField5] = @Original_"& _ 
                "CustomDateField5)) AND ((@IsNull_CustomField4 = 1 AND [CustomField4] IS NULL) OR"& _ 
                " ([CustomField4] = @Original_CustomField4)) AND ((@IsNull_CustomField5 = 1 AND ["& _ 
                "CustomField5] IS NULL) OR ([CustomField5] = @Original_CustomField5)) AND ((@IsNu"& _ 
                "ll_CustomField6 = 1 AND [CustomField6] IS NULL) OR ([CustomField6] = @Original_C"& _ 
                "ustomField6)) AND ((@IsNull_CustomField7 = 1 AND [CustomField7] IS NULL) OR ([Cu"& _ 
                "stomField7] = @Original_CustomField7)) AND ((@IsNull_CustomField8 = 1 AND [Custo"& _ 
                "mField8] IS NULL) OR ([CustomField8] = @Original_CustomField8)) AND ((@IsNull_Se"& _ 
                "parationPayTypeId = 1 AND [SeparationPayTypeId] IS NULL) OR ([SeparationPayTypeI"& _ 
                "d] = @Original_SeparationPayTypeId)) AND ((@IsNull_ShiftScheduleTemplateGroupId "& _ 
                "= 1 AND [ShiftScheduleTemplateGroupId] IS NULL) OR ([ShiftScheduleTemplateGroupI"& _ 
                "d] = @Original_ShiftScheduleTemplateGroupId)) AND ((@IsNull_DateFiledofResignati"& _ 
                "on = 1 AND [DateFiledofResignation] IS NULL) OR ([DateFiledofResignation] = @Ori"& _ 
                "ginal_DateFiledofResignation)) AND ((@IsNull_ReasonForLeaving = 1 AND [ReasonFor"& _ 
                "Leaving] IS NULL) OR ([ReasonForLeaving] = @Original_ReasonForLeaving)) AND ([Is"& _ 
                "Rehirable] = @Original_IsRehirable) AND ((@IsNull_ClearanceStatusId = 1 AND [Cle"& _ 
                "aranceStatusId] IS NULL) OR ([ClearanceStatusId] = @Original_ClearanceStatusId))"& _ 
                " AND ((@IsNull_ClearanceIssuedById = 1 AND [ClearanceIssuedById] IS NULL) OR ([C"& _ 
                "learanceIssuedById] = @Original_ClearanceIssuedById)) AND ((@IsNull_WaiverAndQui"& _ 
                "tclaimFinalPay = 1 AND [WaiverAndQuitclaimFinalPay] IS NULL) OR ([WaiverAndQuitc"& _ 
                "laimFinalPay] = @Original_WaiverAndQuitclaimFinalPay)) AND ([IsReleasedWaiverAnd"& _ 
                "Quitclaim] = @Original_IsReleasedWaiverAndQuitclaim) AND ((@IsNull_WaiverAndQuit"& _ 
                "claimDateReleased = 1 AND [WaiverAndQuitclaimDateReleased] IS NULL) OR ([WaiverA"& _ 
                "ndQuitclaimDateReleased] = @Original_WaiverAndQuitclaimDateReleased)) AND ((@IsN"& _ 
                "ull_WaiverAndQuitclaimReleasedById = 1 AND [WaiverAndQuitclaimReleasedById] IS N"& _ 
                "ULL) OR ([WaiverAndQuitclaimReleasedById] = @Original_WaiverAndQuitclaimReleased"& _ 
                "ById)) AND ((@IsNull_CardNum = 1 AND [CardNum] IS NULL) OR ([CardNum] = @Origina"& _ 
                "l_CardNum)) AND ((@IsNull_ReasonForLeavingType = 1 AND [ReasonForLeavingType] IS"& _ 
                " NULL) OR ([ReasonForLeavingType] = @Original_ReasonForLeavingType)) AND ((@IsNu"& _ 
                "ll_HDMFID = 1 AND [HDMFID] IS NULL) OR ([HDMFID] = @Original_HDMFID)) AND ((@IsN"& _ 
                "ull_Lineage = 1 AND [Lineage] IS NULL) OR ([Lineage] = @Original_Lineage)) AND ("& _ 
                "(@IsNull_LineageDepth = 1 AND [LineageDepth] IS NULL) OR ([LineageDepth] = @Orig"& _ 
                "inal_LineageDepth)) AND ((@IsNull_CompanyBranchId = 1 AND [CompanyBranchId] IS N"& _ 
                "ULL) OR ([CompanyBranchId] = @Original_CompanyBranchId)) AND ([AllocationPayoutN"& _ 
                "o] = @Original_AllocationPayoutNo) AND ([AllocationTypeId] = @Original_Allocatio"& _ 
                "nTypeId) AND ([AllocationValue] = @Original_AllocationValue) AND ((@IsNull_Payro"& _ 
                "llAccountBranchCode = 1 AND [PayrollAccountBranchCode] IS NULL) OR ([PayrollAcco"& _ 
                "untBranchCode] = @Original_PayrollAccountBranchCode)) AND ((@IsNull_AddressRegis"& _ 
                "tered = 1 AND [AddressRegistered] IS NULL) OR ([AddressRegistered] = @Original_A"& _ 
                "ddressRegistered)) AND ((@IsNull_AddressLocal = 1 AND [AddressLocal] IS NULL) OR"& _ 
                " ([AddressLocal] = @Original_AddressLocal)) AND ((@IsNull_CTCNo = 1 AND [CTCNo] "& _ 
                "IS NULL) OR ([CTCNo] = @Original_CTCNo)) AND ((@IsNull_CustomDateField6 = 1 AND "& _ 
                "[CustomDateField6] IS NULL) OR ([CustomDateField6] = @Original_CustomDateField6)"& _ 
                ") AND ((@IsNull_CustomDateField7 = 1 AND [CustomDateField7] IS NULL) OR ([Custom"& _ 
                "DateField7] = @Original_CustomDateField7)) AND ((@IsNull_CustomDateField8 = 1 AN"& _ 
                "D [CustomDateField8] IS NULL) OR ([CustomDateField8] = @Original_CustomDateField"& _ 
                "8)) AND ([CustomCheckbox1] = @Original_CustomCheckbox1) AND ([CustomCheckbox2] ="& _ 
                " @Original_CustomCheckbox2) AND ([CustomCheckbox3] = @Original_CustomCheckbox3) "& _ 
                "AND ([CustomCheckbox4] = @Original_CustomCheckbox4) AND ([CustomCheckbox5] = @Or"& _ 
                "iginal_CustomCheckbox5) AND ([CustomCheckbox6] = @Original_CustomCheckbox6) AND "& _ 
                "([CustomCheckbox7] = @Original_CustomCheckbox7) AND ([CustomCheckbox8] = @Origin"& _ 
                "al_CustomCheckbox8) AND ((@IsNull_BackPayCoverageFromDate = 1 AND [BackPayCovera"& _ 
                "geFromDate] IS NULL) OR ([BackPayCoverageFromDate] = @Original_BackPayCoverageFr"& _ 
                "omDate)) AND ((@IsNull_BackPayCoverageToDate = 1 AND [BackPayCoverageToDate] IS "& _ 
                "NULL) OR ([BackPayCoverageToDate] = @Original_BackPayCoverageToDate)) AND ((@IsN"& _ 
                "ull_PlainSSSNo = 1 AND [PlainSSSNo] IS NULL) OR ([PlainSSSNo] = @Original_PlainS"& _ 
                "SSNo)) AND ((@IsNull_MinTakeHomePayBasisId = 1 AND [MinTakeHomePayBasisId] IS NU"& _ 
                "LL) OR ([MinTakeHomePayBasisId] = @Original_MinTakeHomePayBasisId)) AND ((@IsNul"& _ 
                "l_SuffixId = 1 AND [SuffixId] IS NULL) OR ([SuffixId] = @Original_SuffixId)) AND"& _ 
                " ((@IsNull_ConcurrentEmployerName = 1 AND [ConcurrentEmployerName] IS NULL) OR ("& _ 
                "[ConcurrentEmployerName] = @Original_ConcurrentEmployerName)) AND ((@IsNull_Conc"& _ 
                "urrentEmployerTIN = 1 AND [ConcurrentEmployerTIN] IS NULL) OR ([ConcurrentEmploy"& _ 
                "erTIN] = @Original_ConcurrentEmployerTIN)) AND ((@IsNull_ConcurrentEmployerTINBr"& _ 
                "anch = 1 AND [ConcurrentEmployerTINBranch] IS NULL) OR ([ConcurrentEmployerTINBr"& _ 
                "anch] = @Original_ConcurrentEmployerTINBranch)) AND ((@IsNull_DateEffectivityBas"& _ 
                "is = 1 AND [DateEffectivityBasis] IS NULL) OR ([DateEffectivityBasis] = @Origina"& _ 
                "l_DateEffectivityBasis)) AND ([FormalName] = @Original_FormalName) AND ([Name] ="& _ 
                " @Original_Name) AND ([FullName] = @Original_FullName) AND ((@IsNull_ReasonForSe"& _ 
                "parationId = 1 AND [ReasonForSeparationId] IS NULL) OR ([ReasonForSeparationId] "& _ 
                "= @Original_ReasonForSeparationId)) AND ((@IsNull_NationalityId = 1 AND [Nationa"& _ 
                "lityId] IS NULL) OR ([NationalityId] = @Original_NationalityId)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeeCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeeCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccessCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccessCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressForeign", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressForeign", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TelNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TelNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TINNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TINNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SSSNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PagIbigNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PagIbigNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PhilHealthNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PhilHealthNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsWife", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsWife", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RDOCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RDOCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BirthDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BirthDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateHired", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateHired", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateSeparated", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateRegular", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateRegular", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousMonthlyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousMonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousDailyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousDailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousHourlyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousHourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Allowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousDailyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousDailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousHourlyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousHourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixTaxRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixTaxRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WithPreviousER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WithPreviousER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeSourceId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeSourceId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmailAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsSSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSSS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsTax", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsPHIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPHIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsHDMF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHDMF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsUnion", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsUnion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsEmailPayslip", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsEmailPayslip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayslipPassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayslipPassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateEffective", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateEffective", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_System", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "System", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MobileNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MobileNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DevicePassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DevicePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContractStartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContractStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContractEndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContractEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DaysInYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DaysInYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WTaxExempt", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WTaxExempt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxTaxableEarning", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxTaxableEarning", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TINBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinNetPayForLoan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinNetPayForLoan", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EWTRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EWTRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcessed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsCleared", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsCleared", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateCleared", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateCleared", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeePassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsClosed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClosed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MotherMaidenName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MotherMaidenName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsMainEmployer", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsMainEmployer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nickname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nickname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeePasswordDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeePasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsSubstitutedFiling", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSubstitutedFiling", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayslipPasswordDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayslipPasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsHusband", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHusband", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YearSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearSeparated", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YearSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearSeparated", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RemarksEmploymentInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RemarksEmploymentInformation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField3", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField4", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField5", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField6", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField7", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField8", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateFiledofResignation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateFiledofResignation", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForLeaving", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForLeaving", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsRehirable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRehirable", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsReleasedWaiverAndQuitclaim", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsReleasedWaiverAndQuitclaim", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CardNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CardNum", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForLeavingType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForLeavingType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDMFID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDMFID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Lineage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lineage", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationPayoutNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationPayoutNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationValue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayrollAccountBranchCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayrollAccountBranchCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressRegistered", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressRegistered", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressRegistered", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressRegistered", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressLocal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressLocal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressLocal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressLocal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField6", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField7", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField8", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox7", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BackPayCoverageFromDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BackPayCoverageFromDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BackPayCoverageToDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BackPayCoverageToDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PlainSSSNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlainSSSNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PlainSSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlainSSSNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerTIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormalName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormalName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblEmployees] ([CompanyId], [EmployeeCode], [AccessCode], [Fir"& _ 
                "stName], [MiddleName], [LastName], [AddressForeign], [ZIPCodeAR], [ZIPCodeAL], ["& _ 
                "ZIPCodeAF], [TelNo], [TINNo], [BankAccountId], [BankAccountNo], [BankAccountType"& _ 
                "Id], [SSSNo], [PagIbigNo], [PhilHealthNo], [IsWife], [RDOCode], [BirthDate], [Da"& _ 
                "teHired], [DateSeparated], [DateRegular], [YearWithPreviousER], [ShiftScheduleId"& _ 
                "], [EmploymentTypeId], [PaymentTypeId], [PayrollFrequencyId], [TaxCodeId], [Prev"& _ 
                "iousRate], [Rate], [MonthlyRate], [PreviousMonthlyRate], [DailyRate], [PreviousD"& _ 
                "ailyRate], [HourlyRate], [PreviousHourlyRate], [PreviousAllowance], [Allowance],"& _ 
                " [MonthlyAllowance], [PreviousMonthlyAllowance], [DailyAllowance], [PreviousDail"& _ 
                "yAllowance], [HourlyAllowance], [PreviousHourlyAllowance], [COLA], [MonthlyCOLA]"& _ 
                ", [DailyCOLA], [HourlyCOLA], [FixTaxRate], [Active], [WithPreviousER], [Paramete"& _ 
                "rId], [PositionId], [MaritalStatusId], [GenderId], [TimeSourceId], [Picture], [C"& _ 
                "ostCenterId], [DepartmentId], [CustomGroup1Id], [CustomGroup2Id], [CustomGroup3I"& _ 
                "d], [CustomField1], [CustomField2], [CustomField3], [PayElementScheduleId], [Ema"& _ 
                "ilAddress], [IsSSS], [IsTax], [IsPHIC], [IsHDMF], [IsUnion], [IsEmailPayslip], ["& _ 
                "PayslipPassword], [DateEffective], [System], [LocationId], [VersionNo], [PayGrou"& _ 
                "pId], [MobileNo], [DevicePassword], [LeaveAccrualScheduleId], [ContractStartDate"& _ 
                "], [ContractEndDate], [DaysInYear], [SupervisorId], [WTaxExempt], [MaxTaxableEar"& _ 
                "ning], [TINBranch], [ClassId], [MinNetPayForLoan], [MinNetPayForLoanTypeId], [Ap"& _ 
                "provingId1], [ApprovingId2], [EWTRate], [SecurityUserLevelId], [SecurityUserGrou"& _ 
                "pId], [IsProcessed], [IsCleared], [DateCleared], [EmployeePassword], [IsClosed],"& _ 
                " [WebkioskRoleId], [TeamId], [RegionId], [Remarks], [MotherMaidenName], [Alphanu"& _ 
                "mericTaxCodeId], [ResidenceStatusCodeId], [WebkioskLoginFailedAttempt], [IsMainE"& _ 
                "mployer], [Nickname], [EmployeePasswordDate], [IsSubstitutedFiling], [PayslipPas"& _ 
                "swordDate], [SalutationId], [IsHusband], [RemarksEmploymentInformation], [LeaveF"& _ 
                "orfeitScheduleId], [PayoutTypeId], [CitizenshipId], [CustomGroup4Id], [CustomGro"& _ 
                "up5Id], [CustomGroup6Id], [CustomGroup7Id], [CustomGroup8Id], [CustomDateField1]"& _ 
                ", [CustomDateField2], [CustomDateField3], [CustomDateField4], [CustomDateField5]"& _ 
                ", [CustomField4], [CustomField5], [CustomField6], [CustomField7], [CustomField8]"& _ 
                ", [SeparationPayTypeId], [ShiftScheduleTemplateGroupId], [DateFiledofResignation"& _ 
                "], [ReasonForLeaving], [IsRehirable], [ClearanceStatusId], [ClearanceIssuedById]"& _ 
                ", [WaiverAndQuitclaimFinalPay], [IsReleasedWaiverAndQuitclaim], [WaiverAndQuitcl"& _ 
                "aimDateReleased], [WaiverAndQuitclaimReleasedById], [CardNum], [ReasonForLeaving"& _ 
                "Type], [HDMFID], [Lineage], [LineageDepth], [CompanyBranchId], [AllocationPayout"& _ 
                "No], [AllocationTypeId], [AllocationValue], [PayrollAccountBranchCode], [CTCNo],"& _ 
                " [CustomDateField6], [CustomDateField7], [CustomDateField8], [CustomCheckbox1], "& _ 
                "[CustomCheckbox2], [CustomCheckbox3], [CustomCheckbox4], [CustomCheckbox5], [Cus"& _ 
                "tomCheckbox6], [CustomCheckbox7], [CustomCheckbox8], [BackPayCoverageFromDate], "& _ 
                "[BackPayCoverageToDate], [MinTakeHomePayBasisId], [SuffixId], [ConcurrentEmploye"& _ 
                "rName], [ConcurrentEmployerTIN], [ConcurrentEmployerTINBranch], [DateEffectivity"& _ 
                "Basis], [ReasonForSeparationId], [NationalityId]) VALUES (@CompanyId, @EmployeeC"& _ 
                "ode, @AccessCode, @FirstName, @MiddleName, @LastName, @AddressForeign, @ZIPCodeA"& _ 
                "R, @ZIPCodeAL, @ZIPCodeAF, @TelNo, @TINNo, @BankAccountId, @BankAccountNo, @Bank"& _ 
                "AccountTypeId, @SSSNo, @PagIbigNo, @PhilHealthNo, @IsWife, @RDOCode, @BirthDate,"& _ 
                " @DateHired, @DateSeparated, @DateRegular, @YearWithPreviousER, @ShiftScheduleId"& _ 
                ", @EmploymentTypeId, @PaymentTypeId, @PayrollFrequencyId, @TaxCodeId, @PreviousR"& _ 
                "ate, @Rate, @MonthlyRate, @PreviousMonthlyRate, @DailyRate, @PreviousDailyRate, "& _ 
                "@HourlyRate, @PreviousHourlyRate, @PreviousAllowance, @Allowance, @MonthlyAllowa"& _ 
                "nce, @PreviousMonthlyAllowance, @DailyAllowance, @PreviousDailyAllowance, @Hourl"& _ 
                "yAllowance, @PreviousHourlyAllowance, @COLA, @MonthlyCOLA, @DailyCOLA, @HourlyCO"& _ 
                "LA, @FixTaxRate, @Active, @WithPreviousER, @ParameterId, @PositionId, @MaritalSt"& _ 
                "atusId, @GenderId, @TimeSourceId, @Picture, @CostCenterId, @DepartmentId, @Custo"& _ 
                "mGroup1Id, @CustomGroup2Id, @CustomGroup3Id, @CustomField1, @CustomField2, @Cust"& _ 
                "omField3, @PayElementScheduleId, @EmailAddress, @IsSSS, @IsTax, @IsPHIC, @IsHDMF"& _ 
                ", @IsUnion, @IsEmailPayslip, @PayslipPassword, @DateEffective, @System, @Locatio"& _ 
                "nId, @VersionNo, @PayGroupId, @MobileNo, @DevicePassword, @LeaveAccrualScheduleI"& _ 
                "d, @ContractStartDate, @ContractEndDate, @DaysInYear, @SupervisorId, @WTaxExempt"& _ 
                ", @MaxTaxableEarning, @TINBranch, @ClassId, @MinNetPayForLoan, @MinNetPayForLoan"& _ 
                "TypeId, @ApprovingId1, @ApprovingId2, @EWTRate, @SecurityUserLevelId, @SecurityU"& _ 
                "serGroupId, @IsProcessed, @IsCleared, @DateCleared, @EmployeePassword, @IsClosed"& _ 
                ", @WebkioskRoleId, @TeamId, @RegionId, @Remarks, @MotherMaidenName, @Alphanumeri"& _ 
                "cTaxCodeId, @ResidenceStatusCodeId, @WebkioskLoginFailedAttempt, @IsMainEmployer"& _ 
                ", @Nickname, @EmployeePasswordDate, @IsSubstitutedFiling, @PayslipPasswordDate, "& _ 
                "@SalutationId, @IsHusband, @RemarksEmploymentInformation, @LeaveForfeitScheduleI"& _ 
                "d, @PayoutTypeId, @CitizenshipId, @CustomGroup4Id, @CustomGroup5Id, @CustomGroup"& _ 
                "6Id, @CustomGroup7Id, @CustomGroup8Id, @CustomDateField1, @CustomDateField2, @Cu"& _ 
                "stomDateField3, @CustomDateField4, @CustomDateField5, @CustomField4, @CustomFiel"& _ 
                "d5, @CustomField6, @CustomField7, @CustomField8, @SeparationPayTypeId, @ShiftSch"& _ 
                "eduleTemplateGroupId, @DateFiledofResignation, @ReasonForLeaving, @IsRehirable, "& _ 
                "@ClearanceStatusId, @ClearanceIssuedById, @WaiverAndQuitclaimFinalPay, @IsReleas"& _ 
                "edWaiverAndQuitclaim, @WaiverAndQuitclaimDateReleased, @WaiverAndQuitclaimReleas"& _ 
                "edById, @CardNum, @ReasonForLeavingType, @HDMFID, @Lineage, @LineageDepth, @Comp"& _ 
                "anyBranchId, @AllocationPayoutNo, @AllocationTypeId, @AllocationValue, @PayrollA"& _ 
                "ccountBranchCode, @CTCNo, @CustomDateField6, @CustomDateField7, @CustomDateField"& _ 
                "8, @CustomCheckbox1, @CustomCheckbox2, @CustomCheckbox3, @CustomCheckbox4, @Cust"& _ 
                "omCheckbox5, @CustomCheckbox6, @CustomCheckbox7, @CustomCheckbox8, @BackPayCover"& _ 
                "ageFromDate, @BackPayCoverageToDate, @MinTakeHomePayBasisId, @SuffixId, @Concurr"& _ 
                "entEmployerName, @ConcurrentEmployerTIN, @ConcurrentEmployerTINBranch, @DateEffe"& _ 
                "ctivityBasis, @ReasonForSeparationId, @NationalityId);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, CompanyId, Em"& _ 
                "ployeeCode, AccessCode, FirstName, MiddleName, LastName, AddressForeign, ZIPCode"& _ 
                "AR, ZIPCodeAL, ZIPCodeAF, TelNo, TINNo, BankAccountId, BankAccountNo, BankAccoun"& _ 
                "tTypeId, SSSNo, PagIbigNo, PhilHealthNo, IsWife, RDOCode, BirthDate, DateHired, "& _ 
                "DateSeparated, DateRegular, YearWithPreviousER, ShiftScheduleId, EmploymentTypeI"& _ 
                "d, PaymentTypeId, PayrollFrequencyId, TaxCodeId, PreviousRate, Rate, MonthlyRate"& _ 
                ", PreviousMonthlyRate, DailyRate, PreviousDailyRate, HourlyRate, PreviousHourlyR"& _ 
                "ate, PreviousAllowance, Allowance, MonthlyAllowance, PreviousMonthlyAllowance, D"& _ 
                "ailyAllowance, PreviousDailyAllowance, HourlyAllowance, PreviousHourlyAllowance,"& _ 
                " COLA, MonthlyCOLA, DailyCOLA, HourlyCOLA, FixTaxRate, Active, WithPreviousER, P"& _ 
                "arameterId, PositionId, MaritalStatusId, GenderId, TimeSourceId, Picture, CostCe"& _ 
                "nterId, DepartmentId, CustomGroup1Id, CustomGroup2Id, CustomGroup3Id, CustomFiel"& _ 
                "d1, CustomField2, CustomField3, PayElementScheduleId, EmailAddress, IsSSS, IsTax"& _ 
                ", IsPHIC, IsHDMF, IsUnion, IsEmailPayslip, PayslipPassword, DateEffective, Syste"& _ 
                "m, LocationId, VersionNo, PayGroupId, MobileNo, DevicePassword, LeaveAccrualSche"& _ 
                "duleId, ContractStartDate, ContractEndDate, DaysInYear, SupervisorId, WTaxExempt"& _ 
                ", MaxTaxableEarning, TINBranch, ClassId, MinNetPayForLoan, MinNetPayForLoanTypeI"& _ 
                "d, ApprovingId1, ApprovingId2, EWTRate, SecurityUserLevelId, SecurityUserGroupId"& _ 
                ", IsProcessed, IsCleared, DateCleared, EmployeePassword, IsClosed, WebkioskRoleI"& _ 
                "d, TeamId, RegionId, Remarks, MotherMaidenName, AlphanumericTaxCodeId, Residence"& _ 
                "StatusCodeId, WebkioskLoginFailedAttempt, IsMainEmployer, Nickname, EmployeePass"& _ 
                "wordDate, IsSubstitutedFiling, PayslipPasswordDate, SalutationId, IsHusband, Yea"& _ 
                "rSeparated, RemarksEmploymentInformation, LeaveForfeitScheduleId, PayoutTypeId, "& _ 
                "CitizenshipId, CustomGroup4Id, CustomGroup5Id, CustomGroup6Id, CustomGroup7Id, C"& _ 
                "ustomGroup8Id, CustomDateField1, CustomDateField2, CustomDateField3, CustomDateF"& _ 
                "ield4, CustomDateField5, CustomField4, CustomField5, CustomField6, CustomField7,"& _ 
                " CustomField8, SeparationPayTypeId, ShiftScheduleTemplateGroupId, DateFiledofRes"& _ 
                "ignation, ReasonForLeaving, IsRehirable, ClearanceStatusId, ClearanceIssuedById,"& _ 
                " WaiverAndQuitclaimFinalPay, IsReleasedWaiverAndQuitclaim, WaiverAndQuitclaimDat"& _ 
                "eReleased, WaiverAndQuitclaimReleasedById, CardNum, ReasonForLeavingType, HDMFID"& _ 
                ", Lineage, LineageDepth, CompanyBranchId, AllocationPayoutNo, AllocationTypeId, "& _ 
                "AllocationValue, PayrollAccountBranchCode, AddressRegistered, AddressLocal, CTCN"& _ 
                "o, CustomDateField6, CustomDateField7, CustomDateField8, CustomCheckbox1, Custom"& _ 
                "Checkbox2, CustomCheckbox3, CustomCheckbox4, CustomCheckbox5, CustomCheckbox6, C"& _ 
                "ustomCheckbox7, CustomCheckbox8, BackPayCoverageFromDate, BackPayCoverageToDate,"& _ 
                " PlainSSSNo, MinTakeHomePayBasisId, SuffixId, ConcurrentEmployerName, Concurrent"& _ 
                "EmployerTIN, ConcurrentEmployerTINBranch, DateEffectivityBasis, FormalName, Name"& _ 
                ", FullName, ReasonForSeparationId, NationalityId FROM tblEmployees WHERE (Compan"& _ 
                "yId = @CompanyId) AND (Id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccessCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddressForeign", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TelNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TINNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PagIbigNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PhilHealthNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsWife", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsWife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RDOCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BirthDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateHired", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateSeparated", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateRegular", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousMonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousDailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousHourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Allowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousDailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousHourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixTaxRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WithPreviousER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WithPreviousER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeSourceId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeSourceId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Picture", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsSSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsTax", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsPHIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPHIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsHDMF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHDMF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsUnion", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsUnion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsEmailPayslip", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsEmailPayslip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayslipPassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEffective", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@System", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "System", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MobileNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DevicePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContractStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContractEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysInYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WTaxExempt", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WTaxExempt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxTaxableEarning", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinNetPayForLoan", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EWTRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcessed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsCleared", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsCleared", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateCleared", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsClosed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClosed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotherMaidenName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsMainEmployer", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsMainEmployer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nickname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeePasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsSubstitutedFiling", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSubstitutedFiling", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayslipPasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsHusband", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHusband", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemarksEmploymentInformation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField3", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField4", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField5", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField6", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField7", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField8", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFiledofResignation", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForLeaving", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRehirable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRehirable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsReleasedWaiverAndQuitclaim", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsReleasedWaiverAndQuitclaim", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CardNum", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForLeavingType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDMFID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lineage", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationPayoutNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationPayoutNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationValue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayrollAccountBranchCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField6", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField7", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField8", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox7", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackPayCoverageFromDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackPayCoverageToDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerTIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblEmployees] SET [CompanyId] = @CompanyId, [EmployeeCode] = @Emplo"& _ 
                "yeeCode, [AccessCode] = @AccessCode, [FirstName] = @FirstName, [MiddleName] = @M"& _ 
                "iddleName, [LastName] = @LastName, [AddressForeign] = @AddressForeign, [ZIPCodeA"& _ 
                "R] = @ZIPCodeAR, [ZIPCodeAL] = @ZIPCodeAL, [ZIPCodeAF] = @ZIPCodeAF, [TelNo] = @"& _ 
                "TelNo, [TINNo] = @TINNo, [BankAccountId] = @BankAccountId, [BankAccountNo] = @Ba"& _ 
                "nkAccountNo, [BankAccountTypeId] = @BankAccountTypeId, [SSSNo] = @SSSNo, [PagIbi"& _ 
                "gNo] = @PagIbigNo, [PhilHealthNo] = @PhilHealthNo, [IsWife] = @IsWife, [RDOCode]"& _ 
                " = @RDOCode, [BirthDate] = @BirthDate, [DateHired] = @DateHired, [DateSeparated]"& _ 
                " = @DateSeparated, [DateRegular] = @DateRegular, [YearWithPreviousER] = @YearWit"& _ 
                "hPreviousER, [ShiftScheduleId] = @ShiftScheduleId, [EmploymentTypeId] = @Employm"& _ 
                "entTypeId, [PaymentTypeId] = @PaymentTypeId, [PayrollFrequencyId] = @PayrollFreq"& _ 
                "uencyId, [TaxCodeId] = @TaxCodeId, [PreviousRate] = @PreviousRate, [Rate] = @Rat"& _ 
                "e, [MonthlyRate] = @MonthlyRate, [PreviousMonthlyRate] = @PreviousMonthlyRate, ["& _ 
                "DailyRate] = @DailyRate, [PreviousDailyRate] = @PreviousDailyRate, [HourlyRate] "& _ 
                "= @HourlyRate, [PreviousHourlyRate] = @PreviousHourlyRate, [PreviousAllowance] ="& _ 
                " @PreviousAllowance, [Allowance] = @Allowance, [MonthlyAllowance] = @MonthlyAllo"& _ 
                "wance, [PreviousMonthlyAllowance] = @PreviousMonthlyAllowance, [DailyAllowance] "& _ 
                "= @DailyAllowance, [PreviousDailyAllowance] = @PreviousDailyAllowance, [HourlyAl"& _ 
                "lowance] = @HourlyAllowance, [PreviousHourlyAllowance] = @PreviousHourlyAllowanc"& _ 
                "e, [COLA] = @COLA, [MonthlyCOLA] = @MonthlyCOLA, [DailyCOLA] = @DailyCOLA, [Hour"& _ 
                "lyCOLA] = @HourlyCOLA, [FixTaxRate] = @FixTaxRate, [Active] = @Active, [WithPrev"& _ 
                "iousER] = @WithPreviousER, [ParameterId] = @ParameterId, [PositionId] = @Positio"& _ 
                "nId, [MaritalStatusId] = @MaritalStatusId, [GenderId] = @GenderId, [TimeSourceId"& _ 
                "] = @TimeSourceId, [Picture] = @Picture, [CostCenterId] = @CostCenterId, [Depart"& _ 
                "mentId] = @DepartmentId, [CustomGroup1Id] = @CustomGroup1Id, [CustomGroup2Id] = "& _ 
                "@CustomGroup2Id, [CustomGroup3Id] = @CustomGroup3Id, [CustomField1] = @CustomFie"& _ 
                "ld1, [CustomField2] = @CustomField2, [CustomField3] = @CustomField3, [PayElement"& _ 
                "ScheduleId] = @PayElementScheduleId, [EmailAddress] = @EmailAddress, [IsSSS] = @"& _ 
                "IsSSS, [IsTax] = @IsTax, [IsPHIC] = @IsPHIC, [IsHDMF] = @IsHDMF, [IsUnion] = @Is"& _ 
                "Union, [IsEmailPayslip] = @IsEmailPayslip, [PayslipPassword] = @PayslipPassword,"& _ 
                " [DateEffective] = @DateEffective, [System] = @System, [LocationId] = @LocationI"& _ 
                "d, [VersionNo] = @VersionNo, [PayGroupId] = @PayGroupId, [MobileNo] = @MobileNo,"& _ 
                " [DevicePassword] = @DevicePassword, [LeaveAccrualScheduleId] = @LeaveAccrualSch"& _ 
                "eduleId, [ContractStartDate] = @ContractStartDate, [ContractEndDate] = @Contract"& _ 
                "EndDate, [DaysInYear] = @DaysInYear, [SupervisorId] = @SupervisorId, [WTaxExempt"& _ 
                "] = @WTaxExempt, [MaxTaxableEarning] = @MaxTaxableEarning, [TINBranch] = @TINBra"& _ 
                "nch, [ClassId] = @ClassId, [MinNetPayForLoan] = @MinNetPayForLoan, [MinNetPayFor"& _ 
                "LoanTypeId] = @MinNetPayForLoanTypeId, [ApprovingId1] = @ApprovingId1, [Approvin"& _ 
                "gId2] = @ApprovingId2, [EWTRate] = @EWTRate, [SecurityUserLevelId] = @SecurityUs"& _ 
                "erLevelId, [SecurityUserGroupId] = @SecurityUserGroupId, [IsProcessed] = @IsProc"& _ 
                "essed, [IsCleared] = @IsCleared, [DateCleared] = @DateCleared, [EmployeePassword"& _ 
                "] = @EmployeePassword, [IsClosed] = @IsClosed, [WebkioskRoleId] = @WebkioskRoleI"& _ 
                "d, [TeamId] = @TeamId, [RegionId] = @RegionId, [Remarks] = @Remarks, [MotherMaid"& _ 
                "enName] = @MotherMaidenName, [AlphanumericTaxCodeId] = @AlphanumericTaxCodeId, ["& _ 
                "ResidenceStatusCodeId] = @ResidenceStatusCodeId, [WebkioskLoginFailedAttempt] = "& _ 
                "@WebkioskLoginFailedAttempt, [IsMainEmployer] = @IsMainEmployer, [Nickname] = @N"& _ 
                "ickname, [EmployeePasswordDate] = @EmployeePasswordDate, [IsSubstitutedFiling] ="& _ 
                " @IsSubstitutedFiling, [PayslipPasswordDate] = @PayslipPasswordDate, [Salutation"& _ 
                "Id] = @SalutationId, [IsHusband] = @IsHusband, [RemarksEmploymentInformation] = "& _ 
                "@RemarksEmploymentInformation, [LeaveForfeitScheduleId] = @LeaveForfeitScheduleI"& _ 
                "d, [PayoutTypeId] = @PayoutTypeId, [CitizenshipId] = @CitizenshipId, [CustomGrou"& _ 
                "p4Id] = @CustomGroup4Id, [CustomGroup5Id] = @CustomGroup5Id, [CustomGroup6Id] = "& _ 
                "@CustomGroup6Id, [CustomGroup7Id] = @CustomGroup7Id, [CustomGroup8Id] = @CustomG"& _ 
                "roup8Id, [CustomDateField1] = @CustomDateField1, [CustomDateField2] = @CustomDat"& _ 
                "eField2, [CustomDateField3] = @CustomDateField3, [CustomDateField4] = @CustomDat"& _ 
                "eField4, [CustomDateField5] = @CustomDateField5, [CustomField4] = @CustomField4,"& _ 
                " [CustomField5] = @CustomField5, [CustomField6] = @CustomField6, [CustomField7] "& _ 
                "= @CustomField7, [CustomField8] = @CustomField8, [SeparationPayTypeId] = @Separa"& _ 
                "tionPayTypeId, [ShiftScheduleTemplateGroupId] = @ShiftScheduleTemplateGroupId, ["& _ 
                "DateFiledofResignation] = @DateFiledofResignation, [ReasonForLeaving] = @ReasonF"& _ 
                "orLeaving, [IsRehirable] = @IsRehirable, [ClearanceStatusId] = @ClearanceStatusI"& _ 
                "d, [ClearanceIssuedById] = @ClearanceIssuedById, [WaiverAndQuitclaimFinalPay] = "& _ 
                "@WaiverAndQuitclaimFinalPay, [IsReleasedWaiverAndQuitclaim] = @IsReleasedWaiverA"& _ 
                "ndQuitclaim, [WaiverAndQuitclaimDateReleased] = @WaiverAndQuitclaimDateReleased,"& _ 
                " [WaiverAndQuitclaimReleasedById] = @WaiverAndQuitclaimReleasedById, [CardNum] ="& _ 
                " @CardNum, [ReasonForLeavingType] = @ReasonForLeavingType, [HDMFID] = @HDMFID, ["& _ 
                "Lineage] = @Lineage, [LineageDepth] = @LineageDepth, [CompanyBranchId] = @Compan"& _ 
                "yBranchId, [AllocationPayoutNo] = @AllocationPayoutNo, [AllocationTypeId] = @All"& _ 
                "ocationTypeId, [AllocationValue] = @AllocationValue, [PayrollAccountBranchCode] "& _ 
                "= @PayrollAccountBranchCode, [CTCNo] = @CTCNo, [CustomDateField6] = @CustomDateF"& _ 
                "ield6, [CustomDateField7] = @CustomDateField7, [CustomDateField8] = @CustomDateF"& _ 
                "ield8, [CustomCheckbox1] = @CustomCheckbox1, [CustomCheckbox2] = @CustomCheckbox"& _ 
                "2, [CustomCheckbox3] = @CustomCheckbox3, [CustomCheckbox4] = @CustomCheckbox4, ["& _ 
                "CustomCheckbox5] = @CustomCheckbox5, [CustomCheckbox6] = @CustomCheckbox6, [Cust"& _ 
                "omCheckbox7] = @CustomCheckbox7, [CustomCheckbox8] = @CustomCheckbox8, [BackPayC"& _ 
                "overageFromDate] = @BackPayCoverageFromDate, [BackPayCoverageToDate] = @BackPayC"& _ 
                "overageToDate, [MinTakeHomePayBasisId] = @MinTakeHomePayBasisId, [SuffixId] = @S"& _ 
                "uffixId, [ConcurrentEmployerName] = @ConcurrentEmployerName, [ConcurrentEmployer"& _ 
                "TIN] = @ConcurrentEmployerTIN, [ConcurrentEmployerTINBranch] = @ConcurrentEmploy"& _ 
                "erTINBranch, [DateEffectivityBasis] = @DateEffectivityBasis, [ReasonForSeparatio"& _ 
                "nId] = @ReasonForSeparationId, [NationalityId] = @NationalityId WHERE (([Id] = @"& _ 
                "Original_Id) AND ([CompanyId] = @Original_CompanyId) AND ((@IsNull_EmployeeCode "& _ 
                "= 1 AND [EmployeeCode] IS NULL) OR ([EmployeeCode] = @Original_EmployeeCode)) AN"& _ 
                "D ((@IsNull_AccessCode = 1 AND [AccessCode] IS NULL) OR ([AccessCode] = @Origina"& _ 
                "l_AccessCode)) AND ((@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstNa"& _ 
                "me] = @Original_FirstName)) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NUL"& _ 
                "L) OR ([MiddleName] = @Original_MiddleName)) AND ((@IsNull_LastName = 1 AND [Las"& _ 
                "tName] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_AddressForei"& _ 
                "gn = 1 AND [AddressForeign] IS NULL) OR ([AddressForeign] = @Original_AddressFor"& _ 
                "eign)) AND ((@IsNull_ZIPCodeAR = 1 AND [ZIPCodeAR] IS NULL) OR ([ZIPCodeAR] = @O"& _ 
                "riginal_ZIPCodeAR)) AND ((@IsNull_ZIPCodeAL = 1 AND [ZIPCodeAL] IS NULL) OR ([ZI"& _ 
                "PCodeAL] = @Original_ZIPCodeAL)) AND ((@IsNull_ZIPCodeAF = 1 AND [ZIPCodeAF] IS "& _ 
                "NULL) OR ([ZIPCodeAF] = @Original_ZIPCodeAF)) AND ((@IsNull_TelNo = 1 AND [TelNo"& _ 
                "] IS NULL) OR ([TelNo] = @Original_TelNo)) AND ((@IsNull_TINNo = 1 AND [TINNo] I"& _ 
                "S NULL) OR ([TINNo] = @Original_TINNo)) AND ((@IsNull_BankAccountId = 1 AND [Ban"& _ 
                "kAccountId] IS NULL) OR ([BankAccountId] = @Original_BankAccountId)) AND ((@IsNu"& _ 
                "ll_BankAccountNo = 1 AND [BankAccountNo] IS NULL) OR ([BankAccountNo] = @Origina"& _ 
                "l_BankAccountNo)) AND ((@IsNull_BankAccountTypeId = 1 AND [BankAccountTypeId] IS"& _ 
                " NULL) OR ([BankAccountTypeId] = @Original_BankAccountTypeId)) AND ((@IsNull_SSS"& _ 
                "No = 1 AND [SSSNo] IS NULL) OR ([SSSNo] = @Original_SSSNo)) AND ((@IsNull_PagIbi"& _ 
                "gNo = 1 AND [PagIbigNo] IS NULL) OR ([PagIbigNo] = @Original_PagIbigNo)) AND ((@"& _ 
                "IsNull_PhilHealthNo = 1 AND [PhilHealthNo] IS NULL) OR ([PhilHealthNo] = @Origin"& _ 
                "al_PhilHealthNo)) AND ([IsWife] = @Original_IsWife) AND ((@IsNull_RDOCode = 1 AN"& _ 
                "D [RDOCode] IS NULL) OR ([RDOCode] = @Original_RDOCode)) AND ((@IsNull_BirthDate"& _ 
                " = 1 AND [BirthDate] IS NULL) OR ([BirthDate] = @Original_BirthDate)) AND ((@IsN"& _ 
                "ull_DateHired = 1 AND [DateHired] IS NULL) OR ([DateHired] = @Original_DateHired"& _ 
                ")) AND ((@IsNull_DateSeparated = 1 AND [DateSeparated] IS NULL) OR ([DateSeparat"& _ 
                "ed] = @Original_DateSeparated)) AND ((@IsNull_DateRegular = 1 AND [DateRegular] "& _ 
                "IS NULL) OR ([DateRegular] = @Original_DateRegular)) AND ((@IsNull_YearWithPrevi"& _ 
                "ousER = 1 AND [YearWithPreviousER] IS NULL) OR ([YearWithPreviousER] = @Original"& _ 
                "_YearWithPreviousER)) AND ((@IsNull_ShiftScheduleId = 1 AND [ShiftScheduleId] IS"& _ 
                " NULL) OR ([ShiftScheduleId] = @Original_ShiftScheduleId)) AND ((@IsNull_Employm"& _ 
                "entTypeId = 1 AND [EmploymentTypeId] IS NULL) OR ([EmploymentTypeId] = @Original"& _ 
                "_EmploymentTypeId)) AND ([PaymentTypeId] = @Original_PaymentTypeId) AND ((@IsNul"& _ 
                "l_PayrollFrequencyId = 1 AND [PayrollFrequencyId] IS NULL) OR ([PayrollFrequency"& _ 
                "Id] = @Original_PayrollFrequencyId)) AND ((@IsNull_TaxCodeId = 1 AND [TaxCodeId]"& _ 
                " IS NULL) OR ([TaxCodeId] = @Original_TaxCodeId)) AND ((@IsNull_PreviousRate = 1"& _ 
                " AND [PreviousRate] IS NULL) OR ([PreviousRate] = @Original_PreviousRate)) AND ("& _ 
                "[Rate] = @Original_Rate) AND ([MonthlyRate] = @Original_MonthlyRate) AND ((@IsNu"& _ 
                "ll_PreviousMonthlyRate = 1 AND [PreviousMonthlyRate] IS NULL) OR ([PreviousMonth"& _ 
                "lyRate] = @Original_PreviousMonthlyRate)) AND ([DailyRate] = @Original_DailyRate"& _ 
                ") AND ((@IsNull_PreviousDailyRate = 1 AND [PreviousDailyRate] IS NULL) OR ([Prev"& _ 
                "iousDailyRate] = @Original_PreviousDailyRate)) AND ([HourlyRate] = @Original_Hou"& _ 
                "rlyRate) AND ((@IsNull_PreviousHourlyRate = 1 AND [PreviousHourlyRate] IS NULL) "& _ 
                "OR ([PreviousHourlyRate] = @Original_PreviousHourlyRate)) AND ((@IsNull_Previous"& _ 
                "Allowance = 1 AND [PreviousAllowance] IS NULL) OR ([PreviousAllowance] = @Origin"& _ 
                "al_PreviousAllowance)) AND ([Allowance] = @Original_Allowance) AND ([MonthlyAllo"& _ 
                "wance] = @Original_MonthlyAllowance) AND ((@IsNull_PreviousMonthlyAllowance = 1 "& _ 
                "AND [PreviousMonthlyAllowance] IS NULL) OR ([PreviousMonthlyAllowance] = @Origin"& _ 
                "al_PreviousMonthlyAllowance)) AND ([DailyAllowance] = @Original_DailyAllowance) "& _ 
                "AND ((@IsNull_PreviousDailyAllowance = 1 AND [PreviousDailyAllowance] IS NULL) O"& _ 
                "R ([PreviousDailyAllowance] = @Original_PreviousDailyAllowance)) AND ([HourlyAll"& _ 
                "owance] = @Original_HourlyAllowance) AND ((@IsNull_PreviousHourlyAllowance = 1 A"& _ 
                "ND [PreviousHourlyAllowance] IS NULL) OR ([PreviousHourlyAllowance] = @Original_"& _ 
                "PreviousHourlyAllowance)) AND ([COLA] = @Original_COLA) AND ([MonthlyCOLA] = @Or"& _ 
                "iginal_MonthlyCOLA) AND ([DailyCOLA] = @Original_DailyCOLA) AND ([HourlyCOLA] = "& _ 
                "@Original_HourlyCOLA) AND ((@IsNull_FixTaxRate = 1 AND [FixTaxRate] IS NULL) OR "& _ 
                "([FixTaxRate] = @Original_FixTaxRate)) AND ([Active] = @Original_Active) AND ([W"& _ 
                "ithPreviousER] = @Original_WithPreviousER) AND ((@IsNull_ParameterId = 1 AND [Pa"& _ 
                "rameterId] IS NULL) OR ([ParameterId] = @Original_ParameterId)) AND ((@IsNull_Po"& _ 
                "sitionId = 1 AND [PositionId] IS NULL) OR ([PositionId] = @Original_PositionId))"& _ 
                " AND ((@IsNull_MaritalStatusId = 1 AND [MaritalStatusId] IS NULL) OR ([MaritalSt"& _ 
                "atusId] = @Original_MaritalStatusId)) AND ((@IsNull_GenderId = 1 AND [GenderId] "& _ 
                "IS NULL) OR ([GenderId] = @Original_GenderId)) AND ([TimeSourceId] = @Original_T"& _ 
                "imeSourceId) AND ((@IsNull_CostCenterId = 1 AND [CostCenterId] IS NULL) OR ([Cos"& _ 
                "tCenterId] = @Original_CostCenterId)) AND ((@IsNull_DepartmentId = 1 AND [Depart"& _ 
                "mentId] IS NULL) OR ([DepartmentId] = @Original_DepartmentId)) AND ((@IsNull_Cus"& _ 
                "tomGroup1Id = 1 AND [CustomGroup1Id] IS NULL) OR ([CustomGroup1Id] = @Original_C"& _ 
                "ustomGroup1Id)) AND ((@IsNull_CustomGroup2Id = 1 AND [CustomGroup2Id] IS NULL) O"& _ 
                "R ([CustomGroup2Id] = @Original_CustomGroup2Id)) AND ((@IsNull_CustomGroup3Id = "& _ 
                "1 AND [CustomGroup3Id] IS NULL) OR ([CustomGroup3Id] = @Original_CustomGroup3Id)"& _ 
                ") AND ((@IsNull_CustomField1 = 1 AND [CustomField1] IS NULL) OR ([CustomField1] "& _ 
                "= @Original_CustomField1)) AND ((@IsNull_CustomField2 = 1 AND [CustomField2] IS "& _ 
                "NULL) OR ([CustomField2] = @Original_CustomField2)) AND ((@IsNull_CustomField3 ="& _ 
                " 1 AND [CustomField3] IS NULL) OR ([CustomField3] = @Original_CustomField3)) AND"& _ 
                " ((@IsNull_PayElementScheduleId = 1 AND [PayElementScheduleId] IS NULL) OR ([Pay"& _ 
                "ElementScheduleId] = @Original_PayElementScheduleId)) AND ((@IsNull_EmailAddress"& _ 
                " = 1 AND [EmailAddress] IS NULL) OR ([EmailAddress] = @Original_EmailAddress)) A"& _ 
                "ND ([IsSSS] = @Original_IsSSS) AND ([IsTax] = @Original_IsTax) AND ([IsPHIC] = @"& _ 
                "Original_IsPHIC) AND ([IsHDMF] = @Original_IsHDMF) AND ([IsUnion] = @Original_Is"& _ 
                "Union) AND ([IsEmailPayslip] = @Original_IsEmailPayslip) AND ((@IsNull_PayslipPa"& _ 
                "ssword = 1 AND [PayslipPassword] IS NULL) OR ([PayslipPassword] = @Original_Pays"& _ 
                "lipPassword)) AND ((@IsNull_DateEffective = 1 AND [DateEffective] IS NULL) OR (["& _ 
                "DateEffective] = @Original_DateEffective)) AND ([System] = @Original_System) AND"& _ 
                " ((@IsNull_LocationId = 1 AND [LocationId] IS NULL) OR ([LocationId] = @Original"& _ 
                "_LocationId)) AND ([VersionNo] = @Original_VersionNo) AND ((@IsNull_PayGroupId ="& _ 
                " 1 AND [PayGroupId] IS NULL) OR ([PayGroupId] = @Original_PayGroupId)) AND ((@Is"& _ 
                "Null_MobileNo = 1 AND [MobileNo] IS NULL) OR ([MobileNo] = @Original_MobileNo)) "& _ 
                "AND ((@IsNull_DevicePassword = 1 AND [DevicePassword] IS NULL) OR ([DevicePasswo"& _ 
                "rd] = @Original_DevicePassword)) AND ((@IsNull_LeaveAccrualScheduleId = 1 AND [L"& _ 
                "eaveAccrualScheduleId] IS NULL) OR ([LeaveAccrualScheduleId] = @Original_LeaveAc"& _ 
                "crualScheduleId)) AND ((@IsNull_ContractStartDate = 1 AND [ContractStartDate] IS"& _ 
                " NULL) OR ([ContractStartDate] = @Original_ContractStartDate)) AND ((@IsNull_Con"& _ 
                "tractEndDate = 1 AND [ContractEndDate] IS NULL) OR ([ContractEndDate] = @Origina"& _ 
                "l_ContractEndDate)) AND ((@IsNull_DaysInYear = 1 AND [DaysInYear] IS NULL) OR (["& _ 
                "DaysInYear] = @Original_DaysInYear)) AND ((@IsNull_SupervisorId = 1 AND [Supervi"& _ 
                "sorId] IS NULL) OR ([SupervisorId] = @Original_SupervisorId)) AND ([WTaxExempt] "& _ 
                "= @Original_WTaxExempt) AND ((@IsNull_MaxTaxableEarning = 1 AND [MaxTaxableEarni"& _ 
                "ng] IS NULL) OR ([MaxTaxableEarning] = @Original_MaxTaxableEarning)) AND ((@IsNu"& _ 
                "ll_TINBranch = 1 AND [TINBranch] IS NULL) OR ([TINBranch] = @Original_TINBranch)"& _ 
                ") AND ((@IsNull_ClassId = 1 AND [ClassId] IS NULL) OR ([ClassId] = @Original_Cla"& _ 
                "ssId)) AND ((@IsNull_MinNetPayForLoan = 1 AND [MinNetPayForLoan] IS NULL) OR ([M"& _ 
                "inNetPayForLoan] = @Original_MinNetPayForLoan)) AND ((@IsNull_MinNetPayForLoanTy"& _ 
                "peId = 1 AND [MinNetPayForLoanTypeId] IS NULL) OR ([MinNetPayForLoanTypeId] = @O"& _ 
                "riginal_MinNetPayForLoanTypeId)) AND ((@IsNull_ApprovingId1 = 1 AND [ApprovingId"& _ 
                "1] IS NULL) OR ([ApprovingId1] = @Original_ApprovingId1)) AND ((@IsNull_Approvin"& _ 
                "gId2 = 1 AND [ApprovingId2] IS NULL) OR ([ApprovingId2] = @Original_ApprovingId2"& _ 
                ")) AND ((@IsNull_EWTRate = 1 AND [EWTRate] IS NULL) OR ([EWTRate] = @Original_EW"& _ 
                "TRate)) AND ((@IsNull_SecurityUserLevelId = 1 AND [SecurityUserLevelId] IS NULL)"& _ 
                " OR ([SecurityUserLevelId] = @Original_SecurityUserLevelId)) AND ((@IsNull_Secur"& _ 
                "ityUserGroupId = 1 AND [SecurityUserGroupId] IS NULL) OR ([SecurityUserGroupId] "& _ 
                "= @Original_SecurityUserGroupId)) AND ([IsProcessed] = @Original_IsProcessed) AN"& _ 
                "D ([IsCleared] = @Original_IsCleared) AND ((@IsNull_DateCleared = 1 AND [DateCle"& _ 
                "ared] IS NULL) OR ([DateCleared] = @Original_DateCleared)) AND ((@IsNull_Employe"& _ 
                "ePassword = 1 AND [EmployeePassword] IS NULL) OR ([EmployeePassword] = @Original"& _ 
                "_EmployeePassword)) AND ([IsClosed] = @Original_IsClosed) AND ((@IsNull_Webkiosk"& _ 
                "RoleId = 1 AND [WebkioskRoleId] IS NULL) OR ([WebkioskRoleId] = @Original_Webkio"& _ 
                "skRoleId)) AND ((@IsNull_TeamId = 1 AND [TeamId] IS NULL) OR ([TeamId] = @Origin"& _ 
                "al_TeamId)) AND ((@IsNull_RegionId = 1 AND [RegionId] IS NULL) OR ([RegionId] = "& _ 
                "@Original_RegionId)) AND ((@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remar"& _ 
                "ks] = @Original_Remarks)) AND ((@IsNull_MotherMaidenName = 1 AND [MotherMaidenNa"& _ 
                "me] IS NULL) OR ([MotherMaidenName] = @Original_MotherMaidenName)) AND ((@IsNull"& _ 
                "_AlphanumericTaxCodeId = 1 AND [AlphanumericTaxCodeId] IS NULL) OR ([Alphanumeri"& _ 
                "cTaxCodeId] = @Original_AlphanumericTaxCodeId)) AND ((@IsNull_ResidenceStatusCod"& _ 
                "eId = 1 AND [ResidenceStatusCodeId] IS NULL) OR ([ResidenceStatusCodeId] = @Orig"& _ 
                "inal_ResidenceStatusCodeId)) AND ((@IsNull_WebkioskLoginFailedAttempt = 1 AND [W"& _ 
                "ebkioskLoginFailedAttempt] IS NULL) OR ([WebkioskLoginFailedAttempt] = @Original"& _ 
                "_WebkioskLoginFailedAttempt)) AND ([IsMainEmployer] = @Original_IsMainEmployer) "& _ 
                "AND ((@IsNull_Nickname = 1 AND [Nickname] IS NULL) OR ([Nickname] = @Original_Ni"& _ 
                "ckname)) AND ((@IsNull_EmployeePasswordDate = 1 AND [EmployeePasswordDate] IS NU"& _ 
                "LL) OR ([EmployeePasswordDate] = @Original_EmployeePasswordDate)) AND ([IsSubsti"& _ 
                "tutedFiling] = @Original_IsSubstitutedFiling) AND ((@IsNull_PayslipPasswordDate "& _ 
                "= 1 AND [PayslipPasswordDate] IS NULL) OR ([PayslipPasswordDate] = @Original_Pay"& _ 
                "slipPasswordDate)) AND ((@IsNull_SalutationId = 1 AND [SalutationId] IS NULL) OR"& _ 
                " ([SalutationId] = @Original_SalutationId)) AND ([IsHusband] = @Original_IsHusba"& _ 
                "nd) AND ((@IsNull_YearSeparated = 1 AND [YearSeparated] IS NULL) OR ([YearSepara"& _ 
                "ted] = @Original_YearSeparated)) AND ((@IsNull_RemarksEmploymentInformation = 1 "& _ 
                "AND [RemarksEmploymentInformation] IS NULL) OR ([RemarksEmploymentInformation] ="& _ 
                " @Original_RemarksEmploymentInformation)) AND ((@IsNull_LeaveForfeitScheduleId ="& _ 
                " 1 AND [LeaveForfeitScheduleId] IS NULL) OR ([LeaveForfeitScheduleId] = @Origina"& _ 
                "l_LeaveForfeitScheduleId)) AND ((@IsNull_PayoutTypeId = 1 AND [PayoutTypeId] IS "& _ 
                "NULL) OR ([PayoutTypeId] = @Original_PayoutTypeId)) AND ((@IsNull_CitizenshipId "& _ 
                "= 1 AND [CitizenshipId] IS NULL) OR ([CitizenshipId] = @Original_CitizenshipId))"& _ 
                " AND ((@IsNull_CustomGroup4Id = 1 AND [CustomGroup4Id] IS NULL) OR ([CustomGroup"& _ 
                "4Id] = @Original_CustomGroup4Id)) AND ((@IsNull_CustomGroup5Id = 1 AND [CustomGr"& _ 
                "oup5Id] IS NULL) OR ([CustomGroup5Id] = @Original_CustomGroup5Id)) AND ((@IsNull"& _ 
                "_CustomGroup6Id = 1 AND [CustomGroup6Id] IS NULL) OR ([CustomGroup6Id] = @Origin"& _ 
                "al_CustomGroup6Id)) AND ((@IsNull_CustomGroup7Id = 1 AND [CustomGroup7Id] IS NUL"& _ 
                "L) OR ([CustomGroup7Id] = @Original_CustomGroup7Id)) AND ((@IsNull_CustomGroup8I"& _ 
                "d = 1 AND [CustomGroup8Id] IS NULL) OR ([CustomGroup8Id] = @Original_CustomGroup"& _ 
                "8Id)) AND ((@IsNull_CustomDateField1 = 1 AND [CustomDateField1] IS NULL) OR ([Cu"& _ 
                "stomDateField1] = @Original_CustomDateField1)) AND ((@IsNull_CustomDateField2 = "& _ 
                "1 AND [CustomDateField2] IS NULL) OR ([CustomDateField2] = @Original_CustomDateF"& _ 
                "ield2)) AND ((@IsNull_CustomDateField3 = 1 AND [CustomDateField3] IS NULL) OR (["& _ 
                "CustomDateField3] = @Original_CustomDateField3)) AND ((@IsNull_CustomDateField4 "& _ 
                "= 1 AND [CustomDateField4] IS NULL) OR ([CustomDateField4] = @Original_CustomDat"& _ 
                "eField4)) AND ((@IsNull_CustomDateField5 = 1 AND [CustomDateField5] IS NULL) OR "& _ 
                "([CustomDateField5] = @Original_CustomDateField5)) AND ((@IsNull_CustomField4 = "& _ 
                "1 AND [CustomField4] IS NULL) OR ([CustomField4] = @Original_CustomField4)) AND "& _ 
                "((@IsNull_CustomField5 = 1 AND [CustomField5] IS NULL) OR ([CustomField5] = @Ori"& _ 
                "ginal_CustomField5)) AND ((@IsNull_CustomField6 = 1 AND [CustomField6] IS NULL) "& _ 
                "OR ([CustomField6] = @Original_CustomField6)) AND ((@IsNull_CustomField7 = 1 AND"& _ 
                " [CustomField7] IS NULL) OR ([CustomField7] = @Original_CustomField7)) AND ((@Is"& _ 
                "Null_CustomField8 = 1 AND [CustomField8] IS NULL) OR ([CustomField8] = @Original"& _ 
                "_CustomField8)) AND ((@IsNull_SeparationPayTypeId = 1 AND [SeparationPayTypeId] "& _ 
                "IS NULL) OR ([SeparationPayTypeId] = @Original_SeparationPayTypeId)) AND ((@IsNu"& _ 
                "ll_ShiftScheduleTemplateGroupId = 1 AND [ShiftScheduleTemplateGroupId] IS NULL) "& _ 
                "OR ([ShiftScheduleTemplateGroupId] = @Original_ShiftScheduleTemplateGroupId)) AN"& _ 
                "D ((@IsNull_DateFiledofResignation = 1 AND [DateFiledofResignation] IS NULL) OR "& _ 
                "([DateFiledofResignation] = @Original_DateFiledofResignation)) AND ((@IsNull_Rea"& _ 
                "sonForLeaving = 1 AND [ReasonForLeaving] IS NULL) OR ([ReasonForLeaving] = @Orig"& _ 
                "inal_ReasonForLeaving)) AND ([IsRehirable] = @Original_IsRehirable) AND ((@IsNul"& _ 
                "l_ClearanceStatusId = 1 AND [ClearanceStatusId] IS NULL) OR ([ClearanceStatusId]"& _ 
                " = @Original_ClearanceStatusId)) AND ((@IsNull_ClearanceIssuedById = 1 AND [Clea"& _ 
                "ranceIssuedById] IS NULL) OR ([ClearanceIssuedById] = @Original_ClearanceIssuedB"& _ 
                "yId)) AND ((@IsNull_WaiverAndQuitclaimFinalPay = 1 AND [WaiverAndQuitclaimFinalP"& _ 
                "ay] IS NULL) OR ([WaiverAndQuitclaimFinalPay] = @Original_WaiverAndQuitclaimFina"& _ 
                "lPay)) AND ([IsReleasedWaiverAndQuitclaim] = @Original_IsReleasedWaiverAndQuitcl"& _ 
                "aim) AND ((@IsNull_WaiverAndQuitclaimDateReleased = 1 AND [WaiverAndQuitclaimDat"& _ 
                "eReleased] IS NULL) OR ([WaiverAndQuitclaimDateReleased] = @Original_WaiverAndQu"& _ 
                "itclaimDateReleased)) AND ((@IsNull_WaiverAndQuitclaimReleasedById = 1 AND [Waiv"& _ 
                "erAndQuitclaimReleasedById] IS NULL) OR ([WaiverAndQuitclaimReleasedById] = @Ori"& _ 
                "ginal_WaiverAndQuitclaimReleasedById)) AND ((@IsNull_CardNum = 1 AND [CardNum] I"& _ 
                "S NULL) OR ([CardNum] = @Original_CardNum)) AND ((@IsNull_ReasonForLeavingType ="& _ 
                " 1 AND [ReasonForLeavingType] IS NULL) OR ([ReasonForLeavingType] = @Original_Re"& _ 
                "asonForLeavingType)) AND ((@IsNull_HDMFID = 1 AND [HDMFID] IS NULL) OR ([HDMFID]"& _ 
                " = @Original_HDMFID)) AND ((@IsNull_Lineage = 1 AND [Lineage] IS NULL) OR ([Line"& _ 
                "age] = @Original_Lineage)) AND ((@IsNull_LineageDepth = 1 AND [LineageDepth] IS "& _ 
                "NULL) OR ([LineageDepth] = @Original_LineageDepth)) AND ((@IsNull_CompanyBranchI"& _ 
                "d = 1 AND [CompanyBranchId] IS NULL) OR ([CompanyBranchId] = @Original_CompanyBr"& _ 
                "anchId)) AND ([AllocationPayoutNo] = @Original_AllocationPayoutNo) AND ([Allocat"& _ 
                "ionTypeId] = @Original_AllocationTypeId) AND ([AllocationValue] = @Original_Allo"& _ 
                "cationValue) AND ((@IsNull_PayrollAccountBranchCode = 1 AND [PayrollAccountBranc"& _ 
                "hCode] IS NULL) OR ([PayrollAccountBranchCode] = @Original_PayrollAccountBranchC"& _ 
                "ode)) AND ((@IsNull_AddressRegistered = 1 AND [AddressRegistered] IS NULL) OR (["& _ 
                "AddressRegistered] = @Original_AddressRegistered)) AND ((@IsNull_AddressLocal = "& _ 
                "1 AND [AddressLocal] IS NULL) OR ([AddressLocal] = @Original_AddressLocal)) AND "& _ 
                "((@IsNull_CTCNo = 1 AND [CTCNo] IS NULL) OR ([CTCNo] = @Original_CTCNo)) AND ((@"& _ 
                "IsNull_CustomDateField6 = 1 AND [CustomDateField6] IS NULL) OR ([CustomDateField"& _ 
                "6] = @Original_CustomDateField6)) AND ((@IsNull_CustomDateField7 = 1 AND [Custom"& _ 
                "DateField7] IS NULL) OR ([CustomDateField7] = @Original_CustomDateField7)) AND ("& _ 
                "(@IsNull_CustomDateField8 = 1 AND [CustomDateField8] IS NULL) OR ([CustomDateFie"& _ 
                "ld8] = @Original_CustomDateField8)) AND ([CustomCheckbox1] = @Original_CustomChe"& _ 
                "ckbox1) AND ([CustomCheckbox2] = @Original_CustomCheckbox2) AND ([CustomCheckbox"& _ 
                "3] = @Original_CustomCheckbox3) AND ([CustomCheckbox4] = @Original_CustomCheckbo"& _ 
                "x4) AND ([CustomCheckbox5] = @Original_CustomCheckbox5) AND ([CustomCheckbox6] ="& _ 
                " @Original_CustomCheckbox6) AND ([CustomCheckbox7] = @Original_CustomCheckbox7) "& _ 
                "AND ([CustomCheckbox8] = @Original_CustomCheckbox8) AND ((@IsNull_BackPayCoverag"& _ 
                "eFromDate = 1 AND [BackPayCoverageFromDate] IS NULL) OR ([BackPayCoverageFromDat"& _ 
                "e] = @Original_BackPayCoverageFromDate)) AND ((@IsNull_BackPayCoverageToDate = 1"& _ 
                " AND [BackPayCoverageToDate] IS NULL) OR ([BackPayCoverageToDate] = @Original_Ba"& _ 
                "ckPayCoverageToDate)) AND ((@IsNull_PlainSSSNo = 1 AND [PlainSSSNo] IS NULL) OR "& _ 
                "([PlainSSSNo] = @Original_PlainSSSNo)) AND ((@IsNull_MinTakeHomePayBasisId = 1 A"& _ 
                "ND [MinTakeHomePayBasisId] IS NULL) OR ([MinTakeHomePayBasisId] = @Original_MinT"& _ 
                "akeHomePayBasisId)) AND ((@IsNull_SuffixId = 1 AND [SuffixId] IS NULL) OR ([Suff"& _ 
                "ixId] = @Original_SuffixId)) AND ((@IsNull_ConcurrentEmployerName = 1 AND [Concu"& _ 
                "rrentEmployerName] IS NULL) OR ([ConcurrentEmployerName] = @Original_ConcurrentE"& _ 
                "mployerName)) AND ((@IsNull_ConcurrentEmployerTIN = 1 AND [ConcurrentEmployerTIN"& _ 
                "] IS NULL) OR ([ConcurrentEmployerTIN] = @Original_ConcurrentEmployerTIN)) AND ("& _ 
                "(@IsNull_ConcurrentEmployerTINBranch = 1 AND [ConcurrentEmployerTINBranch] IS NU"& _ 
                "LL) OR ([ConcurrentEmployerTINBranch] = @Original_ConcurrentEmployerTINBranch)) "& _ 
                "AND ((@IsNull_DateEffectivityBasis = 1 AND [DateEffectivityBasis] IS NULL) OR (["& _ 
                "DateEffectivityBasis] = @Original_DateEffectivityBasis)) AND ([FormalName] = @Or"& _ 
                "iginal_FormalName) AND ([Name] = @Original_Name) AND ([FullName] = @Original_Ful"& _ 
                "lName) AND ((@IsNull_ReasonForSeparationId = 1 AND [ReasonForSeparationId] IS NU"& _ 
                "LL) OR ([ReasonForSeparationId] = @Original_ReasonForSeparationId)) AND ((@IsNul"& _ 
                "l_NationalityId = 1 AND [NationalityId] IS NULL) OR ([NationalityId] = @Original"& _ 
                "_NationalityId)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, CompanyId, EmployeeCode, AccessCode, FirstName, M"& _ 
                "iddleName, LastName, AddressForeign, ZIPCodeAR, ZIPCodeAL, ZIPCodeAF, TelNo, TIN"& _ 
                "No, BankAccountId, BankAccountNo, BankAccountTypeId, SSSNo, PagIbigNo, PhilHealt"& _ 
                "hNo, IsWife, RDOCode, BirthDate, DateHired, DateSeparated, DateRegular, YearWith"& _ 
                "PreviousER, ShiftScheduleId, EmploymentTypeId, PaymentTypeId, PayrollFrequencyId"& _ 
                ", TaxCodeId, PreviousRate, Rate, MonthlyRate, PreviousMonthlyRate, DailyRate, Pr"& _ 
                "eviousDailyRate, HourlyRate, PreviousHourlyRate, PreviousAllowance, Allowance, M"& _ 
                "onthlyAllowance, PreviousMonthlyAllowance, DailyAllowance, PreviousDailyAllowanc"& _ 
                "e, HourlyAllowance, PreviousHourlyAllowance, COLA, MonthlyCOLA, DailyCOLA, Hourl"& _ 
                "yCOLA, FixTaxRate, Active, WithPreviousER, ParameterId, PositionId, MaritalStatu"& _ 
                "sId, GenderId, TimeSourceId, Picture, CostCenterId, DepartmentId, CustomGroup1Id"& _ 
                ", CustomGroup2Id, CustomGroup3Id, CustomField1, CustomField2, CustomField3, PayE"& _ 
                "lementScheduleId, EmailAddress, IsSSS, IsTax, IsPHIC, IsHDMF, IsUnion, IsEmailPa"& _ 
                "yslip, PayslipPassword, DateEffective, System, LocationId, VersionNo, PayGroupId"& _ 
                ", MobileNo, DevicePassword, LeaveAccrualScheduleId, ContractStartDate, ContractE"& _ 
                "ndDate, DaysInYear, SupervisorId, WTaxExempt, MaxTaxableEarning, TINBranch, Clas"& _ 
                "sId, MinNetPayForLoan, MinNetPayForLoanTypeId, ApprovingId1, ApprovingId2, EWTRa"& _ 
                "te, SecurityUserLevelId, SecurityUserGroupId, IsProcessed, IsCleared, DateCleare"& _ 
                "d, EmployeePassword, IsClosed, WebkioskRoleId, TeamId, RegionId, Remarks, Mother"& _ 
                "MaidenName, AlphanumericTaxCodeId, ResidenceStatusCodeId, WebkioskLoginFailedAtt"& _ 
                "empt, IsMainEmployer, Nickname, EmployeePasswordDate, IsSubstitutedFiling, Paysl"& _ 
                "ipPasswordDate, SalutationId, IsHusband, YearSeparated, RemarksEmploymentInforma"& _ 
                "tion, LeaveForfeitScheduleId, PayoutTypeId, CitizenshipId, CustomGroup4Id, Custo"& _ 
                "mGroup5Id, CustomGroup6Id, CustomGroup7Id, CustomGroup8Id, CustomDateField1, Cus"& _ 
                "tomDateField2, CustomDateField3, CustomDateField4, CustomDateField5, CustomField"& _ 
                "4, CustomField5, CustomField6, CustomField7, CustomField8, SeparationPayTypeId, "& _ 
                "ShiftScheduleTemplateGroupId, DateFiledofResignation, ReasonForLeaving, IsRehira"& _ 
                "ble, ClearanceStatusId, ClearanceIssuedById, WaiverAndQuitclaimFinalPay, IsRelea"& _ 
                "sedWaiverAndQuitclaim, WaiverAndQuitclaimDateReleased, WaiverAndQuitclaimRelease"& _ 
                "dById, CardNum, ReasonForLeavingType, HDMFID, Lineage, LineageDepth, CompanyBran"& _ 
                "chId, AllocationPayoutNo, AllocationTypeId, AllocationValue, PayrollAccountBranc"& _ 
                "hCode, AddressRegistered, AddressLocal, CTCNo, CustomDateField6, CustomDateField"& _ 
                "7, CustomDateField8, CustomCheckbox1, CustomCheckbox2, CustomCheckbox3, CustomCh"& _ 
                "eckbox4, CustomCheckbox5, CustomCheckbox6, CustomCheckbox7, CustomCheckbox8, Bac"& _ 
                "kPayCoverageFromDate, BackPayCoverageToDate, PlainSSSNo, MinTakeHomePayBasisId, "& _ 
                "SuffixId, ConcurrentEmployerName, ConcurrentEmployerTIN, ConcurrentEmployerTINBr"& _ 
                "anch, DateEffectivityBasis, FormalName, Name, FullName, ReasonForSeparationId, N"& _ 
                "ationalityId FROM tblEmployees WHERE (CompanyId = @CompanyId) AND (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccessCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddressForeign", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZIPCodeAF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TelNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TINNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PagIbigNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PhilHealthNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsWife", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsWife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RDOCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BirthDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateHired", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateSeparated", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateRegular", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousMonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousDailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousHourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Allowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousDailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviousHourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MonthlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DailyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HourlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyCOLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixTaxRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WithPreviousER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WithPreviousER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeSourceId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeSourceId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Picture", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsSSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsTax", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsPHIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPHIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsHDMF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHDMF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsUnion", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsUnion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsEmailPayslip", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsEmailPayslip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayslipPassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEffective", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@System", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "System", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MobileNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DevicePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContractStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContractEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysInYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WTaxExempt", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WTaxExempt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxTaxableEarning", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinNetPayForLoan", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EWTRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsProcessed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsCleared", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsCleared", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateCleared", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsClosed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClosed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotherMaidenName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsMainEmployer", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsMainEmployer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nickname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeePasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsSubstitutedFiling", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSubstitutedFiling", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayslipPasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsHusband", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHusband", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemarksEmploymentInformation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField3", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField4", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField5", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField6", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField7", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField8", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFiledofResignation", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForLeaving", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRehirable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRehirable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsReleasedWaiverAndQuitclaim", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsReleasedWaiverAndQuitclaim", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CardNum", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForLeavingType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HDMFID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lineage", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationPayoutNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationPayoutNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationValue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayrollAccountBranchCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField6", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField7", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomDateField8", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox7", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomCheckbox8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackPayCoverageFromDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BackPayCoverageToDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerTIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeeCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeeCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeeCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccessCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccessCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccessCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressForeign", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressForeign", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressForeign", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZIPCodeAF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZIPCodeAF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZIPCodeAF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TelNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TelNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TelNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TINNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TINNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BankAccountTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BankAccountTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SSSNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSSNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PagIbigNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PagIbigNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PagIbigNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PhilHealthNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PhilHealthNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhilHealthNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsWife", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsWife", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RDOCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RDOCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RDOCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BirthDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BirthDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BirthDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateHired", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateHired", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateHired", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateSeparated", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateSeparated", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateRegular", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateRegular", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateRegular", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YearWithPreviousER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearWithPreviousER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShiftScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmploymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmploymentTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayrollFrequencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollFrequencyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousMonthlyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousMonthlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousDailyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousDailyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousHourlyRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousHourlyRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Allowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousMonthlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousMonthlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousDailyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousDailyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousDailyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PreviousHourlyAllowance", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PreviousHourlyAllowance", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviousHourlyAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MonthlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MonthlyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DailyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DailyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HourlyCOLA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HourlyCOLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixTaxRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixTaxRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixTaxRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WithPreviousER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WithPreviousER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParameterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParameterId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PositionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaritalStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GenderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GenderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeSourceId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeSourceId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CostCenterId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostCenterId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup1Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup1Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup2Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup2Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup3Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup3Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayElementScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayElementScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmailAddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsSSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSSS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsTax", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsTax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsPHIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPHIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsHDMF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHDMF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsUnion", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsUnion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsEmailPayslip", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsEmailPayslip", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayslipPassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayslipPassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateEffective", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateEffective", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffective", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_System", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "System", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MobileNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MobileNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MobileNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DevicePassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DevicePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevicePassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeaveAccrualScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveAccrualScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContractStartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContractStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContractEndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContractEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DaysInYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DaysInYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysInYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupervisorId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupervisorId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WTaxExempt", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WTaxExempt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxTaxableEarning", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxTaxableEarning", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxTaxableEarning", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TINBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClassId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinNetPayForLoan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinNetPayForLoan", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinNetPayForLoanTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinNetPayForLoanTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovingId1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovingId2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovingId2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EWTRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EWTRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EWTRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SecurityUserLevelId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserLevelId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SecurityUserGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SecurityUserGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsProcessed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsCleared", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsCleared", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateCleared", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateCleared", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCleared", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeePassword", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeePassword", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePassword", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsClosed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClosed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WebkioskRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskRoleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TeamId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TeamId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RegionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MotherMaidenName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MotherMaidenName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MotherMaidenName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AlphanumericTaxCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlphanumericTaxCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResidenceStatusCodeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResidenceStatusCodeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WebkioskLoginFailedAttempt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WebkioskLoginFailedAttempt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsMainEmployer", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsMainEmployer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nickname", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nickname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nickname", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmployeePasswordDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmployeePasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmployeePasswordDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsSubstitutedFiling", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsSubstitutedFiling", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayslipPasswordDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayslipPasswordDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayslipPasswordDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SalutationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SalutationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsHusband", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsHusband", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YearSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearSeparated", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YearSeparated", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearSeparated", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RemarksEmploymentInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RemarksEmploymentInformation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemarksEmploymentInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeaveForfeitScheduleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeaveForfeitScheduleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayoutTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayoutTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CitizenshipId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CitizenshipId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup4Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup4Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup5Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup5Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup6Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup6Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup7Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup7Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomGroup8Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomGroup8Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField3", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField4", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField5", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField5", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField6", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField7", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField8", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SeparationPayTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeparationPayTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ShiftScheduleTemplateGroupId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShiftScheduleTemplateGroupId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateFiledofResignation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateFiledofResignation", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateFiledofResignation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForLeaving", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForLeaving", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeaving", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsRehirable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRehirable", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClearanceStatusId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClearanceIssuedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearanceIssuedById", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimFinalPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimFinalPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsReleasedWaiverAndQuitclaim", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsReleasedWaiverAndQuitclaim", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimDateReleased", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimDateReleased", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WaiverAndQuitclaimReleasedById", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WaiverAndQuitclaimReleasedById", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CardNum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CardNum", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForLeavingType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForLeavingType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForLeavingType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HDMFID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HDMFID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HDMFID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Lineage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lineage", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lineage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LineageDepth", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LineageDepth", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyBranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyBranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationPayoutNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationPayoutNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationTypeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationValue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayrollAccountBranchCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayrollAccountBranchCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayrollAccountBranchCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressRegistered", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressRegistered", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressRegistered", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressRegistered", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AddressLocal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressLocal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AddressLocal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressLocal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField6", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField7", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomDateField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomDateField8", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomDateField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox7", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomCheckbox8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomCheckbox8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BackPayCoverageFromDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BackPayCoverageFromDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageFromDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BackPayCoverageToDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BackPayCoverageToDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BackPayCoverageToDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PlainSSSNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlainSSSNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PlainSSSNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlainSSSNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MinTakeHomePayBasisId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinTakeHomePayBasisId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SuffixId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SuffixId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerTIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcurrentEmployerTINBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcurrentEmployerTINBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateEffectivityBasis", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEffectivityBasis", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormalName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormalName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReasonForSeparationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReasonForSeparationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NationalityId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SickLeaveScreening.My.MySettings.Default.JeonsoftConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, CompanyId, EmployeeCode, AccessCode, FirstName, MiddleName, LastName, "& _ 
                "AddressForeign, ZIPCodeAR, ZIPCodeAL, ZIPCodeAF, TelNo, TINNo, BankAccountId, Ba"& _ 
                "nkAccountNo, BankAccountTypeId, SSSNo, PagIbigNo, PhilHealthNo, IsWife, RDOCode,"& _ 
                " BirthDate, DateHired, DateSeparated, DateRegular, YearWithPreviousER, ShiftSche"& _ 
                "duleId, EmploymentTypeId, PaymentTypeId, PayrollFrequencyId, TaxCodeId, Previous"& _ 
                "Rate, Rate, MonthlyRate, PreviousMonthlyRate, DailyRate, PreviousDailyRate, Hour"& _ 
                "lyRate, PreviousHourlyRate, PreviousAllowance, Allowance, MonthlyAllowance, Prev"& _ 
                "iousMonthlyAllowance, DailyAllowance, PreviousDailyAllowance, HourlyAllowance, P"& _ 
                "reviousHourlyAllowance, COLA, MonthlyCOLA, DailyCOLA, HourlyCOLA, FixTaxRate, Ac"& _ 
                "tive, WithPreviousER, ParameterId, PositionId, MaritalStatusId, GenderId, TimeSo"& _ 
                "urceId, Picture, CostCenterId, DepartmentId, CustomGroup1Id, CustomGroup2Id, Cus"& _ 
                "tomGroup3Id, CustomField1, CustomField2, CustomField3, PayElementScheduleId, Ema"& _ 
                "ilAddress, IsSSS, IsTax, IsPHIC, IsHDMF, IsUnion, IsEmailPayslip, PayslipPasswor"& _ 
                "d, DateEffective, System, LocationId, VersionNo, PayGroupId, MobileNo, DevicePas"& _ 
                "sword, LeaveAccrualScheduleId, ContractStartDate, ContractEndDate, DaysInYear, S"& _ 
                "upervisorId, WTaxExempt, MaxTaxableEarning, TINBranch, ClassId, MinNetPayForLoan"& _ 
                ", MinNetPayForLoanTypeId, ApprovingId1, ApprovingId2, EWTRate, SecurityUserLevel"& _ 
                "Id, SecurityUserGroupId, IsProcessed, IsCleared, DateCleared, EmployeePassword, "& _ 
                "IsClosed, WebkioskRoleId, TeamId, RegionId, Remarks, MotherMaidenName, Alphanume"& _ 
                "ricTaxCodeId, ResidenceStatusCodeId, WebkioskLoginFailedAttempt, IsMainEmployer,"& _ 
                " Nickname, EmployeePasswordDate, IsSubstitutedFiling, PayslipPasswordDate, Salut"& _ 
                "ationId, IsHusband, YearSeparated, RemarksEmploymentInformation, LeaveForfeitSch"& _ 
                "eduleId, PayoutTypeId, CitizenshipId, CustomGroup4Id, CustomGroup5Id, CustomGrou"& _ 
                "p6Id, CustomGroup7Id, CustomGroup8Id, CustomDateField1, CustomDateField2, Custom"& _ 
                "DateField3, CustomDateField4, CustomDateField5, CustomField4, CustomField5, Cust"& _ 
                "omField6, CustomField7, CustomField8, SeparationPayTypeId, ShiftScheduleTemplate"& _ 
                "GroupId, DateFiledofResignation, ReasonForLeaving, IsRehirable, ClearanceStatusI"& _ 
                "d, ClearanceIssuedById, WaiverAndQuitclaimFinalPay, IsReleasedWaiverAndQuitclaim"& _ 
                ", WaiverAndQuitclaimDateReleased, WaiverAndQuitclaimReleasedById, CardNum, Reaso"& _ 
                "nForLeavingType, HDMFID, Lineage, LineageDepth, CompanyBranchId, AllocationPayou"& _ 
                "tNo, AllocationTypeId, AllocationValue, PayrollAccountBranchCode, AddressRegiste"& _ 
                "red, AddressLocal, CTCNo, CustomDateField6, CustomDateField7, CustomDateField8, "& _ 
                "CustomCheckbox1, CustomCheckbox2, CustomCheckbox3, CustomCheckbox4, CustomCheckb"& _ 
                "ox5, CustomCheckbox6, CustomCheckbox7, CustomCheckbox8, BackPayCoverageFromDate,"& _ 
                " BackPayCoverageToDate, PlainSSSNo, MinTakeHomePayBasisId, SuffixId, ConcurrentE"& _ 
                "mployerName, ConcurrentEmployerTIN, ConcurrentEmployerTINBranch, DateEffectivity"& _ 
                "Basis, FormalName, Name, FullName, ReasonForSeparationId, NationalityId FROM dbo"& _ 
                ".tblEmployees"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsJeonsoft.tblEmployeesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsJeonsoft.tblEmployeesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsJeonsoft.tblEmployeesDataTable = New dsJeonsoft.tblEmployeesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsJeonsoft.tblEmployeesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsJeonsoft) As Integer
            Return Me.Adapter.Update(dataSet, "tblEmployees")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_CompanyId As Integer,  _
                    ByVal Original_EmployeeCode As String,  _
                    ByVal Original_AccessCode As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_AddressForeign As String,  _
                    ByVal Original_ZIPCodeAR As String,  _
                    ByVal Original_ZIPCodeAL As String,  _
                    ByVal Original_ZIPCodeAF As String,  _
                    ByVal Original_TelNo As String,  _
                    ByVal Original_TINNo As String,  _
                    ByVal Original_BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BankAccountNo As String,  _
                    ByVal Original_BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SSSNo As String,  _
                    ByVal Original_PagIbigNo As String,  _
                    ByVal Original_PhilHealthNo As String,  _
                    ByVal Original_IsWife As Boolean,  _
                    ByVal Original_RDOCode As String,  _
                    ByVal Original_BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateHired As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal Original_YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PaymentTypeId As Integer,  _
                    ByVal Original_PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rate As Double,  _
                    ByVal Original_MonthlyRate As Double,  _
                    ByVal Original_PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyRate As Double,  _
                    ByVal Original_PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyRate As Double,  _
                    ByVal Original_PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_Allowance As Double,  _
                    ByVal Original_MonthlyAllowance As Double,  _
                    ByVal Original_PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyAllowance As Double,  _
                    ByVal Original_PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyAllowance As Double,  _
                    ByVal Original_PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_COLA As Double,  _
                    ByVal Original_MonthlyCOLA As Double,  _
                    ByVal Original_DailyCOLA As Double,  _
                    ByVal Original_HourlyCOLA As Double,  _
                    ByVal Original_FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Active As Boolean,  _
                    ByVal Original_WithPreviousER As Boolean,  _
                    ByVal Original_ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TimeSourceId As Integer,  _
                    ByVal Original_CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Original_IsSSS As Boolean,  _
                    ByVal Original_IsTax As Boolean,  _
                    ByVal Original_IsPHIC As Boolean,  _
                    ByVal Original_IsHDMF As Boolean,  _
                    ByVal Original_IsUnion As Boolean,  _
                    ByVal Original_IsEmailPayslip As Boolean,  _
                    ByVal Original_PayslipPassword As String,  _
                    ByVal Original_DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal Original_System As Boolean,  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VersionNo As Integer,  _
                    ByVal Original_PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MobileNo As String,  _
                    ByVal Original_DevicePassword As String,  _
                    ByVal Original_LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WTaxExempt As Boolean,  _
                    ByVal Original_MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TINBranch As String,  _
                    ByVal Original_ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal Original_MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsProcessed As Boolean,  _
                    ByVal Original_IsCleared As Boolean,  _
                    ByVal Original_DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal Original_EmployeePassword As String,  _
                    ByVal Original_IsClosed As Boolean,  _
                    ByVal Original_WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_MotherMaidenName As String,  _
                    ByVal Original_AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsMainEmployer As Boolean,  _
                    ByVal Original_Nickname As String,  _
                    ByVal Original_EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsSubstitutedFiling As Boolean,  _
                    ByVal Original_PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsHusband As Boolean,  _
                    ByVal Original_YearSeparated As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RemarksEmploymentInformation As String,  _
                    ByVal Original_LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReasonForLeaving As String,  _
                    ByVal Original_IsRehirable As Boolean,  _
                    ByVal Original_ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal Original_WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal Original_WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CardNum As String,  _
                    ByVal Original_ReasonForLeavingType As String,  _
                    ByVal Original_HDMFID As String,  _
                    ByVal Original_Lineage As String,  _
                    ByVal Original_LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AllocationPayoutNo As Integer,  _
                    ByVal Original_AllocationTypeId As Integer,  _
                    ByVal Original_AllocationValue As Decimal,  _
                    ByVal Original_PayrollAccountBranchCode As String,  _
                    ByVal Original_AddressRegistered As String,  _
                    ByVal Original_AddressLocal As String,  _
                    ByVal Original_CTCNo As String,  _
                    ByVal Original_CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomCheckbox1 As Boolean,  _
                    ByVal Original_CustomCheckbox2 As Boolean,  _
                    ByVal Original_CustomCheckbox3 As Boolean,  _
                    ByVal Original_CustomCheckbox4 As Boolean,  _
                    ByVal Original_CustomCheckbox5 As Boolean,  _
                    ByVal Original_CustomCheckbox6 As Boolean,  _
                    ByVal Original_CustomCheckbox7 As Boolean,  _
                    ByVal Original_CustomCheckbox8 As Boolean,  _
                    ByVal Original_BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PlainSSSNo As String,  _
                    ByVal Original_MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ConcurrentEmployerName As String,  _
                    ByVal Original_ConcurrentEmployerTIN As String,  _
                    ByVal Original_ConcurrentEmployerTINBranch As String,  _
                    ByVal Original_DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FormalName As String,  _
                    ByVal Original_Name As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CompanyId,Integer)
            If (Original_EmployeeCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_EmployeeCode,String)
            End If
            If (Original_AccessCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_AccessCode,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_LastName,String)
            End If
            If (Original_AddressForeign Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_AddressForeign,String)
            End If
            If (Original_ZIPCodeAR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ZIPCodeAR,String)
            End If
            If (Original_ZIPCodeAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ZIPCodeAL,String)
            End If
            If (Original_ZIPCodeAF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ZIPCodeAF,String)
            End If
            If (Original_TelNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_TelNo,String)
            End If
            If (Original_TINNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_TINNo,String)
            End If
            If (Original_BankAccountId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_BankAccountId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_BankAccountNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_BankAccountNo,String)
            End If
            If (Original_BankAccountTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_BankAccountTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_SSSNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_SSSNo,String)
            End If
            If (Original_PagIbigNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_PagIbigNo,String)
            End If
            If (Original_PhilHealthNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_PhilHealthNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_IsWife,Boolean)
            If (Original_RDOCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_RDOCode,String)
            End If
            If (Original_BirthDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_BirthDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_DateHired.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_DateHired.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_DateSeparated.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_DateSeparated.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_DateRegular.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_DateRegular.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_YearWithPreviousER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_YearWithPreviousER.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_ShiftScheduleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_ShiftScheduleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EmploymentTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EmploymentTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_PaymentTypeId,Integer)
            If (Original_PayrollFrequencyId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_PayrollFrequencyId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_TaxCodeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_TaxCodeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_PreviousRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_PreviousRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_Rate,Double)
            Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_MonthlyRate,Double)
            If (Original_PreviousMonthlyRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_PreviousMonthlyRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_DailyRate,Double)
            If (Original_PreviousDailyRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_PreviousDailyRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_HourlyRate,Double)
            If (Original_PreviousHourlyRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_PreviousHourlyRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_PreviousAllowance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_PreviousAllowance.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_Allowance,Double)
            Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_MonthlyAllowance,Double)
            If (Original_PreviousMonthlyAllowance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_PreviousMonthlyAllowance.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_DailyAllowance,Double)
            If (Original_PreviousDailyAllowance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_PreviousDailyAllowance.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_HourlyAllowance,Double)
            If (Original_PreviousHourlyAllowance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_PreviousHourlyAllowance.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_COLA,Double)
            Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_MonthlyCOLA,Double)
            Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_DailyCOLA,Double)
            Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_HourlyCOLA,Double)
            If (Original_FixTaxRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_FixTaxRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_Active,Boolean)
            Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_WithPreviousER,Boolean)
            If (Original_ParameterId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_ParameterId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_PositionId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_PositionId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatusId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_MaritalStatusId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_GenderId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_GenderId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_TimeSourceId,Integer)
            If (Original_CostCenterId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_CostCenterId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_DepartmentId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup1Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_CustomGroup1Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup2Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_CustomGroup2Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup3Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_CustomGroup3Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomField1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_CustomField1,String)
            End If
            If (Original_CustomField2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_CustomField2,String)
            End If
            If (Original_CustomField3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_CustomField3,String)
            End If
            If (Original_PayElementScheduleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_PayElementScheduleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_EmailAddress,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_IsSSS,Boolean)
            Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_IsTax,Boolean)
            Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_IsPHIC,Boolean)
            Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_IsHDMF,Boolean)
            Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_IsUnion,Boolean)
            Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_IsEmailPayslip,Boolean)
            If (Original_PayslipPassword Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_PayslipPassword,String)
            End If
            If (Original_DateEffective.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_DateEffective.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(129).Value = CType(Original_System,Boolean)
            If (Original_LocationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(Original_LocationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_VersionNo,Integer)
            If (Original_PayGroupId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_PayGroupId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_MobileNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_MobileNo,String)
            End If
            If (Original_DevicePassword Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_DevicePassword,String)
            End If
            If (Original_LeaveAccrualScheduleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_LeaveAccrualScheduleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractStartDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_ContractStartDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractEndDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_ContractEndDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_DaysInYear.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_DaysInYear.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_SupervisorId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_SupervisorId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(149).Value = CType(Original_WTaxExempt,Boolean)
            If (Original_MaxTaxableEarning.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(Original_MaxTaxableEarning.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Original_TINBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(Original_TINBranch,String)
            End If
            If (Original_ClassId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(Original_ClassId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            If (Original_MinNetPayForLoan.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(Original_MinNetPayForLoan.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            If (Original_MinNetPayForLoanTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(Original_MinNetPayForLoanTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovingId1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(Original_ApprovingId1.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovingId2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(Original_ApprovingId2.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = Global.System.DBNull.Value
            End If
            If (Original_EWTRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(Original_EWTRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            If (Original_SecurityUserLevelId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(Original_SecurityUserLevelId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_SecurityUserGroupId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(Original_SecurityUserGroupId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(170).Value = CType(Original_IsProcessed,Boolean)
            Me.Adapter.DeleteCommand.Parameters(171).Value = CType(Original_IsCleared,Boolean)
            If (Original_DateCleared.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(Original_DateCleared.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeePassword Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(Original_EmployeePassword,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(176).Value = CType(Original_IsClosed,Boolean)
            If (Original_WebkioskRoleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(Original_WebkioskRoleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_TeamId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(Original_TeamId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            If (Original_RegionId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(Original_RegionId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(Original_Remarks,String)
            End If
            If (Original_MotherMaidenName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(Original_MotherMaidenName,String)
            End If
            If (Original_AlphanumericTaxCodeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(Original_AlphanumericTaxCodeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = Global.System.DBNull.Value
            End If
            If (Original_ResidenceStatusCodeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(Original_ResidenceStatusCodeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = Global.System.DBNull.Value
            End If
            If (Original_WebkioskLoginFailedAttempt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(Original_WebkioskLoginFailedAttempt.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(193).Value = CType(Original_IsMainEmployer,Boolean)
            If (Original_Nickname Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = CType(Original_Nickname,String)
            End If
            If (Original_EmployeePasswordDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(Original_EmployeePasswordDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(198).Value = CType(Original_IsSubstitutedFiling,Boolean)
            If (Original_PayslipPasswordDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(Original_PayslipPasswordDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(200).Value = Global.System.DBNull.Value
            End If
            If (Original_SalutationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(Original_SalutationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(202).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(203).Value = CType(Original_IsHusband,Boolean)
            If (Original_YearSeparated.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = CType(Original_YearSeparated.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = Global.System.DBNull.Value
            End If
            If (Original_RemarksEmploymentInformation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = CType(Original_RemarksEmploymentInformation,String)
            End If
            If (Original_LeaveForfeitScheduleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = CType(Original_LeaveForfeitScheduleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = Global.System.DBNull.Value
            End If
            If (Original_PayoutTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = CType(Original_PayoutTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = Global.System.DBNull.Value
            End If
            If (Original_CitizenshipId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = CType(Original_CitizenshipId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup4Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = CType(Original_CustomGroup4Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup5Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = CType(Original_CustomGroup5Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup6Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(Original_CustomGroup6Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup7Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(Original_CustomGroup7Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup8Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(Original_CustomGroup8Id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(Original_CustomDateField1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(Original_CustomDateField2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(Original_CustomDateField3.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(Original_CustomDateField4.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(Original_CustomDateField5.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomField4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(Original_CustomField4,String)
            End If
            If (Original_CustomField5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(237).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(Original_CustomField5,String)
            End If
            If (Original_CustomField6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(239).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(Original_CustomField6,String)
            End If
            If (Original_CustomField7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(241).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(Original_CustomField7,String)
            End If
            If (Original_CustomField8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(243).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(Original_CustomField8,String)
            End If
            If (Original_SeparationPayTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(Original_SeparationPayTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(245).Value = Global.System.DBNull.Value
            End If
            If (Original_ShiftScheduleTemplateGroupId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(Original_ShiftScheduleTemplateGroupId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(247).Value = Global.System.DBNull.Value
            End If
            If (Original_DateFiledofResignation.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(Original_DateFiledofResignation.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(249).Value = Global.System.DBNull.Value
            End If
            If (Original_ReasonForLeaving Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(251).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(Original_ReasonForLeaving,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(252).Value = CType(Original_IsRehirable,Boolean)
            If (Original_ClearanceStatusId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = CType(Original_ClearanceStatusId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = Global.System.DBNull.Value
            End If
            If (Original_ClearanceIssuedById.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = CType(Original_ClearanceIssuedById.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = Global.System.DBNull.Value
            End If
            If (Original_WaiverAndQuitclaimFinalPay.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(257).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(258).Value = CType(Original_WaiverAndQuitclaimFinalPay.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(257).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(258).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(259).Value = CType(Original_IsReleasedWaiverAndQuitclaim,Boolean)
            If (Original_WaiverAndQuitclaimDateReleased.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(261).Value = CType(Original_WaiverAndQuitclaimDateReleased.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(261).Value = Global.System.DBNull.Value
            End If
            If (Original_WaiverAndQuitclaimReleasedById.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(263).Value = CType(Original_WaiverAndQuitclaimReleasedById.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(263).Value = Global.System.DBNull.Value
            End If
            If (Original_CardNum Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(265).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(265).Value = CType(Original_CardNum,String)
            End If
            If (Original_ReasonForLeavingType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(267).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(267).Value = CType(Original_ReasonForLeavingType,String)
            End If
            If (Original_HDMFID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(268).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(269).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(268).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(269).Value = CType(Original_HDMFID,String)
            End If
            If (Original_Lineage Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(270).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(271).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(270).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(271).Value = CType(Original_Lineage,String)
            End If
            If (Original_LineageDepth.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(272).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(273).Value = CType(Original_LineageDepth.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(272).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(273).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyBranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(274).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(275).Value = CType(Original_CompanyBranchId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(274).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(275).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(276).Value = CType(Original_AllocationPayoutNo,Integer)
            Me.Adapter.DeleteCommand.Parameters(277).Value = CType(Original_AllocationTypeId,Integer)
            Me.Adapter.DeleteCommand.Parameters(278).Value = CType(Original_AllocationValue,Decimal)
            If (Original_PayrollAccountBranchCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(279).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(280).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(279).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(280).Value = CType(Original_PayrollAccountBranchCode,String)
            End If
            If (Original_AddressRegistered Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(281).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(282).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(281).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(282).Value = CType(Original_AddressRegistered,String)
            End If
            If (Original_AddressLocal Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(283).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(284).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(283).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(284).Value = CType(Original_AddressLocal,String)
            End If
            If (Original_CTCNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(285).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(286).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(285).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(286).Value = CType(Original_CTCNo,String)
            End If
            If (Original_CustomDateField6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(287).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(288).Value = CType(Original_CustomDateField6.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(287).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(288).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField7.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(289).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(290).Value = CType(Original_CustomDateField7.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(289).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(290).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(291).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(292).Value = CType(Original_CustomDateField8.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(291).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(292).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(293).Value = CType(Original_CustomCheckbox1,Boolean)
            Me.Adapter.DeleteCommand.Parameters(294).Value = CType(Original_CustomCheckbox2,Boolean)
            Me.Adapter.DeleteCommand.Parameters(295).Value = CType(Original_CustomCheckbox3,Boolean)
            Me.Adapter.DeleteCommand.Parameters(296).Value = CType(Original_CustomCheckbox4,Boolean)
            Me.Adapter.DeleteCommand.Parameters(297).Value = CType(Original_CustomCheckbox5,Boolean)
            Me.Adapter.DeleteCommand.Parameters(298).Value = CType(Original_CustomCheckbox6,Boolean)
            Me.Adapter.DeleteCommand.Parameters(299).Value = CType(Original_CustomCheckbox7,Boolean)
            Me.Adapter.DeleteCommand.Parameters(300).Value = CType(Original_CustomCheckbox8,Boolean)
            If (Original_BackPayCoverageFromDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(301).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(302).Value = CType(Original_BackPayCoverageFromDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(301).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(302).Value = Global.System.DBNull.Value
            End If
            If (Original_BackPayCoverageToDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(303).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(304).Value = CType(Original_BackPayCoverageToDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(303).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(304).Value = Global.System.DBNull.Value
            End If
            If (Original_PlainSSSNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(305).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(306).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(305).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(306).Value = CType(Original_PlainSSSNo,String)
            End If
            If (Original_MinTakeHomePayBasisId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(307).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(308).Value = CType(Original_MinTakeHomePayBasisId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(307).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(308).Value = Global.System.DBNull.Value
            End If
            If (Original_SuffixId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(309).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(310).Value = CType(Original_SuffixId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(309).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(310).Value = Global.System.DBNull.Value
            End If
            If (Original_ConcurrentEmployerName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(311).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(312).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(311).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(312).Value = CType(Original_ConcurrentEmployerName,String)
            End If
            If (Original_ConcurrentEmployerTIN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(313).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(314).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(313).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(314).Value = CType(Original_ConcurrentEmployerTIN,String)
            End If
            If (Original_ConcurrentEmployerTINBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(315).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(316).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(315).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(316).Value = CType(Original_ConcurrentEmployerTINBranch,String)
            End If
            If (Original_DateEffectivityBasis.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(317).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(318).Value = CType(Original_DateEffectivityBasis.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(317).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(318).Value = Global.System.DBNull.Value
            End If
            If (Original_FormalName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FormalName")
            Else
                Me.Adapter.DeleteCommand.Parameters(319).Value = CType(Original_FormalName,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(320).Value = CType(Original_Name,String)
            End If
            If (Original_FullName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FullName")
            Else
                Me.Adapter.DeleteCommand.Parameters(321).Value = CType(Original_FullName,String)
            End If
            If (Original_ReasonForSeparationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(322).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(323).Value = CType(Original_ReasonForSeparationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(322).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(323).Value = Global.System.DBNull.Value
            End If
            If (Original_NationalityId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(324).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(325).Value = CType(Original_NationalityId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(324).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(325).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CompanyId As Integer,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccessCode As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal AddressForeign As String,  _
                    ByVal ZIPCodeAR As String,  _
                    ByVal ZIPCodeAL As String,  _
                    ByVal ZIPCodeAF As String,  _
                    ByVal TelNo As String,  _
                    ByVal TINNo As String,  _
                    ByVal BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal BankAccountNo As String,  _
                    ByVal BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal SSSNo As String,  _
                    ByVal PagIbigNo As String,  _
                    ByVal PhilHealthNo As String,  _
                    ByVal IsWife As Boolean,  _
                    ByVal RDOCode As String,  _
                    ByVal BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal DateHired As Global.System.Nullable(Of Date),  _
                    ByVal DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal PaymentTypeId As Integer,  _
                    ByVal PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Rate As Double,  _
                    ByVal MonthlyRate As Double,  _
                    ByVal PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal DailyRate As Double,  _
                    ByVal PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal HourlyRate As Double,  _
                    ByVal PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Allowance As Double,  _
                    ByVal MonthlyAllowance As Double,  _
                    ByVal PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal DailyAllowance As Double,  _
                    ByVal PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal HourlyAllowance As Double,  _
                    ByVal PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal COLA As Double,  _
                    ByVal MonthlyCOLA As Double,  _
                    ByVal DailyCOLA As Double,  _
                    ByVal HourlyCOLA As Double,  _
                    ByVal FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Active As Boolean,  _
                    ByVal WithPreviousER As Boolean,  _
                    ByVal ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal TimeSourceId As Integer,  _
                    ByVal Picture() As Byte,  _
                    ByVal CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmailAddress As String,  _
                    ByVal IsSSS As Boolean,  _
                    ByVal IsTax As Boolean,  _
                    ByVal IsPHIC As Boolean,  _
                    ByVal IsHDMF As Boolean,  _
                    ByVal IsUnion As Boolean,  _
                    ByVal IsEmailPayslip As Boolean,  _
                    ByVal PayslipPassword As String,  _
                    ByVal DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal System As Boolean,  _
                    ByVal LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal VersionNo As Integer,  _
                    ByVal PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal MobileNo As String,  _
                    ByVal DevicePassword As String,  _
                    ByVal LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal WTaxExempt As Boolean,  _
                    ByVal MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal TINBranch As String,  _
                    ByVal ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal IsProcessed As Boolean,  _
                    ByVal IsCleared As Boolean,  _
                    ByVal DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal EmployeePassword As String,  _
                    ByVal IsClosed As Boolean,  _
                    ByVal WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Remarks As String,  _
                    ByVal MotherMaidenName As String,  _
                    ByVal AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal IsMainEmployer As Boolean,  _
                    ByVal Nickname As String,  _
                    ByVal EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal IsSubstitutedFiling As Boolean,  _
                    ByVal PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal IsHusband As Boolean,  _
                    ByVal RemarksEmploymentInformation As String,  _
                    ByVal LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal ReasonForLeaving As String,  _
                    ByVal IsRehirable As Boolean,  _
                    ByVal ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal CardNum As String,  _
                    ByVal ReasonForLeavingType As String,  _
                    ByVal HDMFID As String,  _
                    ByVal Lineage As String,  _
                    ByVal LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal AllocationPayoutNo As Integer,  _
                    ByVal AllocationTypeId As Integer,  _
                    ByVal AllocationValue As Decimal,  _
                    ByVal PayrollAccountBranchCode As String,  _
                    ByVal CTCNo As String,  _
                    ByVal CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal CustomCheckbox1 As Boolean,  _
                    ByVal CustomCheckbox2 As Boolean,  _
                    ByVal CustomCheckbox3 As Boolean,  _
                    ByVal CustomCheckbox4 As Boolean,  _
                    ByVal CustomCheckbox5 As Boolean,  _
                    ByVal CustomCheckbox6 As Boolean,  _
                    ByVal CustomCheckbox7 As Boolean,  _
                    ByVal CustomCheckbox8 As Boolean,  _
                    ByVal BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal ConcurrentEmployerName As String,  _
                    ByVal ConcurrentEmployerTIN As String,  _
                    ByVal ConcurrentEmployerTINBranch As String,  _
                    ByVal DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CompanyId,Integer)
            If (EmployeeCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(EmployeeCode,String)
            End If
            If (AccessCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AccessCode,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LastName,String)
            End If
            If (AddressForeign Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AddressForeign,String)
            End If
            If (ZIPCodeAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ZIPCodeAR,String)
            End If
            If (ZIPCodeAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ZIPCodeAL,String)
            End If
            If (ZIPCodeAF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ZIPCodeAF,String)
            End If
            If (TelNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TelNo,String)
            End If
            If (TINNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TINNo,String)
            End If
            If (BankAccountId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BankAccountId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BankAccountNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BankAccountNo,String)
            End If
            If (BankAccountTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BankAccountTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SSSNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SSSNo,String)
            End If
            If (PagIbigNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PagIbigNo,String)
            End If
            If (PhilHealthNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PhilHealthNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(IsWife,Boolean)
            If (RDOCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RDOCode,String)
            End If
            If (BirthDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BirthDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (DateHired.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(DateHired.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (DateSeparated.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(DateSeparated.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (DateRegular.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(DateRegular.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (YearWithPreviousER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(YearWithPreviousER.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ShiftScheduleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ShiftScheduleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (EmploymentTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(EmploymentTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(PaymentTypeId,Integer)
            If (PayrollFrequencyId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PayrollFrequencyId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TaxCodeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(TaxCodeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PreviousRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PreviousRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(Rate,Double)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(MonthlyRate,Double)
            If (PreviousMonthlyRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PreviousMonthlyRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(DailyRate,Double)
            If (PreviousDailyRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PreviousDailyRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(HourlyRate,Double)
            If (PreviousHourlyRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PreviousHourlyRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (PreviousAllowance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(PreviousAllowance.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(Allowance,Double)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(MonthlyAllowance,Double)
            If (PreviousMonthlyAllowance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(PreviousMonthlyAllowance.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(DailyAllowance,Double)
            If (PreviousDailyAllowance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(PreviousDailyAllowance.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(HourlyAllowance,Double)
            If (PreviousHourlyAllowance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(PreviousHourlyAllowance.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(COLA,Double)
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(MonthlyCOLA,Double)
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(DailyCOLA,Double)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(HourlyCOLA,Double)
            If (FixTaxRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(FixTaxRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(Active,Boolean)
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(WithPreviousER,Boolean)
            If (ParameterId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(ParameterId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (PositionId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(PositionId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatusId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(MaritalStatusId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (GenderId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(GenderId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(57).Value = CType(TimeSourceId,Integer)
            If (Picture Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Picture,Byte())
            End If
            If (CostCenterId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(CostCenterId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(DepartmentId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup1Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(CustomGroup1Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup2Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(CustomGroup2Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup3Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CustomGroup3Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (CustomField1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(CustomField1,String)
            End If
            If (CustomField2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(CustomField2,String)
            End If
            If (CustomField3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(CustomField3,String)
            End If
            If (PayElementScheduleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(PayElementScheduleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(EmailAddress,String)
            End If
            Me.Adapter.InsertCommand.Parameters(69).Value = CType(IsSSS,Boolean)
            Me.Adapter.InsertCommand.Parameters(70).Value = CType(IsTax,Boolean)
            Me.Adapter.InsertCommand.Parameters(71).Value = CType(IsPHIC,Boolean)
            Me.Adapter.InsertCommand.Parameters(72).Value = CType(IsHDMF,Boolean)
            Me.Adapter.InsertCommand.Parameters(73).Value = CType(IsUnion,Boolean)
            Me.Adapter.InsertCommand.Parameters(74).Value = CType(IsEmailPayslip,Boolean)
            If (PayslipPassword Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(PayslipPassword,String)
            End If
            If (DateEffective.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(DateEffective.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(77).Value = CType(System,Boolean)
            If (LocationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(LocationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(79).Value = CType(VersionNo,Integer)
            If (PayGroupId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(PayGroupId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (MobileNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(MobileNo,String)
            End If
            If (DevicePassword Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(DevicePassword,String)
            End If
            If (LeaveAccrualScheduleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(LeaveAccrualScheduleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (ContractStartDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(ContractStartDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (ContractEndDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(ContractEndDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (DaysInYear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(DaysInYear.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (SupervisorId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(SupervisorId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(88).Value = CType(WTaxExempt,Boolean)
            If (MaxTaxableEarning.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(MaxTaxableEarning.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (TINBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(TINBranch,String)
            End If
            If (ClassId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(ClassId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (MinNetPayForLoan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(MinNetPayForLoan.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (MinNetPayForLoanTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(MinNetPayForLoanTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (ApprovingId1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(ApprovingId1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (ApprovingId2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(ApprovingId2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (EWTRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(EWTRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (SecurityUserLevelId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(SecurityUserLevelId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (SecurityUserGroupId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(SecurityUserGroupId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(99).Value = CType(IsProcessed,Boolean)
            Me.Adapter.InsertCommand.Parameters(100).Value = CType(IsCleared,Boolean)
            If (DateCleared.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(DateCleared.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (EmployeePassword Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(EmployeePassword,String)
            End If
            Me.Adapter.InsertCommand.Parameters(103).Value = CType(IsClosed,Boolean)
            If (WebkioskRoleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(WebkioskRoleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (TeamId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(TeamId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (RegionId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(RegionId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(Remarks,String)
            End If
            If (MotherMaidenName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(MotherMaidenName,String)
            End If
            If (AlphanumericTaxCodeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(AlphanumericTaxCodeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (ResidenceStatusCodeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(ResidenceStatusCodeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (WebkioskLoginFailedAttempt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(WebkioskLoginFailedAttempt.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(112).Value = CType(IsMainEmployer,Boolean)
            If (Nickname Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(Nickname,String)
            End If
            If (EmployeePasswordDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(EmployeePasswordDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(115).Value = CType(IsSubstitutedFiling,Boolean)
            If (PayslipPasswordDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(PayslipPasswordDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (SalutationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(SalutationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(118).Value = CType(IsHusband,Boolean)
            If (RemarksEmploymentInformation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(RemarksEmploymentInformation,String)
            End If
            If (LeaveForfeitScheduleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(LeaveForfeitScheduleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (PayoutTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(PayoutTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (CitizenshipId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(CitizenshipId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup4Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(CustomGroup4Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup5Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(CustomGroup5Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup6Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(CustomGroup6Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup7Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(CustomGroup7Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup8Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(CustomGroup8Id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(CustomDateField1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(CustomDateField2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(CustomDateField3.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(CustomDateField4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(CustomDateField5.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (CustomField4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(133).Value = CType(CustomField4,String)
            End If
            If (CustomField5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(134).Value = CType(CustomField5,String)
            End If
            If (CustomField6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(135).Value = CType(CustomField6,String)
            End If
            If (CustomField7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(136).Value = CType(CustomField7,String)
            End If
            If (CustomField8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(137).Value = CType(CustomField8,String)
            End If
            If (SeparationPayTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(138).Value = CType(SeparationPayTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (ShiftScheduleTemplateGroupId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(139).Value = CType(ShiftScheduleTemplateGroupId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (DateFiledofResignation.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(140).Value = CType(DateFiledofResignation.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (ReasonForLeaving Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(141).Value = CType(ReasonForLeaving,String)
            End If
            Me.Adapter.InsertCommand.Parameters(142).Value = CType(IsRehirable,Boolean)
            If (ClearanceStatusId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(143).Value = CType(ClearanceStatusId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (ClearanceIssuedById.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(144).Value = CType(ClearanceIssuedById.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (WaiverAndQuitclaimFinalPay.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(145).Value = CType(WaiverAndQuitclaimFinalPay.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(146).Value = CType(IsReleasedWaiverAndQuitclaim,Boolean)
            If (WaiverAndQuitclaimDateReleased.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(147).Value = CType(WaiverAndQuitclaimDateReleased.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (WaiverAndQuitclaimReleasedById.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(148).Value = CType(WaiverAndQuitclaimReleasedById.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (CardNum Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(149).Value = CType(CardNum,String)
            End If
            If (ReasonForLeavingType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(150).Value = CType(ReasonForLeavingType,String)
            End If
            If (HDMFID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(151).Value = CType(HDMFID,String)
            End If
            If (Lineage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(152).Value = CType(Lineage,String)
            End If
            If (LineageDepth.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(153).Value = CType(LineageDepth.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (CompanyBranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(154).Value = CType(CompanyBranchId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(155).Value = CType(AllocationPayoutNo,Integer)
            Me.Adapter.InsertCommand.Parameters(156).Value = CType(AllocationTypeId,Integer)
            Me.Adapter.InsertCommand.Parameters(157).Value = CType(AllocationValue,Decimal)
            If (PayrollAccountBranchCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(158).Value = CType(PayrollAccountBranchCode,String)
            End If
            If (CTCNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(159).Value = CType(CTCNo,String)
            End If
            If (CustomDateField6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(160).Value = CType(CustomDateField6.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(161).Value = CType(CustomDateField7.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(162).Value = CType(CustomDateField8.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(163).Value = CType(CustomCheckbox1,Boolean)
            Me.Adapter.InsertCommand.Parameters(164).Value = CType(CustomCheckbox2,Boolean)
            Me.Adapter.InsertCommand.Parameters(165).Value = CType(CustomCheckbox3,Boolean)
            Me.Adapter.InsertCommand.Parameters(166).Value = CType(CustomCheckbox4,Boolean)
            Me.Adapter.InsertCommand.Parameters(167).Value = CType(CustomCheckbox5,Boolean)
            Me.Adapter.InsertCommand.Parameters(168).Value = CType(CustomCheckbox6,Boolean)
            Me.Adapter.InsertCommand.Parameters(169).Value = CType(CustomCheckbox7,Boolean)
            Me.Adapter.InsertCommand.Parameters(170).Value = CType(CustomCheckbox8,Boolean)
            If (BackPayCoverageFromDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(171).Value = CType(BackPayCoverageFromDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (BackPayCoverageToDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(172).Value = CType(BackPayCoverageToDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (MinTakeHomePayBasisId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(173).Value = CType(MinTakeHomePayBasisId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (SuffixId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(174).Value = CType(SuffixId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (ConcurrentEmployerName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(175).Value = CType(ConcurrentEmployerName,String)
            End If
            If (ConcurrentEmployerTIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(176).Value = CType(ConcurrentEmployerTIN,String)
            End If
            If (ConcurrentEmployerTINBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(177).Value = CType(ConcurrentEmployerTINBranch,String)
            End If
            If (DateEffectivityBasis.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(178).Value = CType(DateEffectivityBasis.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (ReasonForSeparationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(179).Value = CType(ReasonForSeparationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(179).Value = Global.System.DBNull.Value
            End If
            If (NationalityId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(180).Value = CType(NationalityId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CompanyId As Integer,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccessCode As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal AddressForeign As String,  _
                    ByVal ZIPCodeAR As String,  _
                    ByVal ZIPCodeAL As String,  _
                    ByVal ZIPCodeAF As String,  _
                    ByVal TelNo As String,  _
                    ByVal TINNo As String,  _
                    ByVal BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal BankAccountNo As String,  _
                    ByVal BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal SSSNo As String,  _
                    ByVal PagIbigNo As String,  _
                    ByVal PhilHealthNo As String,  _
                    ByVal IsWife As Boolean,  _
                    ByVal RDOCode As String,  _
                    ByVal BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal DateHired As Global.System.Nullable(Of Date),  _
                    ByVal DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal PaymentTypeId As Integer,  _
                    ByVal PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Rate As Double,  _
                    ByVal MonthlyRate As Double,  _
                    ByVal PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal DailyRate As Double,  _
                    ByVal PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal HourlyRate As Double,  _
                    ByVal PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Allowance As Double,  _
                    ByVal MonthlyAllowance As Double,  _
                    ByVal PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal DailyAllowance As Double,  _
                    ByVal PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal HourlyAllowance As Double,  _
                    ByVal PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal COLA As Double,  _
                    ByVal MonthlyCOLA As Double,  _
                    ByVal DailyCOLA As Double,  _
                    ByVal HourlyCOLA As Double,  _
                    ByVal FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Active As Boolean,  _
                    ByVal WithPreviousER As Boolean,  _
                    ByVal ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal TimeSourceId As Integer,  _
                    ByVal Picture() As Byte,  _
                    ByVal CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmailAddress As String,  _
                    ByVal IsSSS As Boolean,  _
                    ByVal IsTax As Boolean,  _
                    ByVal IsPHIC As Boolean,  _
                    ByVal IsHDMF As Boolean,  _
                    ByVal IsUnion As Boolean,  _
                    ByVal IsEmailPayslip As Boolean,  _
                    ByVal PayslipPassword As String,  _
                    ByVal DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal System As Boolean,  _
                    ByVal LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal VersionNo As Integer,  _
                    ByVal PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal MobileNo As String,  _
                    ByVal DevicePassword As String,  _
                    ByVal LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal WTaxExempt As Boolean,  _
                    ByVal MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal TINBranch As String,  _
                    ByVal ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal IsProcessed As Boolean,  _
                    ByVal IsCleared As Boolean,  _
                    ByVal DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal EmployeePassword As String,  _
                    ByVal IsClosed As Boolean,  _
                    ByVal WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Remarks As String,  _
                    ByVal MotherMaidenName As String,  _
                    ByVal AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal IsMainEmployer As Boolean,  _
                    ByVal Nickname As String,  _
                    ByVal EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal IsSubstitutedFiling As Boolean,  _
                    ByVal PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal IsHusband As Boolean,  _
                    ByVal RemarksEmploymentInformation As String,  _
                    ByVal LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal ReasonForLeaving As String,  _
                    ByVal IsRehirable As Boolean,  _
                    ByVal ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal CardNum As String,  _
                    ByVal ReasonForLeavingType As String,  _
                    ByVal HDMFID As String,  _
                    ByVal Lineage As String,  _
                    ByVal LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal AllocationPayoutNo As Integer,  _
                    ByVal AllocationTypeId As Integer,  _
                    ByVal AllocationValue As Decimal,  _
                    ByVal PayrollAccountBranchCode As String,  _
                    ByVal CTCNo As String,  _
                    ByVal CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal CustomCheckbox1 As Boolean,  _
                    ByVal CustomCheckbox2 As Boolean,  _
                    ByVal CustomCheckbox3 As Boolean,  _
                    ByVal CustomCheckbox4 As Boolean,  _
                    ByVal CustomCheckbox5 As Boolean,  _
                    ByVal CustomCheckbox6 As Boolean,  _
                    ByVal CustomCheckbox7 As Boolean,  _
                    ByVal CustomCheckbox8 As Boolean,  _
                    ByVal BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal ConcurrentEmployerName As String,  _
                    ByVal ConcurrentEmployerTIN As String,  _
                    ByVal ConcurrentEmployerTINBranch As String,  _
                    ByVal DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_CompanyId As Integer,  _
                    ByVal Original_EmployeeCode As String,  _
                    ByVal Original_AccessCode As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_AddressForeign As String,  _
                    ByVal Original_ZIPCodeAR As String,  _
                    ByVal Original_ZIPCodeAL As String,  _
                    ByVal Original_ZIPCodeAF As String,  _
                    ByVal Original_TelNo As String,  _
                    ByVal Original_TINNo As String,  _
                    ByVal Original_BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BankAccountNo As String,  _
                    ByVal Original_BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SSSNo As String,  _
                    ByVal Original_PagIbigNo As String,  _
                    ByVal Original_PhilHealthNo As String,  _
                    ByVal Original_IsWife As Boolean,  _
                    ByVal Original_RDOCode As String,  _
                    ByVal Original_BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateHired As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal Original_YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PaymentTypeId As Integer,  _
                    ByVal Original_PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rate As Double,  _
                    ByVal Original_MonthlyRate As Double,  _
                    ByVal Original_PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyRate As Double,  _
                    ByVal Original_PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyRate As Double,  _
                    ByVal Original_PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_Allowance As Double,  _
                    ByVal Original_MonthlyAllowance As Double,  _
                    ByVal Original_PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyAllowance As Double,  _
                    ByVal Original_PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyAllowance As Double,  _
                    ByVal Original_PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_COLA As Double,  _
                    ByVal Original_MonthlyCOLA As Double,  _
                    ByVal Original_DailyCOLA As Double,  _
                    ByVal Original_HourlyCOLA As Double,  _
                    ByVal Original_FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Active As Boolean,  _
                    ByVal Original_WithPreviousER As Boolean,  _
                    ByVal Original_ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TimeSourceId As Integer,  _
                    ByVal Original_CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Original_IsSSS As Boolean,  _
                    ByVal Original_IsTax As Boolean,  _
                    ByVal Original_IsPHIC As Boolean,  _
                    ByVal Original_IsHDMF As Boolean,  _
                    ByVal Original_IsUnion As Boolean,  _
                    ByVal Original_IsEmailPayslip As Boolean,  _
                    ByVal Original_PayslipPassword As String,  _
                    ByVal Original_DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal Original_System As Boolean,  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VersionNo As Integer,  _
                    ByVal Original_PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MobileNo As String,  _
                    ByVal Original_DevicePassword As String,  _
                    ByVal Original_LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WTaxExempt As Boolean,  _
                    ByVal Original_MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TINBranch As String,  _
                    ByVal Original_ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal Original_MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsProcessed As Boolean,  _
                    ByVal Original_IsCleared As Boolean,  _
                    ByVal Original_DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal Original_EmployeePassword As String,  _
                    ByVal Original_IsClosed As Boolean,  _
                    ByVal Original_WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_MotherMaidenName As String,  _
                    ByVal Original_AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsMainEmployer As Boolean,  _
                    ByVal Original_Nickname As String,  _
                    ByVal Original_EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsSubstitutedFiling As Boolean,  _
                    ByVal Original_PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsHusband As Boolean,  _
                    ByVal Original_YearSeparated As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RemarksEmploymentInformation As String,  _
                    ByVal Original_LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReasonForLeaving As String,  _
                    ByVal Original_IsRehirable As Boolean,  _
                    ByVal Original_ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal Original_WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal Original_WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CardNum As String,  _
                    ByVal Original_ReasonForLeavingType As String,  _
                    ByVal Original_HDMFID As String,  _
                    ByVal Original_Lineage As String,  _
                    ByVal Original_LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AllocationPayoutNo As Integer,  _
                    ByVal Original_AllocationTypeId As Integer,  _
                    ByVal Original_AllocationValue As Decimal,  _
                    ByVal Original_PayrollAccountBranchCode As String,  _
                    ByVal Original_AddressRegistered As String,  _
                    ByVal Original_AddressLocal As String,  _
                    ByVal Original_CTCNo As String,  _
                    ByVal Original_CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomCheckbox1 As Boolean,  _
                    ByVal Original_CustomCheckbox2 As Boolean,  _
                    ByVal Original_CustomCheckbox3 As Boolean,  _
                    ByVal Original_CustomCheckbox4 As Boolean,  _
                    ByVal Original_CustomCheckbox5 As Boolean,  _
                    ByVal Original_CustomCheckbox6 As Boolean,  _
                    ByVal Original_CustomCheckbox7 As Boolean,  _
                    ByVal Original_CustomCheckbox8 As Boolean,  _
                    ByVal Original_BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PlainSSSNo As String,  _
                    ByVal Original_MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ConcurrentEmployerName As String,  _
                    ByVal Original_ConcurrentEmployerTIN As String,  _
                    ByVal Original_ConcurrentEmployerTINBranch As String,  _
                    ByVal Original_DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FormalName As String,  _
                    ByVal Original_Name As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Id As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CompanyId,Integer)
            If (EmployeeCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(EmployeeCode,String)
            End If
            If (AccessCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AccessCode,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(LastName,String)
            End If
            If (AddressForeign Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(AddressForeign,String)
            End If
            If (ZIPCodeAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ZIPCodeAR,String)
            End If
            If (ZIPCodeAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ZIPCodeAL,String)
            End If
            If (ZIPCodeAF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ZIPCodeAF,String)
            End If
            If (TelNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TelNo,String)
            End If
            If (TINNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TINNo,String)
            End If
            If (BankAccountId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(BankAccountId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BankAccountNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(BankAccountNo,String)
            End If
            If (BankAccountTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(BankAccountTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SSSNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SSSNo,String)
            End If
            If (PagIbigNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(PagIbigNo,String)
            End If
            If (PhilHealthNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PhilHealthNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(IsWife,Boolean)
            If (RDOCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RDOCode,String)
            End If
            If (BirthDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BirthDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (DateHired.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(DateHired.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (DateSeparated.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(DateSeparated.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (DateRegular.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(DateRegular.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (YearWithPreviousER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(YearWithPreviousER.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ShiftScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ShiftScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (EmploymentTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(EmploymentTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PaymentTypeId,Integer)
            If (PayrollFrequencyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(PayrollFrequencyId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TaxCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(TaxCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PreviousRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(PreviousRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Rate,Double)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(MonthlyRate,Double)
            If (PreviousMonthlyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PreviousMonthlyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DailyRate,Double)
            If (PreviousDailyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PreviousDailyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(HourlyRate,Double)
            If (PreviousHourlyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(PreviousHourlyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (PreviousAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(PreviousAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Allowance,Double)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(MonthlyAllowance,Double)
            If (PreviousMonthlyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(PreviousMonthlyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(DailyAllowance,Double)
            If (PreviousDailyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(PreviousDailyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(HourlyAllowance,Double)
            If (PreviousHourlyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(PreviousHourlyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(COLA,Double)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(MonthlyCOLA,Double)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(DailyCOLA,Double)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(HourlyCOLA,Double)
            If (FixTaxRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(FixTaxRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(WithPreviousER,Boolean)
            If (ParameterId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(ParameterId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (PositionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(PositionId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(MaritalStatusId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (GenderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(GenderId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(TimeSourceId,Integer)
            If (Picture Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Picture,Byte())
            End If
            If (CostCenterId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(CostCenterId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(DepartmentId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup1Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(CustomGroup1Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup2Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(CustomGroup2Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup3Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(CustomGroup3Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (CustomField1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(CustomField1,String)
            End If
            If (CustomField2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(CustomField2,String)
            End If
            If (CustomField3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(CustomField3,String)
            End If
            If (PayElementScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(PayElementScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(EmailAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(IsSSS,Boolean)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(IsTax,Boolean)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(IsPHIC,Boolean)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(IsHDMF,Boolean)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(IsUnion,Boolean)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(IsEmailPayslip,Boolean)
            If (PayslipPassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(PayslipPassword,String)
            End If
            If (DateEffective.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(DateEffective.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(System,Boolean)
            If (LocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(LocationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(VersionNo,Integer)
            If (PayGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(PayGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (MobileNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(MobileNo,String)
            End If
            If (DevicePassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(DevicePassword,String)
            End If
            If (LeaveAccrualScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(LeaveAccrualScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (ContractStartDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(ContractStartDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (ContractEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(ContractEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (DaysInYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(DaysInYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (SupervisorId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(SupervisorId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(WTaxExempt,Boolean)
            If (MaxTaxableEarning.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(MaxTaxableEarning.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (TINBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(TINBranch,String)
            End If
            If (ClassId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(ClassId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (MinNetPayForLoan.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(MinNetPayForLoan.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (MinNetPayForLoanTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(MinNetPayForLoanTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (ApprovingId1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(ApprovingId1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (ApprovingId2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(ApprovingId2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (EWTRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(EWTRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (SecurityUserLevelId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(SecurityUserLevelId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (SecurityUserGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(SecurityUserGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(IsProcessed,Boolean)
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(IsCleared,Boolean)
            If (DateCleared.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(DateCleared.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (EmployeePassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(EmployeePassword,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(IsClosed,Boolean)
            If (WebkioskRoleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(WebkioskRoleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (TeamId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(TeamId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (RegionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(RegionId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Remarks,String)
            End If
            If (MotherMaidenName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(MotherMaidenName,String)
            End If
            If (AlphanumericTaxCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(AlphanumericTaxCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (ResidenceStatusCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(ResidenceStatusCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (WebkioskLoginFailedAttempt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(WebkioskLoginFailedAttempt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(112).Value = CType(IsMainEmployer,Boolean)
            If (Nickname Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Nickname,String)
            End If
            If (EmployeePasswordDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(EmployeePasswordDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(115).Value = CType(IsSubstitutedFiling,Boolean)
            If (PayslipPasswordDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(PayslipPasswordDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (SalutationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(SalutationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(118).Value = CType(IsHusband,Boolean)
            If (RemarksEmploymentInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(RemarksEmploymentInformation,String)
            End If
            If (LeaveForfeitScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(LeaveForfeitScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (PayoutTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(PayoutTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (CitizenshipId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(CitizenshipId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup4Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(CustomGroup4Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup5Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(CustomGroup5Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup6Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(CustomGroup6Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup7Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(CustomGroup7Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (CustomGroup8Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(CustomGroup8Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(CustomDateField1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(CustomDateField2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(CustomDateField3.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(CustomDateField4.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(CustomDateField5.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (CustomField4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(CustomField4,String)
            End If
            If (CustomField5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(CustomField5,String)
            End If
            If (CustomField6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(CustomField6,String)
            End If
            If (CustomField7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(CustomField7,String)
            End If
            If (CustomField8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(CustomField8,String)
            End If
            If (SeparationPayTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(SeparationPayTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (ShiftScheduleTemplateGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(ShiftScheduleTemplateGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (DateFiledofResignation.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(DateFiledofResignation.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (ReasonForLeaving Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(ReasonForLeaving,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(142).Value = CType(IsRehirable,Boolean)
            If (ClearanceStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(ClearanceStatusId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (ClearanceIssuedById.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(ClearanceIssuedById.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (WaiverAndQuitclaimFinalPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(WaiverAndQuitclaimFinalPay.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(146).Value = CType(IsReleasedWaiverAndQuitclaim,Boolean)
            If (WaiverAndQuitclaimDateReleased.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(WaiverAndQuitclaimDateReleased.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (WaiverAndQuitclaimReleasedById.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(WaiverAndQuitclaimReleasedById.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (CardNum Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(CardNum,String)
            End If
            If (ReasonForLeavingType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(ReasonForLeavingType,String)
            End If
            If (HDMFID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(HDMFID,String)
            End If
            If (Lineage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Lineage,String)
            End If
            If (LineageDepth.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(LineageDepth.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (CompanyBranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(CompanyBranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(155).Value = CType(AllocationPayoutNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(156).Value = CType(AllocationTypeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(157).Value = CType(AllocationValue,Decimal)
            If (PayrollAccountBranchCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(PayrollAccountBranchCode,String)
            End If
            If (CTCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(CTCNo,String)
            End If
            If (CustomDateField6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(CustomDateField6.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(CustomDateField7.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (CustomDateField8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(CustomDateField8.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(163).Value = CType(CustomCheckbox1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(164).Value = CType(CustomCheckbox2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(165).Value = CType(CustomCheckbox3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(166).Value = CType(CustomCheckbox4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(167).Value = CType(CustomCheckbox5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(168).Value = CType(CustomCheckbox6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(169).Value = CType(CustomCheckbox7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(170).Value = CType(CustomCheckbox8,Boolean)
            If (BackPayCoverageFromDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(BackPayCoverageFromDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (BackPayCoverageToDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(BackPayCoverageToDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (MinTakeHomePayBasisId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(MinTakeHomePayBasisId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (SuffixId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(SuffixId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (ConcurrentEmployerName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(ConcurrentEmployerName,String)
            End If
            If (ConcurrentEmployerTIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(ConcurrentEmployerTIN,String)
            End If
            If (ConcurrentEmployerTINBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(ConcurrentEmployerTINBranch,String)
            End If
            If (DateEffectivityBasis.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(DateEffectivityBasis.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (ReasonForSeparationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(ReasonForSeparationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            End If
            If (NationalityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(NationalityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_Id,Integer)
            Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_CompanyId,Integer)
            If (Original_EmployeeCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_EmployeeCode,String)
            End If
            If (Original_AccessCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_AccessCode,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_LastName,String)
            End If
            If (Original_AddressForeign Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_AddressForeign,String)
            End If
            If (Original_ZIPCodeAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_ZIPCodeAR,String)
            End If
            If (Original_ZIPCodeAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_ZIPCodeAL,String)
            End If
            If (Original_ZIPCodeAF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_ZIPCodeAF,String)
            End If
            If (Original_TelNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_TelNo,String)
            End If
            If (Original_TINNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_TINNo,String)
            End If
            If (Original_BankAccountId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_BankAccountId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            End If
            If (Original_BankAccountNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_BankAccountNo,String)
            End If
            If (Original_BankAccountTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_BankAccountTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            End If
            If (Original_SSSNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_SSSNo,String)
            End If
            If (Original_PagIbigNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_PagIbigNo,String)
            End If
            If (Original_PhilHealthNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_PhilHealthNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_IsWife,Boolean)
            If (Original_RDOCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_RDOCode,String)
            End If
            If (Original_BirthDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_BirthDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = Global.System.DBNull.Value
            End If
            If (Original_DateHired.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_DateHired.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            End If
            If (Original_DateSeparated.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(Original_DateSeparated.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = Global.System.DBNull.Value
            End If
            If (Original_DateRegular.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(Original_DateRegular.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = Global.System.DBNull.Value
            End If
            If (Original_YearWithPreviousER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(Original_YearWithPreviousER.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = Global.System.DBNull.Value
            End If
            If (Original_ShiftScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(Original_ShiftScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = Global.System.DBNull.Value
            End If
            If (Original_EmploymentTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(Original_EmploymentTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_PaymentTypeId,Integer)
            If (Original_PayrollFrequencyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_PayrollFrequencyId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            End If
            If (Original_TaxCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_TaxCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            End If
            If (Original_PreviousRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(Original_PreviousRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(241).Value = CType(Original_Rate,Double)
            Me.Adapter.UpdateCommand.Parameters(242).Value = CType(Original_MonthlyRate,Double)
            If (Original_PreviousMonthlyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(Original_PreviousMonthlyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(245).Value = CType(Original_DailyRate,Double)
            If (Original_PreviousDailyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(Original_PreviousDailyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(248).Value = CType(Original_HourlyRate,Double)
            If (Original_PreviousHourlyRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(Original_PreviousHourlyRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = Global.System.DBNull.Value
            End If
            If (Original_PreviousAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(Original_PreviousAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(253).Value = CType(Original_Allowance,Double)
            Me.Adapter.UpdateCommand.Parameters(254).Value = CType(Original_MonthlyAllowance,Double)
            If (Original_PreviousMonthlyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(Original_PreviousMonthlyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(257).Value = CType(Original_DailyAllowance,Double)
            If (Original_PreviousDailyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(Original_PreviousDailyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(260).Value = CType(Original_HourlyAllowance,Double)
            If (Original_PreviousHourlyAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(Original_PreviousHourlyAllowance.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(263).Value = CType(Original_COLA,Double)
            Me.Adapter.UpdateCommand.Parameters(264).Value = CType(Original_MonthlyCOLA,Double)
            Me.Adapter.UpdateCommand.Parameters(265).Value = CType(Original_DailyCOLA,Double)
            Me.Adapter.UpdateCommand.Parameters(266).Value = CType(Original_HourlyCOLA,Double)
            If (Original_FixTaxRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(Original_FixTaxRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(269).Value = CType(Original_Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(270).Value = CType(Original_WithPreviousER,Boolean)
            If (Original_ParameterId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(Original_ParameterId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = Global.System.DBNull.Value
            End If
            If (Original_PositionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(Original_PositionId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(Original_MaritalStatusId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = Global.System.DBNull.Value
            End If
            If (Original_GenderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(Original_GenderId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(279).Value = CType(Original_TimeSourceId,Integer)
            If (Original_CostCenterId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(Original_CostCenterId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = Global.System.DBNull.Value
            End If
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(Original_DepartmentId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup1Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(Original_CustomGroup1Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup2Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(Original_CustomGroup2Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup3Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(Original_CustomGroup3Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomField1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(Original_CustomField1,String)
            End If
            If (Original_CustomField2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(Original_CustomField2,String)
            End If
            If (Original_CustomField3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(Original_CustomField3,String)
            End If
            If (Original_PayElementScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(Original_PayElementScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = Global.System.DBNull.Value
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(Original_EmailAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(300).Value = CType(Original_IsSSS,Boolean)
            Me.Adapter.UpdateCommand.Parameters(301).Value = CType(Original_IsTax,Boolean)
            Me.Adapter.UpdateCommand.Parameters(302).Value = CType(Original_IsPHIC,Boolean)
            Me.Adapter.UpdateCommand.Parameters(303).Value = CType(Original_IsHDMF,Boolean)
            Me.Adapter.UpdateCommand.Parameters(304).Value = CType(Original_IsUnion,Boolean)
            Me.Adapter.UpdateCommand.Parameters(305).Value = CType(Original_IsEmailPayslip,Boolean)
            If (Original_PayslipPassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(Original_PayslipPassword,String)
            End If
            If (Original_DateEffective.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(Original_DateEffective.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(310).Value = CType(Original_System,Boolean)
            If (Original_LocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(Original_LocationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(313).Value = CType(Original_VersionNo,Integer)
            If (Original_PayGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(Original_PayGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = Global.System.DBNull.Value
            End If
            If (Original_MobileNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(Original_MobileNo,String)
            End If
            If (Original_DevicePassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(Original_DevicePassword,String)
            End If
            If (Original_LeaveAccrualScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(Original_LeaveAccrualScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractStartDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(Original_ContractStartDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(Original_ContractEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(325).Value = Global.System.DBNull.Value
            End If
            If (Original_DaysInYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(Original_DaysInYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(327).Value = Global.System.DBNull.Value
            End If
            If (Original_SupervisorId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(Original_SupervisorId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(329).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(330).Value = CType(Original_WTaxExempt,Boolean)
            If (Original_MaxTaxableEarning.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = CType(Original_MaxTaxableEarning.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = Global.System.DBNull.Value
            End If
            If (Original_TINBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = CType(Original_TINBranch,String)
            End If
            If (Original_ClassId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = CType(Original_ClassId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = Global.System.DBNull.Value
            End If
            If (Original_MinNetPayForLoan.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = CType(Original_MinNetPayForLoan.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = Global.System.DBNull.Value
            End If
            If (Original_MinNetPayForLoanTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = CType(Original_MinNetPayForLoanTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovingId1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = CType(Original_ApprovingId1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovingId2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = CType(Original_ApprovingId2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = Global.System.DBNull.Value
            End If
            If (Original_EWTRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = CType(Original_EWTRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = Global.System.DBNull.Value
            End If
            If (Original_SecurityUserLevelId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = CType(Original_SecurityUserLevelId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = Global.System.DBNull.Value
            End If
            If (Original_SecurityUserGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(Original_SecurityUserGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(351).Value = CType(Original_IsProcessed,Boolean)
            Me.Adapter.UpdateCommand.Parameters(352).Value = CType(Original_IsCleared,Boolean)
            If (Original_DateCleared.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(Original_DateCleared.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeePassword Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(Original_EmployeePassword,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(357).Value = CType(Original_IsClosed,Boolean)
            If (Original_WebkioskRoleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = CType(Original_WebkioskRoleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = Global.System.DBNull.Value
            End If
            If (Original_TeamId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = CType(Original_TeamId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = Global.System.DBNull.Value
            End If
            If (Original_RegionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = CType(Original_RegionId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = CType(Original_Remarks,String)
            End If
            If (Original_MotherMaidenName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = CType(Original_MotherMaidenName,String)
            End If
            If (Original_AlphanumericTaxCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = CType(Original_AlphanumericTaxCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = Global.System.DBNull.Value
            End If
            If (Original_ResidenceStatusCodeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = CType(Original_ResidenceStatusCodeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = Global.System.DBNull.Value
            End If
            If (Original_WebkioskLoginFailedAttempt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = CType(Original_WebkioskLoginFailedAttempt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(374).Value = CType(Original_IsMainEmployer,Boolean)
            If (Original_Nickname Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(376).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(Original_Nickname,String)
            End If
            If (Original_EmployeePasswordDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(Original_EmployeePasswordDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(378).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(379).Value = CType(Original_IsSubstitutedFiling,Boolean)
            If (Original_PayslipPasswordDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = CType(Original_PayslipPasswordDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = Global.System.DBNull.Value
            End If
            If (Original_SalutationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = CType(Original_SalutationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(384).Value = CType(Original_IsHusband,Boolean)
            If (Original_YearSeparated.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(Original_YearSeparated.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(386).Value = Global.System.DBNull.Value
            End If
            If (Original_RemarksEmploymentInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(388).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(388).Value = CType(Original_RemarksEmploymentInformation,String)
            End If
            If (Original_LeaveForfeitScheduleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(389).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(390).Value = CType(Original_LeaveForfeitScheduleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(389).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(390).Value = Global.System.DBNull.Value
            End If
            If (Original_PayoutTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(391).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(392).Value = CType(Original_PayoutTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(391).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(392).Value = Global.System.DBNull.Value
            End If
            If (Original_CitizenshipId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(393).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(394).Value = CType(Original_CitizenshipId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(393).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(394).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup4Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(395).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(396).Value = CType(Original_CustomGroup4Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(395).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(396).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup5Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(397).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(398).Value = CType(Original_CustomGroup5Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(397).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(398).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup6Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(399).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(400).Value = CType(Original_CustomGroup6Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(399).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(400).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup7Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(401).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(402).Value = CType(Original_CustomGroup7Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(401).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(402).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomGroup8Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(403).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(404).Value = CType(Original_CustomGroup8Id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(403).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(404).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(405).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(406).Value = CType(Original_CustomDateField1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(405).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(406).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(407).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(408).Value = CType(Original_CustomDateField2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(407).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(408).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(409).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(410).Value = CType(Original_CustomDateField3.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(409).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(410).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(411).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(412).Value = CType(Original_CustomDateField4.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(411).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(412).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(413).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(414).Value = CType(Original_CustomDateField5.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(413).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(414).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomField4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(415).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(416).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(415).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(416).Value = CType(Original_CustomField4,String)
            End If
            If (Original_CustomField5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(417).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(418).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(417).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(418).Value = CType(Original_CustomField5,String)
            End If
            If (Original_CustomField6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(419).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(420).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(419).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(420).Value = CType(Original_CustomField6,String)
            End If
            If (Original_CustomField7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(421).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(422).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(421).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(422).Value = CType(Original_CustomField7,String)
            End If
            If (Original_CustomField8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(423).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(424).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(423).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(424).Value = CType(Original_CustomField8,String)
            End If
            If (Original_SeparationPayTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(425).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(426).Value = CType(Original_SeparationPayTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(425).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(426).Value = Global.System.DBNull.Value
            End If
            If (Original_ShiftScheduleTemplateGroupId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(427).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(428).Value = CType(Original_ShiftScheduleTemplateGroupId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(427).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(428).Value = Global.System.DBNull.Value
            End If
            If (Original_DateFiledofResignation.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(429).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(430).Value = CType(Original_DateFiledofResignation.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(429).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(430).Value = Global.System.DBNull.Value
            End If
            If (Original_ReasonForLeaving Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(431).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(432).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(431).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(432).Value = CType(Original_ReasonForLeaving,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(433).Value = CType(Original_IsRehirable,Boolean)
            If (Original_ClearanceStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(434).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(435).Value = CType(Original_ClearanceStatusId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(434).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(435).Value = Global.System.DBNull.Value
            End If
            If (Original_ClearanceIssuedById.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(436).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(437).Value = CType(Original_ClearanceIssuedById.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(436).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(437).Value = Global.System.DBNull.Value
            End If
            If (Original_WaiverAndQuitclaimFinalPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(438).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(439).Value = CType(Original_WaiverAndQuitclaimFinalPay.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(438).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(439).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(440).Value = CType(Original_IsReleasedWaiverAndQuitclaim,Boolean)
            If (Original_WaiverAndQuitclaimDateReleased.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(441).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(442).Value = CType(Original_WaiverAndQuitclaimDateReleased.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(441).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(442).Value = Global.System.DBNull.Value
            End If
            If (Original_WaiverAndQuitclaimReleasedById.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(443).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(444).Value = CType(Original_WaiverAndQuitclaimReleasedById.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(443).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(444).Value = Global.System.DBNull.Value
            End If
            If (Original_CardNum Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(445).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(446).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(445).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(446).Value = CType(Original_CardNum,String)
            End If
            If (Original_ReasonForLeavingType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(447).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(448).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(447).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(448).Value = CType(Original_ReasonForLeavingType,String)
            End If
            If (Original_HDMFID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(449).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(450).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(449).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(450).Value = CType(Original_HDMFID,String)
            End If
            If (Original_Lineage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(451).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(452).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(451).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(452).Value = CType(Original_Lineage,String)
            End If
            If (Original_LineageDepth.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(453).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(454).Value = CType(Original_LineageDepth.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(453).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(454).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyBranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(455).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(456).Value = CType(Original_CompanyBranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(455).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(456).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(457).Value = CType(Original_AllocationPayoutNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(458).Value = CType(Original_AllocationTypeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(459).Value = CType(Original_AllocationValue,Decimal)
            If (Original_PayrollAccountBranchCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(460).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(461).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(460).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(461).Value = CType(Original_PayrollAccountBranchCode,String)
            End If
            If (Original_AddressRegistered Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(462).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(463).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(462).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(463).Value = CType(Original_AddressRegistered,String)
            End If
            If (Original_AddressLocal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(464).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(465).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(464).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(465).Value = CType(Original_AddressLocal,String)
            End If
            If (Original_CTCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(466).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(467).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(466).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(467).Value = CType(Original_CTCNo,String)
            End If
            If (Original_CustomDateField6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(468).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(469).Value = CType(Original_CustomDateField6.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(468).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(469).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(470).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(471).Value = CType(Original_CustomDateField7.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(470).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(471).Value = Global.System.DBNull.Value
            End If
            If (Original_CustomDateField8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(472).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(473).Value = CType(Original_CustomDateField8.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(472).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(473).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(474).Value = CType(Original_CustomCheckbox1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(475).Value = CType(Original_CustomCheckbox2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(476).Value = CType(Original_CustomCheckbox3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(477).Value = CType(Original_CustomCheckbox4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(478).Value = CType(Original_CustomCheckbox5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(479).Value = CType(Original_CustomCheckbox6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(480).Value = CType(Original_CustomCheckbox7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(481).Value = CType(Original_CustomCheckbox8,Boolean)
            If (Original_BackPayCoverageFromDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(482).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(483).Value = CType(Original_BackPayCoverageFromDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(482).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(483).Value = Global.System.DBNull.Value
            End If
            If (Original_BackPayCoverageToDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(484).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(485).Value = CType(Original_BackPayCoverageToDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(484).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(485).Value = Global.System.DBNull.Value
            End If
            If (Original_PlainSSSNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(486).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(487).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(486).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(487).Value = CType(Original_PlainSSSNo,String)
            End If
            If (Original_MinTakeHomePayBasisId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(488).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(489).Value = CType(Original_MinTakeHomePayBasisId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(488).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(489).Value = Global.System.DBNull.Value
            End If
            If (Original_SuffixId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(490).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(491).Value = CType(Original_SuffixId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(490).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(491).Value = Global.System.DBNull.Value
            End If
            If (Original_ConcurrentEmployerName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(492).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(493).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(492).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(493).Value = CType(Original_ConcurrentEmployerName,String)
            End If
            If (Original_ConcurrentEmployerTIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(494).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(495).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(494).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(495).Value = CType(Original_ConcurrentEmployerTIN,String)
            End If
            If (Original_ConcurrentEmployerTINBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(496).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(497).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(496).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(497).Value = CType(Original_ConcurrentEmployerTINBranch,String)
            End If
            If (Original_DateEffectivityBasis.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(498).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(499).Value = CType(Original_DateEffectivityBasis.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(498).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(499).Value = Global.System.DBNull.Value
            End If
            If (Original_FormalName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FormalName")
            Else
                Me.Adapter.UpdateCommand.Parameters(500).Value = CType(Original_FormalName,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(501).Value = CType(Original_Name,String)
            End If
            If (Original_FullName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FullName")
            Else
                Me.Adapter.UpdateCommand.Parameters(502).Value = CType(Original_FullName,String)
            End If
            If (Original_ReasonForSeparationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(503).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(504).Value = CType(Original_ReasonForSeparationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(503).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(504).Value = Global.System.DBNull.Value
            End If
            If (Original_NationalityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(505).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(506).Value = CType(Original_NationalityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(505).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(506).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(507).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal EmployeeCode As String,  _
                    ByVal AccessCode As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal AddressForeign As String,  _
                    ByVal ZIPCodeAR As String,  _
                    ByVal ZIPCodeAL As String,  _
                    ByVal ZIPCodeAF As String,  _
                    ByVal TelNo As String,  _
                    ByVal TINNo As String,  _
                    ByVal BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal BankAccountNo As String,  _
                    ByVal BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal SSSNo As String,  _
                    ByVal PagIbigNo As String,  _
                    ByVal PhilHealthNo As String,  _
                    ByVal IsWife As Boolean,  _
                    ByVal RDOCode As String,  _
                    ByVal BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal DateHired As Global.System.Nullable(Of Date),  _
                    ByVal DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal PaymentTypeId As Integer,  _
                    ByVal PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Rate As Double,  _
                    ByVal MonthlyRate As Double,  _
                    ByVal PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal DailyRate As Double,  _
                    ByVal PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal HourlyRate As Double,  _
                    ByVal PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Allowance As Double,  _
                    ByVal MonthlyAllowance As Double,  _
                    ByVal PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal DailyAllowance As Double,  _
                    ByVal PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal HourlyAllowance As Double,  _
                    ByVal PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal COLA As Double,  _
                    ByVal MonthlyCOLA As Double,  _
                    ByVal DailyCOLA As Double,  _
                    ByVal HourlyCOLA As Double,  _
                    ByVal FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Active As Boolean,  _
                    ByVal WithPreviousER As Boolean,  _
                    ByVal ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal TimeSourceId As Integer,  _
                    ByVal Picture() As Byte,  _
                    ByVal CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal EmailAddress As String,  _
                    ByVal IsSSS As Boolean,  _
                    ByVal IsTax As Boolean,  _
                    ByVal IsPHIC As Boolean,  _
                    ByVal IsHDMF As Boolean,  _
                    ByVal IsUnion As Boolean,  _
                    ByVal IsEmailPayslip As Boolean,  _
                    ByVal PayslipPassword As String,  _
                    ByVal DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal System As Boolean,  _
                    ByVal LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal VersionNo As Integer,  _
                    ByVal PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal MobileNo As String,  _
                    ByVal DevicePassword As String,  _
                    ByVal LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal WTaxExempt As Boolean,  _
                    ByVal MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal TINBranch As String,  _
                    ByVal ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal IsProcessed As Boolean,  _
                    ByVal IsCleared As Boolean,  _
                    ByVal DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal EmployeePassword As String,  _
                    ByVal IsClosed As Boolean,  _
                    ByVal WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Remarks As String,  _
                    ByVal MotherMaidenName As String,  _
                    ByVal AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal IsMainEmployer As Boolean,  _
                    ByVal Nickname As String,  _
                    ByVal EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal IsSubstitutedFiling As Boolean,  _
                    ByVal PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal IsHusband As Boolean,  _
                    ByVal RemarksEmploymentInformation As String,  _
                    ByVal LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal ReasonForLeaving As String,  _
                    ByVal IsRehirable As Boolean,  _
                    ByVal ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal CardNum As String,  _
                    ByVal ReasonForLeavingType As String,  _
                    ByVal HDMFID As String,  _
                    ByVal Lineage As String,  _
                    ByVal LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal AllocationPayoutNo As Integer,  _
                    ByVal AllocationTypeId As Integer,  _
                    ByVal AllocationValue As Decimal,  _
                    ByVal PayrollAccountBranchCode As String,  _
                    ByVal CTCNo As String,  _
                    ByVal CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal CustomCheckbox1 As Boolean,  _
                    ByVal CustomCheckbox2 As Boolean,  _
                    ByVal CustomCheckbox3 As Boolean,  _
                    ByVal CustomCheckbox4 As Boolean,  _
                    ByVal CustomCheckbox5 As Boolean,  _
                    ByVal CustomCheckbox6 As Boolean,  _
                    ByVal CustomCheckbox7 As Boolean,  _
                    ByVal CustomCheckbox8 As Boolean,  _
                    ByVal BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal ConcurrentEmployerName As String,  _
                    ByVal ConcurrentEmployerTIN As String,  _
                    ByVal ConcurrentEmployerTINBranch As String,  _
                    ByVal DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_CompanyId As Integer,  _
                    ByVal Original_EmployeeCode As String,  _
                    ByVal Original_AccessCode As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_AddressForeign As String,  _
                    ByVal Original_ZIPCodeAR As String,  _
                    ByVal Original_ZIPCodeAL As String,  _
                    ByVal Original_ZIPCodeAF As String,  _
                    ByVal Original_TelNo As String,  _
                    ByVal Original_TINNo As String,  _
                    ByVal Original_BankAccountId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BankAccountNo As String,  _
                    ByVal Original_BankAccountTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SSSNo As String,  _
                    ByVal Original_PagIbigNo As String,  _
                    ByVal Original_PhilHealthNo As String,  _
                    ByVal Original_IsWife As Boolean,  _
                    ByVal Original_RDOCode As String,  _
                    ByVal Original_BirthDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateHired As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateSeparated As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateRegular As Global.System.Nullable(Of Date),  _
                    ByVal Original_YearWithPreviousER As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmploymentTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PaymentTypeId As Integer,  _
                    ByVal Original_PayrollFrequencyId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PreviousRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rate As Double,  _
                    ByVal Original_MonthlyRate As Double,  _
                    ByVal Original_PreviousMonthlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyRate As Double,  _
                    ByVal Original_PreviousDailyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyRate As Double,  _
                    ByVal Original_PreviousHourlyRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_PreviousAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_Allowance As Double,  _
                    ByVal Original_MonthlyAllowance As Double,  _
                    ByVal Original_PreviousMonthlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_DailyAllowance As Double,  _
                    ByVal Original_PreviousDailyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_HourlyAllowance As Double,  _
                    ByVal Original_PreviousHourlyAllowance As Global.System.Nullable(Of Double),  _
                    ByVal Original_COLA As Double,  _
                    ByVal Original_MonthlyCOLA As Double,  _
                    ByVal Original_DailyCOLA As Double,  _
                    ByVal Original_HourlyCOLA As Double,  _
                    ByVal Original_FixTaxRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_Active As Boolean,  _
                    ByVal Original_WithPreviousER As Boolean,  _
                    ByVal Original_ParameterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PositionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GenderId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TimeSourceId As Integer,  _
                    ByVal Original_CostCenterId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup1Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup2Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup3Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_PayElementScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Original_IsSSS As Boolean,  _
                    ByVal Original_IsTax As Boolean,  _
                    ByVal Original_IsPHIC As Boolean,  _
                    ByVal Original_IsHDMF As Boolean,  _
                    ByVal Original_IsUnion As Boolean,  _
                    ByVal Original_IsEmailPayslip As Boolean,  _
                    ByVal Original_PayslipPassword As String,  _
                    ByVal Original_DateEffective As Global.System.Nullable(Of Date),  _
                    ByVal Original_System As Boolean,  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VersionNo As Integer,  _
                    ByVal Original_PayGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MobileNo As String,  _
                    ByVal Original_DevicePassword As String,  _
                    ByVal Original_LeaveAccrualScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DaysInYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_SupervisorId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WTaxExempt As Boolean,  _
                    ByVal Original_MaxTaxableEarning As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TINBranch As String,  _
                    ByVal Original_ClassId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MinNetPayForLoan As Global.System.Nullable(Of Double),  _
                    ByVal Original_MinNetPayForLoanTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId1 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ApprovingId2 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EWTRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_SecurityUserLevelId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SecurityUserGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsProcessed As Boolean,  _
                    ByVal Original_IsCleared As Boolean,  _
                    ByVal Original_DateCleared As Global.System.Nullable(Of Date),  _
                    ByVal Original_EmployeePassword As String,  _
                    ByVal Original_IsClosed As Boolean,  _
                    ByVal Original_WebkioskRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TeamId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RegionId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_MotherMaidenName As String,  _
                    ByVal Original_AlphanumericTaxCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ResidenceStatusCodeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WebkioskLoginFailedAttempt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsMainEmployer As Boolean,  _
                    ByVal Original_Nickname As String,  _
                    ByVal Original_EmployeePasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsSubstitutedFiling As Boolean,  _
                    ByVal Original_PayslipPasswordDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SalutationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsHusband As Boolean,  _
                    ByVal Original_YearSeparated As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RemarksEmploymentInformation As String,  _
                    ByVal Original_LeaveForfeitScheduleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PayoutTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CitizenshipId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup4Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup5Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup6Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup7Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomGroup8Id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CustomDateField1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField3 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField4 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField5 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_SeparationPayTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ShiftScheduleTemplateGroupId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateFiledofResignation As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReasonForLeaving As String,  _
                    ByVal Original_IsRehirable As Boolean,  _
                    ByVal Original_ClearanceStatusId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ClearanceIssuedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_WaiverAndQuitclaimFinalPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsReleasedWaiverAndQuitclaim As Boolean,  _
                    ByVal Original_WaiverAndQuitclaimDateReleased As Global.System.Nullable(Of Date),  _
                    ByVal Original_WaiverAndQuitclaimReleasedById As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CardNum As String,  _
                    ByVal Original_ReasonForLeavingType As String,  _
                    ByVal Original_HDMFID As String,  _
                    ByVal Original_Lineage As String,  _
                    ByVal Original_LineageDepth As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CompanyBranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AllocationPayoutNo As Integer,  _
                    ByVal Original_AllocationTypeId As Integer,  _
                    ByVal Original_AllocationValue As Decimal,  _
                    ByVal Original_PayrollAccountBranchCode As String,  _
                    ByVal Original_AddressRegistered As String,  _
                    ByVal Original_AddressLocal As String,  _
                    ByVal Original_CTCNo As String,  _
                    ByVal Original_CustomDateField6 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField7 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomDateField8 As Global.System.Nullable(Of Date),  _
                    ByVal Original_CustomCheckbox1 As Boolean,  _
                    ByVal Original_CustomCheckbox2 As Boolean,  _
                    ByVal Original_CustomCheckbox3 As Boolean,  _
                    ByVal Original_CustomCheckbox4 As Boolean,  _
                    ByVal Original_CustomCheckbox5 As Boolean,  _
                    ByVal Original_CustomCheckbox6 As Boolean,  _
                    ByVal Original_CustomCheckbox7 As Boolean,  _
                    ByVal Original_CustomCheckbox8 As Boolean,  _
                    ByVal Original_BackPayCoverageFromDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BackPayCoverageToDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PlainSSSNo As String,  _
                    ByVal Original_MinTakeHomePayBasisId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SuffixId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ConcurrentEmployerName As String,  _
                    ByVal Original_ConcurrentEmployerTIN As String,  _
                    ByVal Original_ConcurrentEmployerTINBranch As String,  _
                    ByVal Original_DateEffectivityBasis As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FormalName As String,  _
                    ByVal Original_Name As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_ReasonForSeparationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_CompanyId, EmployeeCode, AccessCode, FirstName, MiddleName, LastName, AddressForeign, ZIPCodeAR, ZIPCodeAL, ZIPCodeAF, TelNo, TINNo, BankAccountId, BankAccountNo, BankAccountTypeId, SSSNo, PagIbigNo, PhilHealthNo, IsWife, RDOCode, BirthDate, DateHired, DateSeparated, DateRegular, YearWithPreviousER, ShiftScheduleId, EmploymentTypeId, PaymentTypeId, PayrollFrequencyId, TaxCodeId, PreviousRate, Rate, MonthlyRate, PreviousMonthlyRate, DailyRate, PreviousDailyRate, HourlyRate, PreviousHourlyRate, PreviousAllowance, Allowance, MonthlyAllowance, PreviousMonthlyAllowance, DailyAllowance, PreviousDailyAllowance, HourlyAllowance, PreviousHourlyAllowance, COLA, MonthlyCOLA, DailyCOLA, HourlyCOLA, FixTaxRate, Active, WithPreviousER, ParameterId, PositionId, MaritalStatusId, GenderId, TimeSourceId, Picture, CostCenterId, DepartmentId, CustomGroup1Id, CustomGroup2Id, CustomGroup3Id, CustomField1, CustomField2, CustomField3, PayElementScheduleId, EmailAddress, IsSSS, IsTax, IsPHIC, IsHDMF, IsUnion, IsEmailPayslip, PayslipPassword, DateEffective, System, LocationId, VersionNo, PayGroupId, MobileNo, DevicePassword, LeaveAccrualScheduleId, ContractStartDate, ContractEndDate, DaysInYear, SupervisorId, WTaxExempt, MaxTaxableEarning, TINBranch, ClassId, MinNetPayForLoan, MinNetPayForLoanTypeId, ApprovingId1, ApprovingId2, EWTRate, SecurityUserLevelId, SecurityUserGroupId, IsProcessed, IsCleared, DateCleared, EmployeePassword, IsClosed, WebkioskRoleId, TeamId, RegionId, Remarks, MotherMaidenName, AlphanumericTaxCodeId, ResidenceStatusCodeId, WebkioskLoginFailedAttempt, IsMainEmployer, Nickname, EmployeePasswordDate, IsSubstitutedFiling, PayslipPasswordDate, SalutationId, IsHusband, RemarksEmploymentInformation, LeaveForfeitScheduleId, PayoutTypeId, CitizenshipId, CustomGroup4Id, CustomGroup5Id, CustomGroup6Id, CustomGroup7Id, CustomGroup8Id, CustomDateField1, CustomDateField2, CustomDateField3, CustomDateField4, CustomDateField5, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, SeparationPayTypeId, ShiftScheduleTemplateGroupId, DateFiledofResignation, ReasonForLeaving, IsRehirable, ClearanceStatusId, ClearanceIssuedById, WaiverAndQuitclaimFinalPay, IsReleasedWaiverAndQuitclaim, WaiverAndQuitclaimDateReleased, WaiverAndQuitclaimReleasedById, CardNum, ReasonForLeavingType, HDMFID, Lineage, LineageDepth, CompanyBranchId, AllocationPayoutNo, AllocationTypeId, AllocationValue, PayrollAccountBranchCode, CTCNo, CustomDateField6, CustomDateField7, CustomDateField8, CustomCheckbox1, CustomCheckbox2, CustomCheckbox3, CustomCheckbox4, CustomCheckbox5, CustomCheckbox6, CustomCheckbox7, CustomCheckbox8, BackPayCoverageFromDate, BackPayCoverageToDate, MinTakeHomePayBasisId, SuffixId, ConcurrentEmployerName, ConcurrentEmployerTIN, ConcurrentEmployerTINBranch, DateEffectivityBasis, ReasonForSeparationId, NationalityId, Original_Id, Original_CompanyId, Original_EmployeeCode, Original_AccessCode, Original_FirstName, Original_MiddleName, Original_LastName, Original_AddressForeign, Original_ZIPCodeAR, Original_ZIPCodeAL, Original_ZIPCodeAF, Original_TelNo, Original_TINNo, Original_BankAccountId, Original_BankAccountNo, Original_BankAccountTypeId, Original_SSSNo, Original_PagIbigNo, Original_PhilHealthNo, Original_IsWife, Original_RDOCode, Original_BirthDate, Original_DateHired, Original_DateSeparated, Original_DateRegular, Original_YearWithPreviousER, Original_ShiftScheduleId, Original_EmploymentTypeId, Original_PaymentTypeId, Original_PayrollFrequencyId, Original_TaxCodeId, Original_PreviousRate, Original_Rate, Original_MonthlyRate, Original_PreviousMonthlyRate, Original_DailyRate, Original_PreviousDailyRate, Original_HourlyRate, Original_PreviousHourlyRate, Original_PreviousAllowance, Original_Allowance, Original_MonthlyAllowance, Original_PreviousMonthlyAllowance, Original_DailyAllowance, Original_PreviousDailyAllowance, Original_HourlyAllowance, Original_PreviousHourlyAllowance, Original_COLA, Original_MonthlyCOLA, Original_DailyCOLA, Original_HourlyCOLA, Original_FixTaxRate, Original_Active, Original_WithPreviousER, Original_ParameterId, Original_PositionId, Original_MaritalStatusId, Original_GenderId, Original_TimeSourceId, Original_CostCenterId, Original_DepartmentId, Original_CustomGroup1Id, Original_CustomGroup2Id, Original_CustomGroup3Id, Original_CustomField1, Original_CustomField2, Original_CustomField3, Original_PayElementScheduleId, Original_EmailAddress, Original_IsSSS, Original_IsTax, Original_IsPHIC, Original_IsHDMF, Original_IsUnion, Original_IsEmailPayslip, Original_PayslipPassword, Original_DateEffective, Original_System, Original_LocationId, Original_VersionNo, Original_PayGroupId, Original_MobileNo, Original_DevicePassword, Original_LeaveAccrualScheduleId, Original_ContractStartDate, Original_ContractEndDate, Original_DaysInYear, Original_SupervisorId, Original_WTaxExempt, Original_MaxTaxableEarning, Original_TINBranch, Original_ClassId, Original_MinNetPayForLoan, Original_MinNetPayForLoanTypeId, Original_ApprovingId1, Original_ApprovingId2, Original_EWTRate, Original_SecurityUserLevelId, Original_SecurityUserGroupId, Original_IsProcessed, Original_IsCleared, Original_DateCleared, Original_EmployeePassword, Original_IsClosed, Original_WebkioskRoleId, Original_TeamId, Original_RegionId, Original_Remarks, Original_MotherMaidenName, Original_AlphanumericTaxCodeId, Original_ResidenceStatusCodeId, Original_WebkioskLoginFailedAttempt, Original_IsMainEmployer, Original_Nickname, Original_EmployeePasswordDate, Original_IsSubstitutedFiling, Original_PayslipPasswordDate, Original_SalutationId, Original_IsHusband, Original_YearSeparated, Original_RemarksEmploymentInformation, Original_LeaveForfeitScheduleId, Original_PayoutTypeId, Original_CitizenshipId, Original_CustomGroup4Id, Original_CustomGroup5Id, Original_CustomGroup6Id, Original_CustomGroup7Id, Original_CustomGroup8Id, Original_CustomDateField1, Original_CustomDateField2, Original_CustomDateField3, Original_CustomDateField4, Original_CustomDateField5, Original_CustomField4, Original_CustomField5, Original_CustomField6, Original_CustomField7, Original_CustomField8, Original_SeparationPayTypeId, Original_ShiftScheduleTemplateGroupId, Original_DateFiledofResignation, Original_ReasonForLeaving, Original_IsRehirable, Original_ClearanceStatusId, Original_ClearanceIssuedById, Original_WaiverAndQuitclaimFinalPay, Original_IsReleasedWaiverAndQuitclaim, Original_WaiverAndQuitclaimDateReleased, Original_WaiverAndQuitclaimReleasedById, Original_CardNum, Original_ReasonForLeavingType, Original_HDMFID, Original_Lineage, Original_LineageDepth, Original_CompanyBranchId, Original_AllocationPayoutNo, Original_AllocationTypeId, Original_AllocationValue, Original_PayrollAccountBranchCode, Original_AddressRegistered, Original_AddressLocal, Original_CTCNo, Original_CustomDateField6, Original_CustomDateField7, Original_CustomDateField8, Original_CustomCheckbox1, Original_CustomCheckbox2, Original_CustomCheckbox3, Original_CustomCheckbox4, Original_CustomCheckbox5, Original_CustomCheckbox6, Original_CustomCheckbox7, Original_CustomCheckbox8, Original_BackPayCoverageFromDate, Original_BackPayCoverageToDate, Original_PlainSSSNo, Original_MinTakeHomePayBasisId, Original_SuffixId, Original_ConcurrentEmployerName, Original_ConcurrentEmployerTIN, Original_ConcurrentEmployerTINBranch, Original_DateEffectivityBasis, Original_FormalName, Original_Name, Original_FullName, Original_ReasonForSeparationId, Original_NationalityId, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblPositionsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblPositions"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("Active", "Active")
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId")
            tableMapping.ColumnMappings.Add("VersionNo", "VersionNo")
            tableMapping.ColumnMappings.Add("Ranking", "Ranking")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblPositions] WHERE (([Id] = @Original_Id) AND ([Code] = @Orig"& _ 
                "inal_Code) AND ([Name] = @Original_Name) AND ([Active] = @Original_Active) AND ("& _ 
                "[CompanyId] = @Original_CompanyId) AND ([VersionNo] = @Original_VersionNo) AND ("& _ 
                "[Ranking] = @Original_Ranking))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ranking", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ranking", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblPositions] ([Code], [Name], [Active], [CompanyId], [Version"& _ 
                "No], [Ranking]) VALUES (@Code, @Name, @Active, @CompanyId, @VersionNo, @Ranking)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, Code, Name, Active, CompanyId, VersionNo, Ranking FROM tblPosition"& _ 
                "s WHERE (Id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ranking", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ranking", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblPositions] SET [Code] = @Code, [Name] = @Name, [Active] = @Activ"& _ 
                "e, [CompanyId] = @CompanyId, [VersionNo] = @VersionNo, [Ranking] = @Ranking WHER"& _ 
                "E (([Id] = @Original_Id) AND ([Code] = @Original_Code) AND ([Name] = @Original_N"& _ 
                "ame) AND ([Active] = @Original_Active) AND ([CompanyId] = @Original_CompanyId) A"& _ 
                "ND ([VersionNo] = @Original_VersionNo) AND ([Ranking] = @Original_Ranking));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT Id, Code, Name, Active, CompanyId, VersionNo, Ranking FROM tblPositions WHE"& _ 
                "RE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ranking", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ranking", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ranking", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ranking", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SickLeaveScreening.My.MySettings.Default.JeonsoftConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Code, Name, Active, CompanyId, VersionNo, Ranking FROM dbo.tblPosition"& _ 
                "s"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsJeonsoft.tblPositionsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsJeonsoft.tblPositionsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsJeonsoft.tblPositionsDataTable = New dsJeonsoft.tblPositionsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsJeonsoft.tblPositionsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsJeonsoft) As Integer
            Return Me.Adapter.Update(dataSet, "tblPositions")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer, ByVal Original_Ranking As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Code,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Name,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Active,Boolean)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CompanyId,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_VersionNo,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Ranking,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Ranking As Integer) As Integer
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Name,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Active,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CompanyId,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(VersionNo,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Ranking,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Ranking As Integer, ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer, ByVal Original_Ranking As Integer, ByVal Id As Integer) As Integer
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CompanyId,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(VersionNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Ranking,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Id,Integer)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Code,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CompanyId,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_VersionNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Ranking,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Ranking As Integer, ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer, ByVal Original_Ranking As Integer) As Integer
            Return Me.Update(Code, Name, Active, CompanyId, VersionNo, Ranking, Original_Id, Original_Code, Original_Name, Original_Active, Original_CompanyId, Original_VersionNo, Original_Ranking, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblTeamsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblTeams"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("Active", "Active")
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId")
            tableMapping.ColumnMappings.Add("VersionNo", "VersionNo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblTeams] WHERE (([Id] = @Original_Id) AND ((@IsNull_Code = 1 "& _ 
                "AND [Code] IS NULL) OR ([Code] = @Original_Code)) AND ([Name] = @Original_Name) "& _ 
                "AND ([Active] = @Original_Active) AND ([CompanyId] = @Original_CompanyId) AND (["& _ 
                "VersionNo] = @Original_VersionNo))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblTeams] ([Code], [Name], [Active], [CompanyId], [VersionNo])"& _ 
                " VALUES (@Code, @Name, @Active, @CompanyId, @VersionNo);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, Code, Name,"& _ 
                " Active, CompanyId, VersionNo FROM tblTeams WHERE (Id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblTeams] SET [Code] = @Code, [Name] = @Name, [Active] = @Active, ["& _ 
                "CompanyId] = @CompanyId, [VersionNo] = @VersionNo WHERE (([Id] = @Original_Id) A"& _ 
                "ND ((@IsNull_Code = 1 AND [Code] IS NULL) OR ([Code] = @Original_Code)) AND ([Na"& _ 
                "me] = @Original_Name) AND ([Active] = @Original_Active) AND ([CompanyId] = @Orig"& _ 
                "inal_CompanyId) AND ([VersionNo] = @Original_VersionNo));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, Code, Name"& _ 
                ", Active, CompanyId, VersionNo FROM tblTeams WHERE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Active", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Active", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VersionNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VersionNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SickLeaveScreening.My.MySettings.Default.JeonsoftConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Code, Name, Active, CompanyId, VersionNo FROM dbo.tblTeams"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsJeonsoft.tblTeamsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsJeonsoft.tblTeamsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsJeonsoft.tblTeamsDataTable = New dsJeonsoft.tblTeamsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsJeonsoft.tblTeamsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsJeonsoft) As Integer
            Return Me.Adapter.Update(dataSet, "tblTeams")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Code,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Name,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Active,Boolean)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CompanyId,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_VersionNo,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer) As Integer
            If (Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Name,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Active,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CompanyId,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(VersionNo,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer, ByVal Id As Integer) As Integer
            If (Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CompanyId,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(VersionNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Id,Integer)
            If (Original_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Code,String)
            End If
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Active,Boolean)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CompanyId,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_VersionNo,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As String, ByVal Name As String, ByVal Active As Boolean, ByVal CompanyId As Integer, ByVal VersionNo As Integer, ByVal Original_Id As Integer, ByVal Original_Code As String, ByVal Original_Name As String, ByVal Original_Active As Boolean, ByVal Original_CompanyId As Integer, ByVal Original_VersionNo As Integer) As Integer
            Return Me.Update(Code, Name, Active, CompanyId, VersionNo, Original_Id, Original_Code, Original_Name, Original_Active, Original_CompanyId, Original_VersionNo, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblEmployeesTableAdapter As tblEmployeesTableAdapter
        
        Private _tblPositionsTableAdapter As tblPositionsTableAdapter
        
        Private _tblTeamsTableAdapter As tblTeamsTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblEmployeesTableAdapter() As tblEmployeesTableAdapter
            Get
                Return Me._tblEmployeesTableAdapter
            End Get
            Set
                Me._tblEmployeesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblPositionsTableAdapter() As tblPositionsTableAdapter
            Get
                Return Me._tblPositionsTableAdapter
            End Get
            Set
                Me._tblPositionsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblTeamsTableAdapter() As tblTeamsTableAdapter
            Get
                Return Me._tblTeamsTableAdapter
            End Get
            Set
                Me._tblTeamsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblEmployeesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblEmployeesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblEmployeesTableAdapter.Connection
                End If
                If ((Not (Me._tblPositionsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblPositionsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblPositionsTableAdapter.Connection
                End If
                If ((Not (Me._tblTeamsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblTeamsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblTeamsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsJeonsoft, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblEmployees.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblEmployeesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblPositions.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblPositionsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblTeams.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblTeamsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsJeonsoft, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblEmployees.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblEmployeesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblPositions.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblPositionsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblTeams.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblTeamsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsJeonsoft, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblTeams.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblTeamsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblPositions.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblPositionsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblEmployees.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblEmployeesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsJeonsoft) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblEmployeesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblEmployeesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblPositionsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblPositionsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblTeamsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblTeamsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblEmployeesTableAdapter, Me._tblEmployeesTableAdapter.Connection)
                    Me._tblEmployeesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblEmployeesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblEmployeesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblEmployeesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblEmployeesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblPositionsTableAdapter, Me._tblPositionsTableAdapter.Connection)
                    Me._tblPositionsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblPositionsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblPositionsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblPositionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblPositionsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblTeamsTableAdapter, Me._tblTeamsTableAdapter.Connection)
                    Me._tblTeamsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblTeamsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblTeamsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblTeamsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblTeamsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblEmployeesTableAdapter) Is Nothing) Then
                    Me._tblEmployeesTableAdapter.Connection = CType(revertConnections(Me._tblEmployeesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblEmployeesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblPositionsTableAdapter) Is Nothing) Then
                    Me._tblPositionsTableAdapter.Connection = CType(revertConnections(Me._tblPositionsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblPositionsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblTeamsTableAdapter) Is Nothing) Then
                    Me._tblTeamsTableAdapter.Connection = CType(revertConnections(Me._tblTeamsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblTeamsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
